{"version":3,"sources":["webpack://cardgameproject/webpack/bootstrap","webpack://cardgameproject/webpack/runtime/define property getters","webpack://cardgameproject/webpack/runtime/hasOwnProperty shorthand","webpack://cardgameproject/./js/modules/eventsModel.js","webpack://cardgameproject/./js/modules/cardsModel.js","webpack://cardgameproject/./js/cards.js","webpack://cardgameproject/./js/animation_and_sound_effects/animation.js","webpack://cardgameproject/./js/modules/gameModel.js","webpack://cardgameproject/./js/modules/boardModel.js","webpack://cardgameproject/./js/modules/boardView.js","webpack://cardgameproject/./js/modules/gameController.js","webpack://cardgameproject/./js/modules/playerModel.js","webpack://cardgameproject/./js/modules/playerView.js","webpack://cardgameproject/./js/modules/playerController.js","webpack://cardgameproject/./js/modules/boardController.js","webpack://cardgameproject/./js/game.js"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Events","this","listeners","listener","push","arg1","arg2","forEach","index","Cards","id","type","cost","effect","icon","name","sideEffect","skillCollection","warrior","gameObserver","activePlayer","healthPoints","defendPoints","boardModel","cardInHand","children","length","passivePlayer","rogue","mage","Math","floor","random","shakeAnimation","queryElement","direction","element","document","querySelector","classList","remove","setTimeout","add","createCardAnim","amount","elementAnim","i","contains","playSoundEffect","attackAnimation","className","src","container","parentElement","image","createElement","style","transform","appendChild","removeChild","standartAttackAnimation","soundEffect","currentTime","play","attackAnimationEffect","querySelectorAll","Game","playerOneTurn","playerTwoTurn","playerOneClass","playerTwoClass","playerOnePullOfCards","playerTwoPullOfCards","playersInfo","dragCard","tempCard","selectionEnd","selectionContinue","choosePlayerInfo","updatePlayersNames","updatePlayersModels","init","setPlayersChoiceInfo","setPlayersClasses","setPlayersNames","setPlayersModels","setTextChooseInfo","setActivePassivePlayer","player1","player2","object","temp","localStorage","getItem","JSON","parse","notify","playerOneName","playerTwoName","cards","counter","getElementsByClassName","tempCardChoosePlayer","dataset","info","checkOnSelectedCards","setTurnPriority","checkCardsSelectionEnd","datainfo","search","j","eventTarget","find","Board","model","gameModel","decWrapper","btnAccept","cardsChooseCounter","battleField","endTurn","playersTurnInfo","cardsPlayField","soundOffOn","playersOverlay","playersDeck","playersDeckClose","showDeckPlayer1","showDeckPlayer2","onCreateCards","onCounterChange","removeCards","removeActionCard","createAnimation","endTurnAnimation","playerClassInfo","removeExtraCards","createCards","target","state","card","appendPlace","draggable","elDiv","setAttribute","backgroundImage","tempIndex","n","indexOf","place","orderToRemove","condition","staminaPoints","toggle","counterInfo","number","color","event","preventDefault","textContent","BoardView","board","game","selector","boardSelector","onLoadCreate","onDefineCards","onAnimCards","submitCardCheckChoose","cardInHandChoosen","grabCardStart","grabCardEnd","preventDrag","dropEvent","doCardAction","showPlayerDeck","addEventListener","attach","drawCards","counterUpdate","selectionEndUpdate","extraCardsToRemove","text","playerChooseInfoUpdate","name1","name2","playerNameUpdate","modelPlayer1","modelPlayer2","playerModelsUpdate","deleteActionCard","side","display","player1Model","player2Model","data","console","log","button","turnAnnouncer","removeProperty","left","right","endTurnAnim","GameController","view","boardView","defineCards","doCardCheckChoose","actionCard","doEndTurn","definePlayersCardSet","initActionCard","turnEndsNextPlayerTurn","Players","playerViewUpdate","cardDraw","cardDiscard","actionAnimation","updateView","standartAttack","attackDrawDiscard","sideEffectAttack","standartDefend","sideEffectDefend","defendDrawDiscard","defendWithAttack","randomCardDraw","randomDiscard","test","abs","undefined","randomCardDiscard","massiveRandomDraw","PlayersView","playerOneModel","playerTwoModel","playerContainer","playerOneHPValue","playerOneDefenceValue","playerOneStaminaValue","playerOneHP","playerTwoHPValue","playerTwoDefenceValue","playerTwoStaminaValue","playerTwoHP","updateViewPlayer","doAnimation","width","activePlayerUI","passivePlayerUI","amountEffect","effectStorage","elem","multipleAttackAnimation","overlay","overlayClose","ultimateSkillAnimation","PlayersController","playCard","priority","doAction","BoardController","playerModel1","playerModel2","createCard","cardAnimBoard","cardAnimHand","grabedCardAnim","createCardsInHand","setPlayersTurnInfo","showPlayersDeck","closePlayersDeck","addCardInHand","deleteRandomCard","turnOnOfSound","createCardsForChoose","cardChooseAnim","cardChooseAnimInHandAdd","cardChooseAnimInHandRemove","pullRandomCardsInHand","dragCardStart","dragCardEnd","dragPreventAction","deletePlayedCard","showCardsForPlayers","openCloseOverlay","showWhichTurn","backAudio","hash","window","location","decodeURIComponent","substr","paused","pause","start"],"mappings":"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","file":"main.bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export default class Events {\r\n\tconstructor() {\r\n\t\tthis.listeners = [];\r\n\t}\r\n\r\n\tattach(listener) {\r\n\t\tthis.listeners.push(listener);\r\n\t}\r\n\r\n\tnotify(arg1, arg2) {\r\n\t\tthis.listeners.forEach((listener, index) => {\r\n\t\t\tthis.listeners[index](arg1, arg2);\r\n\t\t});\r\n\t}\r\n}\r\n","export default class Cards {\r\n\tconstructor(id, type, cost, effect, icon, name, sideEffect) {\r\n\t\tthis.id = id;\r\n\t\tthis.cost = cost;\r\n\t\tthis.type = type;\r\n\t\tthis.effect = effect;\r\n\t\tthis.icon = icon;\r\n\t\tthis.name = name;\r\n\t\tthis.sideEffect = sideEffect;\r\n\t}\r\n}\r\n","import Cards from './modules/cardsModel';\r\nimport {gameObserver} from './game';\r\nimport {boardModel} from './game';\r\n\r\n//START CREATING WARRIOR'S CARDS\r\nconst strike_w = new Cards(0, 'attack', 1, 6, 'images/cards/warrior/Strike.png', 'strike_w');\r\n\r\nconst bash = new Cards(1, 'attack', 1, 8, 'images/cards/warrior/Bash.png', 'bash');\r\n\r\nconst anger = new Cards(2, 'attackAddEffect', 1, 6, 'images/cards/warrior/anger.png', 'anger',\r\n\t() => {\r\n\t\tlet effect;\r\n\t\tif (gameObserver.activePlayer.healthPoints < 50) {\r\n\t\t\teffect = 13;\r\n\t\t} else {\r\n\t\t\teffect = 6;\r\n\t\t}\r\n\t\treturn effect;\r\n\t});\r\n\r\nconst bodySlam = new Cards(3, 'attackAddEffect', 2, 0, 'images/cards/warrior/BodySlam.png', 'bodySlam', () => {\r\n\tlet effect;\r\n\tif (gameObserver.activePlayer.defendPoints > 0) {\r\n\t\teffect = gameObserver.activePlayer.defendPoints;\r\n\t} else {\r\n\t\teffect = 0;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst perfecedStrike = new Cards(4, 'attackAddEffect', 1, 6, 'images/cards/warrior/PerfectedStrike.png', 'perfectedStrike', () => 6 + boardModel.cardInHand.children.length);\r\n\r\nconst bludgeon = new Cards(5, 'attackAddEffect', 3, 12, 'images/cards/warrior/Bludgeon.png', 'bludgeon', () => {\r\n\tlet effect;\r\n\tif (gameObserver.passivePlayer.healthPoints > 50) {\r\n\t\teffect = 17;\r\n\t} else {\r\n\t\teffect = 12;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst defend_w = new Cards(6, 'defend', 1, 5, 'images/cards/warrior/Defend_R.png', 'defend_w');\r\n\r\nconst armaments = new Cards(7, 'defendAddEffect', 1, 5, 'images/cards/warrior/Armaments.png', 'armaments', () => {\r\n\tlet effect;\r\n\tif (gameObserver.activePlayer.defendPoints === 0) {\r\n\t\teffect = 7;\r\n\t} else {\r\n\t\teffect = 5;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst ironWave = new Cards(8, 'defendAndAttack', 1, 5, 'images/cards/warrior/IronWave.png', 'ironWave', () => 5);\r\n\r\nconst warcry = new Cards(9, 'defendDrawDiscard', 0, 1, 'images/cards/warrior/Warcry.png', 'warcry');\r\n\r\nconst bloodletting = new Cards(10, 'defendDrawDiscard', 0, 3, 'images/cards/warrior/Bloodletting.png', 'bloodletting');\r\n\r\nconst entrench = new Cards(11, 'defendAddEffect', 2, 2, 'images/cards/warrior/Entrench.png', 'entrench', () => gameObserver.activePlayer.defendPoints * 2 - gameObserver.activePlayer.defendPoints);\r\n\r\n//START CREATING ROGUE'S CARDS\r\nconst strike_r = new Cards(0, 'attack', 1, 6, 'images/cards/rogue/Strike_G.png', 'strike_r');\r\n\r\nconst daggerThrow = new Cards(1, 'attackDrawDiscard', 1, 9, 'images/cards/rogue/R_dagger-throw.png', 'daggerThrow');\r\n\r\nconst flechettes = new Cards(2, 'attackAddEffect', 1, 3, 'images/cards/rogue/Flechettes.png', 'flechettes', () => 3 * boardModel.cardInHand.children.length);\r\n\r\nconst riddleWithHoles = new Cards(3, 'attackAddEffect', 2, 7, 'images/cards/rogue/RiddleWithHoles.png', 'riddleWithHoles');\r\n\r\nconst slice = new Cards(4, 'attack', 0, 4, 'images/cards/rogue/Slice.png', 'slice');\r\n\r\nconst quickSlash = new Cards(5, 'attackDrawDiscard', 1, 7, 'images/cards/rogue/QuickSlash.png', 'quickSlash');\r\n\r\nconst survivor = new Cards(6, 'defendDrawDiscard', 1, 8, 'images/cards/rogue/Survivor.png', 'survivor');\r\n\r\nconst deflect = new Cards(7, 'defend', 0, 4, 'images/cards/rogue/Deflect.png', 'deflect');\r\n\r\nconst backFlip = new Cards(8, 'defendDrawDiscard', 1, 2, 'images/cards/rogue/Backflip.png', 'backFlip', () => 5);\r\n\r\nconst prepared = new Cards(9, 'defendDrawDiscard', 0, 1, 'images/cards/rogue/Prepared.png', 'prepared');\r\n\r\nconst expertise = new Cards(10, 'defendDrawDiscard', 1, 5, 'images/cards/rogue/Expertise.png', 'expertise');\r\n\r\nconst dash = new Cards(11, 'defendAndAttack', 2, 10, 'images/cards/rogue/Dash.png', 'dash', () => 8);\r\n\r\n//START CREATING MAGE'S CARDS\r\nconst strike_m = new Cards(0, 'attack', 1, 6, 'images/cards/mage/Strike_P.png', 'strike_m');\r\n\r\nconst cutThroughFate = new Cards(1, 'attackDrawDiscard', 1, 7, 'images/cards/mage/CutThroughFate.png', 'cutThroughFate', () => 2);\r\n\r\nconst reachHeaven = new Cards(2, 'attack', 2, 10, 'images/cards/mage/ReachHeaven.png', 'reachHeaven');\r\n\r\nconst signatureMove = new Cards(3, 'attackAddEffect', 2, 0, 'images/cards/mage/SignatureMove.png', 'signatureMove', () => gameObserver.passivePlayer.defendPoints);\r\n\r\nconst tantrum = new Cards(4, 'attackAddEffect', 1, 3, 'images/cards/mage/Tantrum.png', 'tantrum', () => 3 + (Math.floor(Math.random() * (6 - 1)) + 1));\r\n\r\nconst judjment = new Cards(5, 'attackAddEffect', 2, 0, 'images/cards/mage/Judgment.png', 'judjment', () => {\r\n\tlet effect;\r\n\tif (gameObserver.passivePlayer.healthPoints <= 15) {\r\n\t\teffect = 0;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst masterReality = new Cards(6, 'defendAddEffect', 1, 5, 'images/cards/mage/MasterReality.png', 'masterReality', () => {\r\n\tlet effect;\r\n\tif (gameObserver.activePlayer.defendPoints == 0) {\r\n\t\teffect = 10;\r\n\t} else {\r\n\t\teffect = 5;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst defend_m = new Cards(7, 'defend', 1, 5, 'images/cards/mage/Defend_P.png', 'defend_m');\r\n\r\nconst meditate = new Cards(8, 'defendAddEffect', 1, 3, 'images/cards/mage/Meditate.png', 'meditate');\r\n\r\nconst thirdEye = new Cards(9, 'defendDrawDiscard', 1, 7, 'images/cards/mage/ThirdEye.png', 'thirdEye');\r\n\r\nconst nirvana = new Cards(10, 'defendAddEffect', 1, 0, 'images/cards/mage/Nirvana.png', 'nirvana', () => gameObserver.passivePlayer.defendPoints);\r\n\r\nconst alpha = new Cards(11, 'defendDrawDiscard', 1, 4, 'images/cards/mage/Alpha.png', 'alpha');\r\n\r\n\r\nexport const skillCollection = {\r\n\twarrior: [strike_w, bash, anger, bodySlam, perfecedStrike, bludgeon, defend_w, armaments, ironWave, warcry, bloodletting, entrench],\r\n\trogue: [strike_r, daggerThrow, flechettes, riddleWithHoles, slice, quickSlash, survivor, deflect, backFlip, prepared, expertise, dash],\r\n\tmage: [strike_m, cutThroughFate, reachHeaven, signatureMove, tantrum, judjment, masterReality, defend_m, meditate, thirdEye, nirvana, alpha]\r\n};\r\n","// animation through all menu loading black screen\r\nfunction loading(target) {\r\n\tswitch (target) {\r\n\t\tcase 'mainMenuLoad':\r\n\t\t\tlet mainEl = document.createElement('div');\r\n\r\n\t\t\tmainEl.className = 'back-main-menu-anim';\r\n\r\n\t\t\tdocument.body.insertBefore(mainEl, document.querySelector('.wrapper-choose-menu'));\r\n\r\n\t\t\tsetTimeout(() => document.body.removeChild(mainEl), 1100);\r\n\t\t\tbreak;\r\n\t\tcase 'chooseMenuLoad':\r\n\t\t\tlet chooseEl = document.createElement('div');\r\n\r\n\t\t\tchooseEl.className = 'go-to-choose-menu-anim';\r\n\r\n\t\t\tdocument.body.insertBefore(chooseEl, document.querySelector('.wrapper-main-menu'));\r\n\r\n\t\t\tsetTimeout(() => document.body.removeChild(chooseEl), 1100);\r\n\t\t\tbreak;\r\n\t\tcase 'battleFieldLoad':\r\n\t\t\tlet battleEl = document.createElement('div');\r\n\r\n\t\t\tbattleEl.className = 'start-game-anim';\r\n\r\n\t\t\tdocument.body.insertBefore(battleEl, document.querySelector('.wrapper-choose-menu'));\r\n\r\n\t\t\tsetTimeout(() => document.body.removeChild(battleEl), 1100);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\n// starting play backgorundMusic\r\nfunction switchPlayPause() {\r\n\tconst hash = window.location.hash;\r\n\tconst state = decodeURIComponent(hash.substr(1));\r\n\tconst soundOffOn = document.querySelector('.soundIcon');\r\n\tlet backAudio;\r\n\r\n\tif (state == 'battle-field') {\r\n\t\tbackAudio = document.querySelector('.background-music-battlefield');\r\n\t} else {\r\n\t\tbackAudio = document.querySelector('.background-music-main-menu');\r\n\t}\r\n\r\n\tif (backAudio.paused) {\r\n\t\tbackAudio.play();\r\n\t\tsoundOffOn.className = 'fas fa-volume-up soundIcon';\r\n\t} else {\r\n\t\tbackAudio.pause();\r\n\t\tsoundOffOn.className = 'fas fa-volume-mute soundIcon';\r\n\t}\r\n}\r\n\r\nconst checkBackgroundAudio = (function (querySelector) {\r\n\tconst currentHash = [];\r\n\tconst mainAudio = document.querySelector('.background-music-main-menu');\r\n\tconst audio = document.querySelector('.background-music-battlefield');\r\n\tconst allAudio = document.querySelectorAll('.music');\r\n\r\n\treturn function () {\r\n\t\tcurrentHash.push(decodeURIComponent(window.location.hash.substr(1)));\r\n\r\n\t\tconst soundOffOn = document.querySelector(querySelector);\r\n\r\n\t\tif (currentHash[currentHash.length - 1] === 'battle-field' && [...allAudio].every(element => element.paused)) {\r\n\t\t\tmainAudio.pause();\r\n\t\t\taudio.pause();\r\n\t\t} else if (currentHash[currentHash.length - 1] === 'battle-field' && [...allAudio].some(element => element.paused)) {\r\n\t\t\tmainAudio.pause();\r\n\t\t\taudio.play();\r\n\t\t} else if (currentHash[currentHash.length - 1] === 'choose-menu' &&\r\n\t\t\tcurrentHash[currentHash.length - 2] === 'battle-field' && [...allAudio].every(element => element.paused)) {\r\n\t\t\tmainAudio.pause();\r\n\t\t\taudio.pause();\r\n\t\t} else if (currentHash[currentHash.length - 1] === 'choose-menu' &&\r\n\t\t\tcurrentHash[currentHash.length - 2] === 'battle-field' && [...allAudio].some(element => element.paused)) {\r\n\t\t\tmainAudio.play();\r\n\t\t\taudio.pause();\r\n\t\t}\r\n\r\n\t\tif ([...allAudio].every(element => element.paused)) {\r\n\t\t\tsoundOffOn.className = 'fas fa-volume-mute soundIcon';\r\n\t\t} else {\r\n\t\t\tsoundOffOn.className = 'fas fa-volume-up soundIcon';\r\n\t\t}\r\n\t};\r\n}('.soundIcon'));\r\n\r\n// shake display when character choosed\r\nfunction shakeAnimation(queryElement, direction = 'horizontal') {\r\n\tconst element = document.querySelector(queryElement);\r\n\r\n\tswitch (direction) {\r\n\t\tcase 'horizontal':\r\n\t\t\telement.classList.remove('shakeX');\r\n\t\t\tsetTimeout(() => element.classList.add('shakeX'), 0);\r\n\t\t\tsetTimeout(() => element.classList.remove('shakeX'), 400);\r\n\t\t\tbreak;\r\n\t\tcase 'vertical':\r\n\t\t\telement.classList.remove('shakeY');\r\n\t\t\tsetTimeout(() => element.classList.add('shakeY'), 0);\r\n\t\t\tsetTimeout(() => element.classList.remove('shakeY'), 400);\r\n\t\t\tbreak;\r\n\t\tcase 'mix':\r\n\t\t\telement.classList.remove('shakeMix');\r\n\t\t\tsetTimeout(() => element.classList.add('shakeMix'), 0);\r\n\t\t\tsetTimeout(() => element.classList.remove('shakeMix'), 400);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nfunction createCardAnim(querySelector, amount) {\r\n\tlet elementAnim = document.querySelector(querySelector);\r\n\r\n\tswitch (amount) {\r\n\t\tcase 'single':\r\n\t\t\tfor (let i = 0; i < [...elementAnim.children].length; i++) {\r\n\t\t\t\tif (elementAnim.children[i].classList.contains('cardsDrawAnim')) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telementAnim.children[i].classList.add('cardsDrawAnim');\r\n\r\n\t\t\t\t\tplaySoundEffect('.push-card-audio');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'multiple':\r\n\t\t\t[...elementAnim.children].forEach((element, index) => setTimeout(() => {\r\n\t\t\t\telement.classList.add('cardsDrawAnim');\r\n\r\n\t\t\t\tplaySoundEffect('.push-card-audio');\r\n\t\t\t}, 250 * index));\r\n\t\t\tbreak;\r\n\t\tcase 'overlay':\r\n\t\t\t[...elementAnim.children].forEach(element => element.classList.add('cardsDrawAnim'));\r\n\t}\r\n}\r\n\r\nfunction discardCardAnim(querySelector) {\r\n\tquerySelector.classList.add('cardDiscard');\r\n}\r\n\r\nfunction endTurnAnim(side) {\r\n\tconst button = document.querySelector('.end-of-turn-btn');\r\n\tconst turnAnnouncer = document.querySelector('.players-action');\r\n\r\n\tturnAnnouncer.classList.add('players-turn-info');\r\n\r\n\tswitch (side) {\r\n\t\tcase 'left':\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tbutton.style.removeProperty('right');\r\n\t\t\t\tbutton.style.left = '5%';\r\n\t\t\t}, 500);\r\n\t\t\tbreak;\r\n\t\tcase 'right':\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tbutton.style.removeProperty('left');\r\n\t\t\t\tbutton.style.right = '5%';\r\n\t\t\t}, 500);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tsetTimeout(() => button.classList.add('endTurnAnim'), 1300);\r\n\r\n\tsetTimeout(() => turnAnnouncer.classList.remove('players-turn-info'), 2100);\r\n\r\n\tsetTimeout(() => button.classList.remove('endTurnAnim'), 1000);\r\n}\r\n\r\nfunction blockAnimationEffect(querySelector, cl) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\tconst image = document.createElement('img');\r\n\r\n\timage.src = '../images/icons/Icon_Block.png';\r\n\timage.className = 'shield';\r\n\r\n\tcontainer.appendChild(image);\r\n\r\n\tsetTimeout(() => container.removeChild(image), 1000);\r\n}\r\n\r\nfunction attackAnimation(querySelector, className, src) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\tconst image = document.createElement('img');\r\n\r\n\timage.src = src;\r\n\timage.style.transform = `rotate(${Math.floor(Math.random() * (360 - 1) + 1)}deg)`;\r\n\timage.className = className;\r\n\r\n\tcontainer.appendChild(image);\r\n\r\n\tsetTimeout(() => container.removeChild(image), 600);\r\n}\r\n\r\nfunction multipleAttackAnimation(querySelector, className, src, amountEffect) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\r\n\tlet effectStorage = [];\r\n\r\n\tfor (let i = 0; i < amountEffect; i++) {\r\n\t\tconst image = document.createElement('img');\r\n\t\teffectStorage.push(image);\r\n\t}\r\n\r\n\teffectStorage.forEach((elem, index) => {\r\n\t\telem.src = src;\r\n\r\n\t\tif (index === 1) {\r\n\t\t\telem.style.transform = 'rotate(30deg)';\r\n\t\t} else if (index === 2) {\r\n\t\t\telem.style.transform = 'rotate(315deg)';\r\n\t\t}\r\n\r\n\t\telem.className = className;\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tcontainer.appendChild(elem);\r\n\t\t\tplaySoundEffect('.strike-attack-audio');\r\n\t\t\tsetTimeout(() => container.removeChild(elem), 400);\r\n\t\t}, index * 300);\r\n\t});\r\n}\r\n\r\nfunction standartAttackAnimation(querySelector, className, src) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\tconst image = document.createElement('img');\r\n\r\n\timage.src = src;\r\n\timage.className = className;\r\n\r\n\tcontainer.appendChild(image);\r\n\r\n\tsetTimeout(() => container.removeChild(image), 400);\r\n}\r\n\r\nfunction ultimateSkillAnimation(querySelector, className, src) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\tconst overlay = document.querySelector('.players-overlay');\r\n\tconst overlayClose = document.querySelector('.overlay__close');\r\n\tconst image = document.createElement('img');\r\n\r\n\timage.src = src;\r\n\timage.className = className;\r\n\r\n\toverlay.classList.remove('hidden');\r\n\toverlay.classList.add('fade-in');\r\n\toverlayClose.classList.add('hidden');\r\n\r\n\tsetTimeout(() => {\r\n\t\tplaySoundEffect('.warcry-audio');\r\n\r\n\t\tcontainer.appendChild(image);\r\n\r\n\t\tshakeAnimation(querySelector)\r\n\r\n\t\tplaySoundEffect('.flash-audio');\r\n\t}, 200);\r\n\r\n\tsetTimeout(() => {\r\n\t\tcontainer.removeChild(image);\r\n\t\toverlay.classList.add('fade-out');\r\n\r\n\t}, 800);\r\n\r\n\tsetTimeout(() => {\r\n\t\toverlay.classList.add('hidden');\r\n\t\toverlay.classList.remove('fade-in');\r\n\t\toverlay.classList.remove('fade-out');\r\n\t\toverlayClose.classList.remove('hidden');\r\n\t}, 1000);\r\n}\r\n\r\nfunction playSoundEffect(querySelector) {\r\n\tconst soundEffect = document.querySelector(querySelector);\r\n\r\n\tif (!soundEffect) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tsoundEffect.currentTime = 0;\r\n\r\n\tsoundEffect.play();\r\n}\r\n\r\nfunction attackAnimationEffect(querySelector, direction) {\r\n\tconst container = document.querySelector(querySelector);\r\n\r\n\tswitch (direction) {\r\n\t\tcase 'right':\r\n\t\t\tcontainer.classList.add('attackRight');\r\n\r\n\t\t\tsetTimeout(() => container.classList.remove('attackRight'), 1000);\r\n\t\t\tbreak;\r\n\t\tcase 'left':\r\n\t\t\tcontainer.classList.add('attackLeft');\r\n\r\n\t\t\tsetTimeout(() => container.classList.remove('attackLeft'), 1000);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport {\r\n\tloading, switchPlayPause, checkBackgroundAudio, shakeAnimation,\r\n\tcreateCardAnim, endTurnAnim, blockAnimationEffect, attackAnimation,\r\n\tplaySoundEffect, attackAnimationEffect, multipleAttackAnimation, discardCardAnim,\r\n\tstandartAttackAnimation, ultimateSkillAnimation\r\n};\r\n\r\n\r\n\r\n\r\n","import Events from './eventsModel';\r\nimport {skillCollection} from '../cards';\r\nimport {player1, player2} from '../game';\r\nimport {playSoundEffect, shakeAnimation} from '../animation_and_sound_effects/animation.js';\r\n\r\nexport default class Game {\r\n\tconstructor() {\r\n\t\tthis.activePlayer = null;               //активный игрок на данный момент кто будет наносить урон\r\n\t\tthis.passivePlayer = null;               //пассивный игрок на данный момент кто будет получать урон\r\n\r\n\t\tthis.playerOneTurn = true;\r\n\t\tthis.playerTwoTurn = false;\r\n\r\n\t\tthis.playerOneClass = null;    // сохраняет класс игрока будем реализовывать выбор скилов под класс\r\n\t\tthis.playerTwoClass = null;\r\n\r\n\t\tthis.playerOnePullOfCards = [];\r\n\t\tthis.playerTwoPullOfCards = [];\r\n\r\n\t\tthis.playersInfo = {};  //info from local storage about choose menu\r\n\r\n\t\tthis.dragCard = null;\r\n\t\tthis.tempCard = null; // карта которая играется\r\n\r\n\t\t// событие выбор карт завершен\r\n\t\tthis.selectionEnd = new Events();\r\n\r\n\t\t// событие выбор карт продолжается\r\n\t\tthis.selectionContinue = new Events();\r\n\r\n\t\t// событие изменить кто выбирает карты\r\n\t\tthis.choosePlayerInfo = new Events();\r\n\r\n\t\t// событие установить никнеймы игрокам\r\n\t\tthis.updatePlayersNames = new Events();\r\n\r\n\t\t// событие установить модельки персонажей игрокам\r\n\t\tthis.updatePlayersModels = new Events();\r\n\t}\r\n\r\n\tstart() {\r\n\t\tthis.init();\r\n\t};\r\n\r\n\tinit() {\r\n\t\tthis.setPlayersChoiceInfo('playersInfo');\r\n\t\tthis.setPlayersClasses();\r\n\t\tthis.setPlayersNames();\r\n\t\tthis.setPlayersModels();\r\n\t\tthis.setTextChooseInfo();\r\n\t\tthis.setActivePassivePlayer();\r\n\t};\r\n\r\n\t// линкуем player1 & player2 в gamemodel\r\n\tsetActivePassivePlayer() {\r\n\t\tthis.activePlayer = player1;\r\n\t\tthis.passivePlayer = player2;\r\n\t};\r\n\r\n\t// забираем инфу о выборе игроками персонажей и их никнеймов и парсим json\r\n\tsetPlayersChoiceInfo(object) {\r\n\t\tlet temp = localStorage.getItem(object);\r\n\t\tthis.playersInfo = JSON.parse(temp);\r\n\t};\r\n\r\n\t// устанавливаем класы игроками из объекта\r\n\tsetPlayersClasses() {\r\n\t\tthis.playerOneClass = this.playersInfo.playerOneClass;\r\n\t\tthis.playerTwoClass = this.playersInfo.playerTwoClass;\r\n\t};\r\n\r\n\t// устанавливаем никнеймы игрокам из объекта\r\n\tsetPlayersNames() {\r\n\t\tthis.updatePlayersNames.notify(this.playersInfo.playerOneName, this.playersInfo.playerTwoName);\r\n\t};\r\n\r\n\t// устанавливаем модельки игроков согласно выбору\r\n\tsetPlayersModels() {\r\n\t\tthis.updatePlayersModels.notify(this.playersInfo.playerOneClass, this.playersInfo.playerTwoClass);\r\n\t};\r\n\r\n\t// показываем какой игрок выбирает карты\r\n\tsetTextChooseInfo() {\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tthis.choosePlayerInfo.notify(`${this.playersInfo.playerOneName} is choosing`);\r\n\t\t} else {\r\n\t\t\tthis.choosePlayerInfo.notify(`${this.playersInfo.playerTwoName} is choosing`);\r\n\t\t}\r\n\t};\r\n\r\n\t// устанавливаем приоритет хода игрока\r\n\tsetTurnPriority() {\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tthis.playerOneTurn = false;\r\n\t\t\tthis.playerTwoTurn = true;\r\n\t\t} else {\r\n\t\t\tthis.playerOneTurn = true;\r\n\t\t\tthis.playerTwoTurn = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// пулим карты выбранные ироком на старте игры в gameControl, этими картами игроки будут играть дальше\r\n\tdefinePlayersCardSet() {\r\n\t\tlet cards = document.querySelectorAll('.cards');\r\n\r\n\t\t//счетчик выбранных карт\r\n\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\t// если выбрано больше или недобор указанных карт запрещает пулить в переменную\r\n\t\tif (counter < 8 || counter >= 9) {\r\n\t\t\tplaySoundEffect('.confirm-failed-audio');\r\n\t\t\tshakeAnimation('.accept', 'horizontal');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet tempCardChoosePlayer = [];\r\n\r\n\t\t//пушим карты 1го игрока в массив\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tif (cards[i].classList.contains('card-to-select')) {\r\n\t\t\t\t\ttempCardChoosePlayer.push(cards[i].dataset.info);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.playerOnePullOfCards = this.checkOnSelectedCards(tempCardChoosePlayer, this.playerOneClass);\r\n\t\t}\r\n\r\n\t\t//пушим карты 2го игрока в массив\r\n\t\tif (this.playerTwoTurn) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tif (cards[i].classList.contains('card-to-select')) {\r\n\t\t\t\t\ttempCardChoosePlayer.push(cards[i].dataset.info);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.playerTwoPullOfCards = this.checkOnSelectedCards(tempCardChoosePlayer, this.playerTwoClass);\r\n\t\t}\r\n\r\n\t\tplaySoundEffect('.confirm-audio');\r\n\r\n\t\t//меняем очередность выбора для игроков\r\n\t\tthis.setTurnPriority();\r\n\r\n\t\tthis.checkCardsSelectionEnd();\r\n\t};\r\n\r\n\t// передаем массив из выбранных согласно ID карты и класс выбранного персонажа для поиска в SkillCollection его типа карт\r\n\tcheckOnSelectedCards(datainfo, search) {\r\n\t\tlet temp = [];\r\n\r\n\t\tfor (let i = 0; i < skillCollection[search].length; i++) {\r\n\t\t\tfor (let j = 0; j < datainfo.length; j++) {\r\n\t\t\t\tif (skillCollection[search][i]['id'] == datainfo[j]) {\r\n\t\t\t\t\ttemp.push(skillCollection[search][i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn temp;\r\n\t};\r\n\r\n\t//проверяем игроки набрали карты скрываем меню выбора карт, открываем игровое поле\r\n\tcheckCardsSelectionEnd() {\r\n\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\t// если выбрано больше или недобор указанных карт запрещает пулить в переменную\r\n\t\tif (counter < 8 || counter >= 9) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.playerOnePullOfCards.length > 1 && this.playerTwoPullOfCards.length > 1) {\r\n\t\t\tthis.selectionEnd.notify();\r\n\t\t} else {\r\n\t\t\tthis.selectionContinue.notify();\r\n\t\t\tthis.setTextChooseInfo();\r\n\t\t}\r\n\t};\r\n\r\n\t//узнаем какая карта была взята для игры и сыграна\r\n\tinitActionCard(eventTarget) {\r\n\t\tthis.dragCard = eventTarget;\r\n\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tthis.tempCard = this.playerOnePullOfCards.find(element => element.id == this.dragCard.dataset.info);\r\n\t\t} else {\r\n\t\t\tthis.tempCard = this.playerTwoPullOfCards.find((element) => element.id == this.dragCard.dataset.info);\r\n\t\t}\r\n\t};\r\n\r\n\t//конец хода меняет инфо о активном игроке и обновляет выносливость\r\n\tturnEndsNextPlayerTurn() {\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tthis.playerOneTurn = false;\r\n\t\t\tthis.playerTwoTurn = true;\r\n\t\t\tthis.activePlayer = player2;\r\n\t\t\tthis.passivePlayer = player1;\r\n\t\t} else {\r\n\t\t\tthis.playerOneTurn = true;\r\n\t\t\tthis.playerTwoTurn = false;\r\n\t\t\tthis.activePlayer = player1;\r\n\t\t\tthis.passivePlayer = player2;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\n\r\n","import Events from './eventsModel';\r\nimport {skillCollection} from '../cards';\r\nimport {createCardAnim, playSoundEffect, endTurnAnim} from '../animation_and_sound_effects/animation.js';\r\n\r\nexport default class Board {\r\n\tconstructor(model) {\r\n\t\tthis.gameModel = model;\r\n\r\n\t\tthis.decWrapper = document.querySelector('.cards-choose-field');        // field for cards at the start when players are choosing\r\n\t\tthis.btnAccept = document.querySelector('.accept');               // player accept cards he chose\r\n\t\tthis.cardsChooseCounter = document.querySelector('.count');             // counter for amount of cards have been chosen(needs for alert)\r\n\t\tthis.cardInHand = document.querySelector('.card-in-hand-field');              // field for cards in hand each player\r\n\t\tthis.battleField = document.querySelector('.battle-field');            // play field\r\n\t\tthis.endTurn = document.querySelector('.end-of-turn-btn');             // end turn button\r\n\t\tthis.playersTurnInfo = document.querySelector('.players-action');\r\n\t\tthis.cardsPlayField = document.querySelector('.play-field');           // area for cards to drop and play their actions\r\n\t\tthis.soundOffOn = document.querySelector('.soundIcon');\r\n\r\n\t\tthis.playersOverlay = document.querySelector('.players-overlay');\r\n\t\tthis.playersDeck = document.querySelector('.players-overlay__cards');\r\n\t\tthis.playersDeckClose = document.querySelector('.overlay__close');\r\n\r\n\t\tthis.showDeckPlayer1 = document.querySelector('.player-1__pile-of-car');           // возможность в игре посмотреть какие карты ты выбрал\r\n\t\tthis.showDeckPlayer2 = document.querySelector('.player-2__pile-of-car');           // возможность в игре посмотреть какие карты ты выбрал\r\n\r\n\t\t// создаем событие на создание карт\r\n\t\tthis.onCreateCards = new Events();\r\n\t\tthis.onCounterChange = new Events();\r\n\t\tthis.removeCards = new Events();\r\n\t\tthis.removeActionCard = new Events();\r\n\t\tthis.createAnimation = new Events();\r\n\t\tthis.endTurnAnimation = new Events();\r\n\t}\r\n\r\n\t// создаем деку в начале игры для игрока согласно классу\r\n\tcreateCardsForChoose(playerClassInfo) {\r\n\t\tthis.removeExtraCards('board');\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tskillCollection[playerClassInfo.playerOneClass].forEach((element) => this.createCards(element, 'board'));\r\n\r\n\t\t\t\tthis.createAnimation.notify('.cards-choose-field', 'multiple');\r\n\r\n\t\t\t\t// createCardAnim('.cards-choose-field', 'multiple');\r\n\t\t\t}, 500)\r\n\t\t} else {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tskillCollection[playerClassInfo.playerTwoClass].forEach((element) => this.createCards(element, 'board'));\r\n\r\n\t\t\t\tthis.createAnimation.notify('.cards-choose-field', 'multiple');\r\n\r\n\t\t\t\t// createCardAnim('.cards-choose-field', 'multiple');\r\n\t\t\t}, 500)\r\n\t\t}\r\n\t}\r\n\r\n\tshowCardsForPlayers(eventTarget) {\r\n\t\tthis.removeExtraCards('overlay');\r\n\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target.classList.contains('player-1__pile-of-car')) {\r\n\t\t\tthis.gameModel.playerOnePullOfCards.forEach((element) => this.createCards(element, 'overlay'));\r\n\r\n\t\t\tthis.createAnimation.notify('.players-overlay__cards', 'overlay')\r\n\r\n\t\t\t// createCardAnim('.players-overlay__cards', 'overlay');\r\n\t\t}\r\n\r\n\t\tif (target.classList.contains('player-2__pile-of-car')) {\r\n\t\t\tthis.gameModel.playerTwoPullOfCards.forEach((element) => this.createCards(element, 'overlay'));\r\n\r\n\t\t\tthis.createAnimation.notify('.players-overlay__cards', 'overlay')\r\n\r\n\t\t\t// createCardAnim('.players-overlay__cards', 'overlay');\r\n\t\t}\r\n\t}\r\n\r\n\topenCloseOverlay(state) {\r\n\t\tswitch (state) {\r\n\t\t\tcase 'open':\r\n\t\t\t\tthis.playersOverlay.classList.remove('hidden');\r\n\r\n\t\t\t\tplaySoundEffect('.overlay-open-audio');\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'close':\r\n\t\t\t\tthis.playersOverlay.classList.add('hidden');\r\n\r\n\t\t\t\tplaySoundEffect('.overlay-close-audio');\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tcreateCards(card, appendPlace, draggable = false) {\r\n\t\tlet elDiv = document.createElement('div');\r\n\r\n\t\telDiv.setAttribute('class', 'cards');\r\n\t\telDiv.setAttribute('data-info', `${card.id}`);\r\n\t\telDiv.style.backgroundImage = `url(${card.icon})`;\r\n\r\n\t\tif (draggable) {\r\n\t\t\telDiv.setAttribute('draggable', 'true');\r\n\t\t}\r\n\r\n\t\tthis.onCreateCards.notify(elDiv, appendPlace);\r\n\t}\r\n\r\n\t// кидаем карты в руку\r\n\tpullRandomCardsInHand() {\r\n\t\tthis.removeExtraCards('hand');\r\n\r\n\t\tlet tempIndex = [];\r\n\r\n\t\t//делаем проверку чтобы карты в руке не повторялись\r\n\t\tfor (let i = 0; i < 4; i++) {                  // количество карт в руку\r\n\t\t\tlet n = Math.floor(Math.random() * 8);   // количество набранных карт\r\n\t\t\tif (tempIndex.indexOf(n) == -1) {\r\n\t\t\t\ttempIndex.push(n);\r\n\t\t\t} else {\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// создаем карты в руке согласно игрока чей ход\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\tthis.createCards(this.gameModel.playerOnePullOfCards[tempIndex[i]], 'hand', true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.createAnimation.notify('.card-in-hand-field', 'multiple');\r\n\r\n\t\t\t// createCardAnim('.card-in-hand-field', 'multiple');\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\tthis.createCards(this.gameModel.playerTwoPullOfCards[tempIndex[i]], 'hand', true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.createAnimation.notify('.card-in-hand-field', 'multiple');\r\n\r\n\t\t\t// createCardAnim('.card-in-hand-field', 'multiple');\r\n\t\t}\r\n\t}\r\n\r\n\t// убираем лишние карты с доски или из руки\r\n\tremoveExtraCards(place) {\r\n\t\tlet orderToRemove = [];\r\n\r\n\t\tswitch (place) {\r\n\t\t\tcase 'board':\r\n\t\t\t\torderToRemove = [...this.decWrapper.children];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hand':\r\n\t\t\t\torderToRemove = [...this.cardInHand.children];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'overlay':\r\n\t\t\t\torderToRemove = [...this.playersDeck.children];\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.removeCards.notify(orderToRemove, place);\r\n\t}\r\n\r\n\t//удаляем сыгранные карты из руки с проверкой\r\n\tdeletePlayedCard(condition, card) {\r\n\t\tif (this.gameModel.tempCard.cost > this.gameModel.activePlayer.staminaPoints) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (condition) {\r\n\t\t\tcase 'playedCard':\r\n\t\t\t\tthis.removeActionCard.notify(this.gameModel.dragCard);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'randomCard':\r\n\t\t\t\tthis.removeActionCard.notify(card);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// подсветка выбранных карт\r\n\tcardChooseAnim(eventTarget) {\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.decWrapper) {\r\n\t\t\ttarget.classList.toggle('card-to-select');\r\n\t\t}\r\n\r\n\t\tif (target.classList.contains('card-to-select')) {\r\n\t\t\tplaySoundEffect('.card-selected-audio')\r\n\t\t}\r\n\r\n\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\tlet counterInfo = {};\r\n\r\n\t\tcounterInfo.number = counter;\r\n\r\n\t\tif (counter > 8) {\r\n\t\t\tcounterInfo.color = 'red';\r\n\t\t} else if (counter == 8) {\r\n\t\t\tcounterInfo.color = 'green';\r\n\t\t} else if (counter > 0 && counter < 8) {\r\n\t\t\tcounterInfo.color = 'cyan';\r\n\t\t} else {\r\n\t\t\tcounterInfo.color = 'white';\r\n\t\t}\r\n\r\n\t\tthis.onCounterChange.notify(counterInfo);\r\n\t}\r\n\r\n\t//анимация выбора только одной карты для игры в руке\r\n\tcardChooseAnimInHandAdd(eventTarget) {\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.cardInHand) {\r\n\t\t\ttarget.classList.add('card-to-action');\r\n\t\t}\r\n\t}\r\n\r\n\t//анимация выбора только одной карты для игры в руке\r\n\tcardChooseAnimInHandRemove(eventTarget) {\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.cardInHand) {\r\n\t\t\ttarget.classList.remove('card-to-action');\r\n\t\t}\r\n\t}\r\n\r\n\t//добавляем стили для перетаскивания\r\n\tdragCardStart(eventTarget) {\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.cardInHand) {\r\n\t\t\tsetTimeout(() => target.classList.add('invisible'), 0);\r\n\t\t}\r\n\r\n\t\tplaySoundEffect('.drag-audio');\r\n\t}\r\n\r\n\t//у ираем стили для перетаскивания\r\n\tdragCardEnd(eventTarget) {\r\n\t\tplaySoundEffect('.card-grab-cancel-audio');\r\n\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.cardInHand) {\r\n\t\t\ttarget.classList.remove('invisible');\r\n\t\t}\r\n\t}\r\n\r\n\tdragPreventAction(event) {\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\tshowWhichTurn() {\r\n\t\tplaySoundEffect('.end-turn-audio');\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tthis.playersTurnInfo.textContent = `${this.gameModel.playersInfo.playerOneName}'s Turn`;\r\n\r\n\t\t\tthis.endTurnAnimation.notify('left');\r\n\r\n\t\t\t// endTurnAnim('left');\r\n\t\t} else {\r\n\t\t\tthis.playersTurnInfo.textContent = `${this.gameModel.playersInfo.playerTwoName}'s Turn`;\r\n\r\n\t\t\tthis.endTurnAnimation.notify('right');\r\n\r\n\t\t\t// endTurnAnim('right');\r\n\t\t}\r\n\t}\r\n}\r\n","import Events from './eventsModel';\r\nimport {createCardAnim, endTurnAnim} from '../animation_and_sound_effects/animation';\r\n\r\nexport default class BoardView {\r\n\tconstructor(board, game, selector) {\r\n\t\tthis.boardModel = board;\r\n\t\tthis.gameModel = game;\r\n\t\tthis.boardSelector = selector;\r\n\r\n\t\tthis.onLoadCreate = new Events;\r\n\r\n\t\t// событие для this.gameModel закинуть в масиив выбранные карты\r\n\t\tthis.onDefineCards = new Events;\r\n\r\n\t\t// событие на анимацию(подсветку выбора карт)\r\n\t\tthis.onAnimCards = new Events;\r\n\r\n\t\t// событие на проверку набрали ли игроки карты\r\n\t\tthis.submitCardCheckChoose = new Events;\r\n\r\n\t\t// навели убрали мышку на карту в руке\r\n\t\tthis.cardInHandChoosen = new Events();\r\n\r\n\t\t// навели убрали мышку на карту в руке\r\n\t\tthis.grabCardStart = new Events();\r\n\r\n\t\tthis.grabCardEnd = new Events();\r\n\r\n\t\tthis.preventDrag = new Events();\r\n\r\n\t\t//удаляем сыгранную карту\r\n\t\tthis.dropEvent = new Events();\r\n\r\n\t\t// выполняем действие карты\r\n\t\tthis.doCardAction = new Events();\r\n\r\n\t\tthis.endTurn = new Events();\r\n\r\n\t\tthis.showPlayerDeck = new Events();\r\n\r\n\t\tthis.soundOffOn = new Events();\r\n\r\n\t\tthis.boardModel.btnAccept.addEventListener('click', () => this.onDefineCards.notify());\r\n\r\n\t\tthis.boardModel.btnAccept.addEventListener('click', () => this.submitCardCheckChoose.notify());\r\n\r\n\t\t// событие клик подстветка выбора карт\r\n\t\tthis.boardModel.decWrapper.addEventListener('click', (event) => this.onAnimCards.notify(event.target));\r\n\r\n\t\t// показываем карты какие наюрал игрок на этапе выбора\r\n\t\tthis.boardModel.battleField.addEventListener('click', (event) => this.showPlayerDeck.notify(event.target));\r\n\r\n\t\tthis.boardModel.playersDeckClose.addEventListener('click', (event) => this.showPlayerDeck.notify(event.target));\r\n\r\n\t\t// анимация карт в руке при наведении\r\n\t\tthis.boardModel.cardInHand.addEventListener('mouseover', (event) => this.cardInHandChoosen.notify(event.target, 'focus'));\r\n\r\n\t\tthis.boardModel.cardInHand.addEventListener('mouseout', (event) => this.cardInHandChoosen.notify(event.target, 'blur'));\r\n\r\n\t\t// анимация карт при перетаскивании плюс узнаем какую карту перетавскиваем\r\n\t\tthis.boardModel.cardInHand.addEventListener('dragstart', (event) => this.grabCardStart.notify(event.target, 'focus'));\r\n\r\n\t\tthis.boardModel.cardInHand.addEventListener('dragend', (event) => this.grabCardEnd.notify(event.target, 'blur'));\r\n\r\n\t\t// prevent default behavior\r\n\t\tthis.boardModel.cardsPlayField.addEventListener('dragenter', (event) => this.preventDrag.notify(event));\r\n\r\n\t\tthis.boardModel.cardsPlayField.addEventListener('dragover', (event) => this.preventDrag.notify(event));\r\n\r\n\t\t// играем карты\r\n\t\tthis.boardModel.cardsPlayField.addEventListener('drop', () => this.dropEvent.notify());\r\n\r\n\t\tthis.boardModel.cardsPlayField.addEventListener('drop', () => this.doCardAction.notify(this.gameModel.playerOneTurn));\r\n\r\n\t\tthis.boardModel.endTurn.addEventListener('click', () => this.endTurn.notify());\r\n\r\n\t\tthis.boardModel.soundOffOn.addEventListener('click', () => this.soundOffOn.notify());\r\n\r\n\r\n\t\t// подписываемся на событие в модели\r\n\t\t// this.boardModel создала карты надо их отобразить\r\n\t\tthis.boardModel.onCreateCards.attach((card, place) => this.drawCards(card, place));\r\n\r\n\t\t// модель меняет количество набранных карт отображаем\r\n\t\tthis.boardModel.onCounterChange.attach((info) => this.counterUpdate(info));\r\n\r\n\t\t// событие this.gameModel проверяет набранны ли у игроков карты\r\n\t\tthis.gameModel.selectionEnd.attach(() => this.selectionEndUpdate());\r\n\r\n\t\t// событие на удаление лишних карт\r\n\t\tthis.boardModel.removeCards.attach((cards, place) => this.extraCardsToRemove(cards, place));\r\n\r\n\t\t// событие на отображение инфо кто выбирает карты\r\n\t\tthis.gameModel.choosePlayerInfo.attach((text) => this.playerChooseInfoUpdate(text));\r\n\r\n\t\t// событие на отображение никнеймов игроков\r\n\t\tthis.gameModel.updatePlayersNames.attach((name1, name2) => this.playerNameUpdate(name1, name2));\r\n\r\n\t\t// событие на отображение моделек персонажей\r\n\t\tthis.gameModel.updatePlayersModels.attach((modelPlayer1, modelPlayer2) => this.playerModelsUpdate(modelPlayer1, modelPlayer2));\r\n\r\n\t\t// удаление сыгранной карты\r\n\t\tthis.boardModel.removeActionCard.attach((card) => this.deleteActionCard(card));\r\n\r\n\t\tthis.boardModel.createAnimation.attach((querySelector, amount) => this.createAnimation(querySelector, amount));\r\n\r\n\t\tthis.boardModel.endTurnAnimation.attach((side) => this.endTurnAnimation(side));\r\n\r\n\r\n\t}\r\n\r\n\t// need for start render cards when page is loaded\r\n\tinit() {\r\n\t\tthis.onLoadCreate.notify();\r\n\t};\r\n\r\n\tdrawCards(card, place) {\r\n\t\tswitch (place) {\r\n\t\t\tcase 'board':\r\n\t\t\t\tthis.boardModel.decWrapper.appendChild(card);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hand':\r\n\t\t\t\tthis.boardModel.cardInHand.appendChild(card);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'overlay':\r\n\t\t\t\tthis.boardModel.playersDeck.appendChild(card);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.boardModel.cardsChooseCounter.textContent = 0;\r\n\t\tthis.boardModel.cardsChooseCounter.style = 'color: white';\r\n\t};\r\n\r\n\textraCardsToRemove(cards, place) {\r\n\r\n\t\tif (place == 'board' && cards.length > 0) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tthis.boardModel.decWrapper.removeChild(cards[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (place == 'hand' && cards.length > 0) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tthis.boardModel.cardInHand.removeChild(cards[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (place == 'overlay' && cards.length > 0) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tthis.boardModel.playersDeck.removeChild(cards[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteActionCard(card) {\r\n\t\tthis.boardModel.cardInHand.removeChild(card);\r\n\t}\r\n\r\n\tcounterUpdate(info) {\r\n\t\tthis.boardModel.cardsChooseCounter.textContent = info.number;\r\n\t\tthis.boardModel.cardsChooseCounter.style = `color: ${info.color}`;\r\n\t};\r\n\r\n\tselectionEndUpdate() {\r\n\t\tthis.boardModel.decWrapper.style.display = 'none';\r\n\t\tthis.boardModel.battleField.classList.remove('hidden');\r\n\t\t// this.boardSelector.querySelector('.card-counter').classList.add('hidden');\r\n\t\tthis.boardSelector.querySelector('.card-counter').style.display = 'none';\r\n\t}\r\n\r\n\tplayerChooseInfoUpdate(text) {\r\n\t\tthis.boardSelector.querySelector('.player-name-choosing').textContent = text;\r\n\t}\r\n\r\n\tplayerNameUpdate(name1, name2) {\r\n\t\tthis.boardSelector.querySelector('.player-1__name').textContent = name1;\r\n\t\tthis.boardSelector.querySelector('.player-2__name').textContent = name2;\r\n\t}\r\n\r\n\tplayerModelsUpdate(modelPlayer1, modelPlayer2) {\r\n\t\tconst player1Model = this.boardSelector.querySelector('.player-1__model');\r\n\t\tconst player2Model = this.boardSelector.querySelector('.player-2__model');\r\n\r\n\t\tplayer1Model.type = 'image/svg+xml';\r\n\t\tplayer2Model.type = 'image/svg+xml';\r\n\r\n\t\tswitch (modelPlayer1) {\r\n\t\t\tcase 'warrior':\r\n\t\t\t\tplayer1Model.data = 'images/models/viking.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rogue':\r\n\t\t\t\tplayer1Model.data = 'images/models/rogue.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mage':\r\n\t\t\t\tplayer1Model.data = 'images/models/mage.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('models not found');\r\n\t\t}\r\n\r\n\t\tswitch (modelPlayer2) {\r\n\t\t\tcase 'warrior':\r\n\t\t\t\tplayer2Model.data = 'images/models/viking.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rogue':\r\n\t\t\t\tplayer2Model.data = 'images/models/rogue.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mage':\r\n\t\t\t\tplayer2Model.data = 'images/models/mage.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('models not found');\r\n\t\t}\r\n\t}\r\n\r\n\tcreateAnimation(querySelector, amount) {\r\n\t\tcreateCardAnim(querySelector, amount)\r\n\t}\r\n\r\n\tendTurnAnimation(side) {\r\n\t\tendTurnAnim(side);\r\n\t}\r\n}\r\n","export default class GameController {\r\n\tconstructor(model, view) {\r\n\t\tthis.gameModel = model;\r\n\t\tthis.boardView = view;\r\n\r\n\t\tif (this.boardView.hasOwnProperty('onDefineCards')) {\r\n\t\t\tthis.boardView.onDefineCards.attach(() => this.defineCards());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('submitCardCheckChoose')) {\r\n\t\t\tthis.boardView.submitCardCheckChoose.attach(() => this.doCardCheckChoose());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('grabCardStart')) {\r\n\t\t\tthis.boardView.grabCardStart.attach((eventTarget) => this.actionCard(eventTarget));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tthis.boardView.endTurn.attach(() => this.doEndTurn());\r\n\t\t}\r\n\t}\r\n\r\n\t// событие на кнопку подтверждения выбора карт, запоминаем что выбрал в масси\r\n\tdefineCards() {\r\n\t\tthis.gameModel.definePlayersCardSet();\r\n\t}\r\n\r\n\t// событие на кнопку подтверждения выбора карт, проверяем оба игрока сделали выбор\r\n\tdoCardCheckChoose() {\r\n\t\tthis.gameModel.checkCardsSelectionEnd();\r\n\t}\r\n\r\n\tactionCard(eventTarget) {\r\n\t\tthis.gameModel.initActionCard(eventTarget);\r\n\t}\r\n\r\n\tdoEndTurn() {\r\n\t\tthis.gameModel.turnEndsNextPlayerTurn();\r\n\t}\r\n}\r\n","import Events from './eventsModel';\r\nimport {playSoundEffect, createCardAnim, discardCardAnim} from '../animation_and_sound_effects/animation.js';\r\n\r\nexport default class Players {\r\n\tconstructor(game, board) {\r\n\t\tthis.healthPoints = 100;\r\n\t\tthis.staminaPoints = 4;\r\n\t\tthis.defendPoints = 7;\r\n\r\n\t\tthis.gameModel = game;\r\n\t\tthis.boardModel = board;\r\n\r\n\t\tthis.playerViewUpdate = new Events();\r\n\t\tthis.cardDraw = new Events();\r\n\t\tthis.cardDiscard = new Events();\r\n\t\tthis.actionAnimation = new Events();\r\n\t}\r\n\r\n\tendTurn() {\r\n\t\tthis.gameModel.activePlayer.staminaPoints = 4;\r\n\t\tthis.gameModel.passivePlayer.staminaPoints = 4;\r\n\r\n\t\tthis.updateView();\r\n\t}\r\n\r\n\tupdateView() {\r\n\t\tthis.playerViewUpdate.notify();\r\n\t};\r\n\r\n\tdoAction() {\r\n\t\tif (this.gameModel.activePlayer.staminaPoints < this.gameModel.tempCard.cost) {\r\n\t\t\tplaySoundEffect('.card-grab-cancel-audio');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (this.gameModel.tempCard.type) {\r\n\t\t\tcase 'attack':\r\n\t\t\t\tthis.standartAttack(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attackDrawDiscard':\r\n\t\t\t\tthis.attackDrawDiscard(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attackAddEffect':\r\n\t\t\t\tthis.sideEffectAttack(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defend':\r\n\t\t\t\tthis.standartDefend(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defendAddEffect':\r\n\t\t\t\tthis.sideEffectDefend(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defendDrawDiscard':\r\n\t\t\t\tthis.defendDrawDiscard(this.gameModel.tempCard);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defendAndAttack':\r\n\t\t\t\tthis.defendWithAttack(this.gameModel.tempCard);\r\n\t\t}\r\n\r\n\t\tthis.actionAnimation.notify();\r\n\t};\r\n\r\n\trandomCardDraw() {\r\n\t\tlet randomCardDraw = Math.floor(Math.random() * this.gameModel.playerOnePullOfCards.length);\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tthis.cardDraw.notify(this.gameModel.playerOnePullOfCards[randomCardDraw]);\r\n\t\t} else {\r\n\t\t\tthis.cardDraw.notify(this.gameModel.playerTwoPullOfCards[randomCardDraw]);\r\n\t\t}\r\n\r\n\t\tcreateCardAnim('.card-in-hand-field', 'single');\r\n\t}\r\n\r\n\trandomCardDiscard() {\r\n\t\tlet randomDiscard = Math.floor(Math.random() * this.boardModel.cardInHand.children.length);\r\n\r\n\t\t//it will be error if you use DaggerThrow as the last card in hand so w check on this\r\n\t\tif (this.boardModel.cardInHand.children.length > 0) {\r\n\t\t\tdiscardCardAnim(this.boardModel.cardInHand.children[randomDiscard]);\r\n\r\n\t\t\tplaySoundEffect('.discard-card-audio');\r\n\r\n\t\t\tsetTimeout(() => this.cardDiscard.notify(this.boardModel.cardInHand.children[randomDiscard]), 300)\r\n\t\t}\r\n\t}\r\n\r\n\t// we take condition only for card \"expertise\"\r\n\tmassiveRandomDraw(card, condition) {\r\n\t\tlet tempIndex = [];\r\n\r\n\t\t//делаем проверку чтобы карты в руке не повторялись\r\n\t\tfor (let i = 0; i < card.effect - condition; i++) {                  // количество карт в руку\r\n\t\t\tlet n = Math.floor(Math.random() * 8);            // количество набранных карт\r\n\t\t\tif (tempIndex.indexOf(n) === -1) {\r\n\t\t\t\ttempIndex.push(n);\r\n\t\t\t} else {\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\tthis.cardDraw.notify(this.gameModel.playerOnePullOfCards[tempIndex[i]]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\tthis.cardDraw.notify(this.gameModel.playerTwoPullOfCards[tempIndex[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcreateCardAnim('.card-in-hand-field', 'single');\r\n\t}\r\n\r\n\tstandartAttack(card) {\r\n\t\tif (this.gameModel.passivePlayer.defendPoints) {\r\n\t\t\tlet test = this.gameModel.passivePlayer.defendPoints - card.effect;\r\n\r\n\t\t\tif (test < 0) {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = test;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.updateView();\r\n\t};\r\n\r\n\tsideEffectAttack(card) {\r\n\t\t// some of cards have special side effects, so we do additional if check\r\n\t\t// to make for them special methods\r\n\r\n\t\tif (card.name == 'riddleWithHoles') {\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\r\n\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'judjment') {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tif (sideEffect == undefined) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints = sideEffect;\r\n\r\n\t\t\tthis.updateView();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// some of cards havee common side effect so we can group it in one method\r\n\t\tif (card.sideEffect) {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tif (this.gameModel.passivePlayer.defendPoints) {\r\n\t\t\t\tlet test = this.gameModel.passivePlayer.defendPoints - sideEffect;\r\n\r\n\t\t\t\tif (test < 0) {\r\n\t\t\t\t\tthis.gameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.gameModel.passivePlayer.defendPoints = test;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (sideEffect) {\r\n\t\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= sideEffect;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.updateView();\r\n\t};\r\n\r\n\tattackDrawDiscard(card) {\r\n\t\t// some of cards have special side effect, so we do additional if check\r\n\t\t// to make for them special methods\r\n\t\t// if (this.gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\tif (this.gameModel.passivePlayer.defendPoints) {\r\n\t\t\tlet test = this.gameModel.passivePlayer.defendPoints - card.effect;\r\n\r\n\t\t\tif (test < 0) {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = test;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'daggerThrow') {\r\n\t\t\tthis.randomCardDiscard();\r\n\t\t\tthis.randomCardDraw();\r\n\t\t}\r\n\r\n\t\tif (card.name == 'quickSlash') {\r\n\t\t\tthis.randomCardDraw();\r\n\t\t}\r\n\r\n\t\tif (card.name == 'cutThroughFate') {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += sideEffect;\r\n\t\t\tthis.randomCardDraw();\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.updateView();\r\n\t};\r\n\r\n\tstandartDefend(card) {\r\n\t\tthis.gameModel.activePlayer.defendPoints += card.effect;\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.updateView();\r\n\t};\r\n\r\n\tsideEffectDefend(card) {\r\n\t\tif (card.name == 'nirvana') {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tthis.gameModel.activePlayer.defendPoints = sideEffect;\r\n\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'meditate') {\r\n\t\t\tlet test = this.gameModel.activePlayer.staminaPoints - card.cost + card.effect;\r\n\r\n\t\t\tif (test > 4) {\r\n\t\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\t\t\t\tthis.gameModel.activePlayer.staminaPoints = 4;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\t\t\t\tthis.gameModel.activePlayer.staminaPoints += card.effect;\r\n\t\t\t}\r\n\r\n\t\t\tthis.updateView();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.sideEffect) {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += sideEffect;\r\n\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\t\t}\r\n\t};\r\n\r\n\tdefendWithAttack(card) {\r\n\t\tthis.sideEffectAttack(card);\r\n\t\tthis.standartDefend(card);\r\n\r\n\t\t//compensate for double stamina reduce from methods above\r\n\t\tthis.gameModel.activePlayer.staminaPoints += card.cost;\r\n\r\n\t\tthis.updateView();\r\n\t};\r\n\r\n\tdefendDrawDiscard(card) {\r\n\t\t// some of cards have special side effect, so we do additional if check\r\n\t\t// to make for them special methods\r\n\t\t// if (this.gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\tif (card.name == 'prepared') {\r\n\t\t\tthis.randomCardDiscard();\r\n\t\t\tthis.randomCardDraw();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'warcry') {\r\n\t\t\tthis.randomCardDraw();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'survivor') {\r\n\t\t\tthis.randomCardDiscard();\r\n\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += card.effect;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'bloodletting') {\r\n\t\t\tthis.randomCardDraw();\r\n\r\n\t\t\tthis.gameModel.activePlayer.healthPoints -= card.effect;\r\n\r\n\t\t\tthis.updateView();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'expertise') {\r\n\t\t\tthis.massiveRandomDraw(card, this.boardModel.cardInHand.children.length);\r\n\t\t}\r\n\r\n\t\tif (card.name == 'alpha') {\r\n\r\n\t\t\t// убираем лишние карты из руки\r\n\t\t\tfor (let i = 0; i < this.boardModel.cardInHand.children.length; i++) {\r\n\t\t\t\tif (this.boardModel.cardInHand.children[i].classList.contains('cards-to-play')) {\r\n\t\t\t\t\tthis.randomCardDiscard(this.boardModel.cardInHand.children[i]);\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.massiveRandomDraw(card, 0);\r\n\t\t}\r\n\r\n\t\tif (card.name == 'backFlip') {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += sideEffect;\r\n\r\n\t\t\tthis.massiveRandomDraw(card, 0);\r\n\t\t}\r\n\r\n\t\tif (card.name == 'thirdEye') {\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += card.effect;\r\n\r\n\t\t\tthis.randomCardDraw();\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.updateView();\r\n\t};\r\n}\r\n","import {\r\n\tattackAnimation,  attackAnimationEffect, blockAnimationEffect,\r\n\tplaySoundEffect,  shakeAnimation, multipleAttackAnimation, standartAttackAnimation,\r\n\tultimateSkillAnimation\r\n} from '../animation_and_sound_effects/animation';\r\n\r\n\r\nexport default class PlayersView {\r\n\tconstructor(playerOneModel, playerTwoModel, gameModel, container) {\r\n\t\tthis.playerOneModel = playerOneModel;\r\n\t\tthis.playerTwoModel = playerTwoModel;\r\n\t\tthis.gameModel = gameModel;\r\n\t\tconst playerContainer = container;\r\n\r\n\t\tthis.playerOneHPValue = playerContainer.querySelector('.player-1__hp-value');\r\n\t\tthis.playerOneDefenceValue = playerContainer.querySelector('.player-1__defence-value');\r\n\t\tthis.playerOneStaminaValue = playerContainer.querySelector('.player-1__stamina-value');\r\n\t\tthis.playerOneHP = playerContainer.querySelector('.player-1__hp-bar-inner');\r\n\r\n\t\tthis.playerTwoHPValue = playerContainer.querySelector('.player-2__hp-value');\r\n\t\tthis.playerTwoDefenceValue = playerContainer.querySelector('.player-2__defence-value');\r\n\t\tthis.playerTwoStaminaValue = playerContainer.querySelector('.player-2__stamina-value');\r\n\t\tthis.playerTwoHP = playerContainer.querySelector('.player-2__hp-bar-inner');\r\n\r\n\t\tthis.playerOneModel.playerViewUpdate.attach(() => this.updateViewPlayer());\r\n\t\tthis.playerTwoModel.playerViewUpdate.attach(() => this.updateViewPlayer());\r\n\r\n\t\tthis.playerTwoModel.actionAnimation.attach(() => this.doAnimation());\r\n\t\tthis.playerTwoModel.actionAnimation.attach(() => this.doAnimation());\r\n\r\n\t\tthis.updateViewPlayer();\r\n\t}\r\n\r\n\t// устанавливаем первые параметры здоровье, защита, стамина\r\n\tupdateViewPlayer() {\r\n\t\tthis.playerOneHPValue.textContent = this.playerOneModel.healthPoints;\r\n\t\tthis.playerOneDefenceValue.textContent = this.playerOneModel.defendPoints;\r\n\t\tthis.playerOneStaminaValue.textContent = this.playerOneModel.staminaPoints;\r\n\t\tthis.playerOneHP.style.width = this.playerOneModel.healthPoints + '%';\r\n\r\n\t\tthis.playerTwoHPValue.textContent = this.playerTwoModel.healthPoints;\r\n\t\tthis.playerTwoDefenceValue.textContent = this.playerTwoModel.defendPoints;\r\n\t\tthis.playerTwoStaminaValue.textContent = this.playerTwoModel.staminaPoints;\r\n\t\tthis.playerTwoHP.style.width = this.playerTwoModel.healthPoints + '%';\r\n\t};\r\n\r\n\tdoAnimation() {\r\n\t\tlet activePlayerUI;\r\n\t\tlet passivePlayerUI;\r\n\t\tlet direction;\r\n\r\n\t\tif(this.gameModel.playerOneTurn) {\r\n\t\t\tactivePlayerUI = '.player-1__model';\r\n\t\t\tpassivePlayerUI = '.player-2__model';\r\n\t\t\tdirection = 'right'\r\n\t\t} else {\r\n\t\t\tactivePlayerUI = '.player-2__model';\r\n\t\t\tpassivePlayerUI = '.player-1__model';\r\n\t\t\tdirection = 'left';\r\n\t\t}\r\n\r\n\t\tswitch (this.gameModel.tempCard.name) {\r\n\t\t\tcase 'strike_w':\r\n\t\t\tcase 'bash':\r\n\t\t\tcase 'slice':\r\n\t\t\tcase 'strike_r':\r\n\t\t\tcase 'quickSlash':\r\n\t\t\tcase 'strike_m':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\t\t\t\tattackAnimation(passivePlayerUI, 'attack', '../images/attack-effects/warrior-attack.png');\r\n\r\n\t\t\t\tsetTimeout(() => shakeAnimation(passivePlayerUI) , 200);\r\n\t\t\t\tsetTimeout(() => playSoundEffect('.strike-attack-audio') , 200);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defend_w':\r\n\t\t\tcase 'armaments':\r\n\t\t\tcase 'entrench':\r\n\t\t\tcase 'deflect':\r\n\t\t\tcase 'backFlip':\r\n\t\t\tcase 'defend_m':\r\n\t\t\tcase 'masterReality':\r\n\t\t\tcase 'thirdEye':\r\n\t\t\tcase 'survivor':\r\n\t\t\t\tblockAnimationEffect(activePlayerUI);\r\n\t\t\t\tplaySoundEffect('.defend-audio');\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bodySlam':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tattackAnimation(passivePlayerUI, 'smashAttack', '../images/attack-effects/smash.png')\r\n\r\n\t\t\t\tsetTimeout(() => shakeAnimation(passivePlayerUI) , 200);\r\n\t\t\t\tsetTimeout(() => playSoundEffect('.bash-attack-audio') , 200);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'anger':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tstandartAttackAnimation(passivePlayerUI, 'angerAttack', '../images/attack-effects/anger.png');\r\n\r\n\t\t\t\tsetTimeout(() => shakeAnimation(passivePlayerUI) , 200);\r\n\t\t\t\tsetTimeout(() => playSoundEffect('.anger-audio') , 200);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bloodletting':\r\n\t\t\t\tstandartAttackAnimation(activePlayerUI, 'shield', '../images/attack-effects/bloodletting.png');\r\n\r\n\t\t\t\tsetTimeout(() => shakeAnimation(activePlayerUI) , 100);\r\n\t\t\t\tsetTimeout(() => playSoundEffect('.bloodletting-audio') , 100);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'warcry':\r\n\t\t\t\tshakeAnimation(activePlayerUI);\r\n\t\t\t\tplaySoundEffect('.warcry-audio');\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perfectedStrike':\r\n\t\t\tcase 'flechettes':\r\n\t\t\tcase 'riddleWithHoles':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tmultipleAttackAnimation(passivePlayerUI, 'attack', '../images/attack-effects/warrior-attack.png', 3);\r\n\r\n\t\t\t\tsetTimeout(() => shakeAnimation(passivePlayerUI) , 200);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bludgeon':\r\n\t\t\t\tultimateSkillAnimation(passivePlayerUI, 'warriorUltimate', '../images/attack-effects/flash.png');\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n","export default class PlayersController {\r\n\tconstructor(playerOneModel, playerTwoModel, view) {\r\n\t\tthis.playerOneModel = playerOneModel;\r\n\t\tthis.playerTwoModel = playerTwoModel;\r\n\t\tthis.boardView = view;\r\n\r\n\t\tif (this.boardView.hasOwnProperty('doCardAction')) {\r\n\t\t\tthis.boardView.doCardAction.attach(() => this.playCard());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tthis.boardView.endTurn.attach(() => this.doEndTurn());\r\n\t\t}\r\n\t}\r\n\r\n\tplayCard(priority) {\r\n\t\tif(priority) {\r\n\t\t\tthis.playerOneModel.doAction();\r\n\t\t} else {\r\n\t\t\tthis.playerTwoModel.doAction();\r\n\t\t}\r\n\t}\r\n\r\n\tdoEndTurn() {\r\n\t\tthis.playerOneModel.endTurn();\r\n\t}\r\n}\r\n","import {switchPlayPause} from '../animation_and_sound_effects/animation.js';\r\n\r\nexport default class BoardController {\r\n\tconstructor(game, board, playerModel1, playerModel2, view) {\r\n\t\tthis.gameModel = game;\r\n\t\tthis.boardModel = board;\r\n\t\tthis.player1 = playerModel1;\r\n\t\tthis.player2 = playerModel2;\r\n\t\tthis.boardView = view;\r\n\r\n\t\tif (this.boardView.hasOwnProperty('onLoadCreate')) {\r\n\t\t\tthis.boardView.onLoadCreate.attach((card, place) => this.createCard(card, place));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('onAnimCards')) {\r\n\t\t\tthis.boardView.onAnimCards.attach((event) => this.cardAnimBoard(event));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('cardInHandChoosen')) {\r\n\t\t\tthis.boardView.cardInHandChoosen.attach((event, state) => this.cardAnimHand(event, state));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('grabCardStart')) {\r\n\t\t\tthis.boardView.grabCardStart.attach((event, state) => this.grabedCardAnim(event, state));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('grabCardEnd')) {\r\n\t\t\tthis.boardView.grabCardEnd.attach((event, state) => this.grabedCardAnim(event, state));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('preventDrag')) {\r\n\t\t\tthis.boardView.preventDrag.attach((event) => this.preventDrag(event));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('dropEvent')) {\r\n\t\t\tthis.boardView.dropEvent.attach(() => this.deleteActionCard());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tthis.boardView.endTurn.attach(() => this.createCardsInHand());\r\n\t\t\tthis.boardView.endTurn.attach(() => this.setPlayersTurnInfo());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('showPlayerDeck')) {\r\n\t\t\tthis.boardView.showPlayerDeck.attach((event) => this.showPlayersDeck(event));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('showPlayerDeck')) {\r\n\t\t\tthis.boardView.showPlayerDeck.attach((event) => this.closePlayersDeck(event));\r\n\t\t}\r\n\r\n\t\tif (this.gameModel.hasOwnProperty('selectionContinue')) {\r\n\t\t\tthis.gameModel.selectionContinue.attach(() => this.createCard());\r\n\t\t}\r\n\r\n\t\tif (this.gameModel.hasOwnProperty('selectionEnd')) {\r\n\t\t\tthis.gameModel.selectionEnd.attach(() => this.createCardsInHand());\r\n\t\t\tthis.gameModel.selectionEnd.attach(() => this.setPlayersTurnInfo());\r\n\t\t}\r\n\r\n\t\tif (this.player1.hasOwnProperty('cardDraw')) {\r\n\t\t\tthis.player1.cardDraw.attach((card) => this.addCardInHand(card));\r\n\t\t}\r\n\r\n\t\tif (this.player2.hasOwnProperty('cardDraw')) {\r\n\t\t\tthis.player2.cardDraw.attach((card) => this.addCardInHand(card));\r\n\t\t}\r\n\r\n\t\tif (this.player1.hasOwnProperty('cardDiscard')) {\r\n\t\t\tthis.player1.cardDiscard.attach((card) => this.deleteRandomCard(card));\r\n\t\t}\r\n\r\n\t\tif (this.player2.hasOwnProperty('cardDiscard')) {\r\n\t\t\tthis.player2.cardDiscard.attach((card) => this.deleteRandomCard(card));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('soundOffOn')) {\r\n\t\t\tthis.boardView.soundOffOn.attach(() => this.turnOnOfSound());\r\n\t\t}\r\n\t}\r\n\r\n\tcreateCard() {\r\n\t\tthis.boardModel.createCardsForChoose(this.gameModel);\r\n\t}\r\n\r\n\tcardAnimBoard(event) {\r\n\t\tthis.boardModel.cardChooseAnim(event);\r\n\t}\r\n\r\n\tcardAnimHand(event, state) {\r\n\t\tswitch (state) {\r\n\t\t\tcase 'focus':\r\n\t\t\t\tthis.boardModel.cardChooseAnimInHandAdd(event);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\t\tthis.boardModel.cardChooseAnimInHandRemove(event);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tcreateCardsInHand() {\r\n\t\tthis.boardModel.pullRandomCardsInHand();\r\n\t}\r\n\r\n\tgrabedCardAnim(event, state) {\r\n\t\tswitch (state) {\r\n\t\t\tcase 'focus':\r\n\t\t\t\tthis.boardModel.dragCardStart(event);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\t\tthis.boardModel.dragCardEnd(event);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpreventDrag(event) {\r\n\t\tthis.boardModel.dragPreventAction(event);\r\n\t}\r\n\r\n\tdeleteActionCard() {\r\n\t\tthis.boardModel.deletePlayedCard('playedCard');\r\n\t}\r\n\r\n\tdeleteRandomCard(card) {\r\n\t\tthis.boardModel.deletePlayedCard('randomCard', card);\r\n\t}\r\n\r\n\taddCardInHand(card) {\r\n\t\tthis.boardModel.createCards(card, 'hand', true);\r\n\t}\r\n\r\n\tshowPlayersDeck(eventTarget) {\r\n\t\tthis.boardModel.showCardsForPlayers(eventTarget);\r\n\t}\r\n\r\n\tclosePlayersDeck(event) {\r\n\t\tif (event == this.boardModel.showDeckPlayer1 || event == this.boardModel.showDeckPlayer2) {\r\n\t\t\tthis.boardModel.openCloseOverlay('open');\r\n\t\t}\r\n\t\tif (event == this.boardModel.playersDeckClose) {\r\n\t\t\tthis.boardModel.openCloseOverlay('close');\r\n\t\t}\r\n\t}\r\n\r\n\tsetPlayersTurnInfo() {\r\n\t\tthis.boardModel.showWhichTurn();\r\n\t}\r\n\r\n\tturnOnOfSound() {\r\n\t\tswitchPlayPause();\r\n\t}\r\n}\r\n","import Game from './modules/gameModel';\r\nimport Board from './modules/boardModel';\r\nimport BoardView from './modules/boardView';\r\nimport GameController from './modules/gameController';\r\nimport Players from './modules/playerModel';\r\nimport PlayersView from './modules/playerView';\r\nimport PlayersController from './modules/playerController';\r\nimport BoardController from './modules/boardController';\r\n\r\nexport const gameObserver = new Game();\r\n\r\nexport const boardModel = new Board(gameObserver);\r\n\r\nconst boardView = new BoardView(boardModel, gameObserver, document.querySelector('.wrapper-battle'));\r\n\r\nconst gameController = new GameController(gameObserver, boardView);\r\n\r\nexport const player1 = new Players(gameObserver, boardModel);\r\n\r\nexport const player2 = new Players(gameObserver, boardModel);\r\n\r\nconst playersView = new PlayersView(player1, player2, gameObserver, document.querySelector('.wrapper-battle'));\r\n\r\nconst playersController = new PlayersController(player1, player2, boardView);\r\n\r\nconst boardController = new BoardController(gameObserver, boardModel, player1, player2, boardView);\r\n\r\ngameObserver.start();\r\n\r\nboardView.init();"],"sourceRoot":""}
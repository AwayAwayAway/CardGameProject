{"version":3,"sources":["webpack://cardgameproject/webpack/bootstrap","webpack://cardgameproject/webpack/runtime/define property getters","webpack://cardgameproject/webpack/runtime/hasOwnProperty shorthand","webpack://cardgameproject/./js/modules/eventsModel.js","webpack://cardgameproject/./js/modules/cardsModel.js","webpack://cardgameproject/./js/cards.js","webpack://cardgameproject/./js/animation_and_sound_effects/animation.js","webpack://cardgameproject/./js/modules/gameModel.js","webpack://cardgameproject/./js/modules/boardModel.js","webpack://cardgameproject/./js/modules/boardView.js","webpack://cardgameproject/./js/modules/gameController.js","webpack://cardgameproject/./js/modules/playerModel.js","webpack://cardgameproject/./js/modules/playerView.js","webpack://cardgameproject/./js/modules/playerController.js","webpack://cardgameproject/./js/modules/boardController.js","webpack://cardgameproject/./js/game.js"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Events","this","listeners","listener","push","arg1","arg2","forEach","index","Cards","id","type","cost","effect","icon","name","sideEffect","skillCollection","warrior","gameObserver","activePlayer","healthPoints","defendPoints","boardModel","cardInHand","children","length","passivePlayer","rogue","mage","Math","floor","random","shakeAnimation","queryElement","direction","element","document","querySelector","classList","remove","setTimeout","add","createCardAnim","amount","elementAnim","i","contains","playSoundEffect","discardCardAnim","blockAnimationEffect","className","src","container","parentElement","image","createElement","appendChild","removeChild","attackAnimation","style","transform","standartAttackAnimation","ultimateSkillAnimation","audio","overlay","overlayClose","soundEffect","currentTime","play","attackAnimationEffect","querySelectorAll","Game","playerOneTurn","playerTwoTurn","playerOneClass","playerTwoClass","playerOnePullOfCards","playerTwoPullOfCards","playersInfo","dragCard","tempCard","selectionEnd","selectionContinue","choosePlayerInfo","updatePlayersNames","updatePlayersModels","init","setPlayersChoiceInfo","setPlayersClasses","setPlayersNames","setPlayersModels","setTextChooseInfo","setActivePassivePlayer","player1","player2","object","temp","localStorage","getItem","JSON","parse","notify","playerOneName","playerTwoName","cards","counter","getElementsByClassName","tempCardChoosePlayer","dataset","info","checkOnSelectedCards","setTurnPriority","checkCardsSelectionEnd","datainfo","search","j","eventTarget","find","Board","model","gameModel","decWrapper","btnAccept","cardsChooseCounter","battleField","endTurn","playersTurnInfo","cardsPlayField","soundOffOn","playersOverlay","playersDeck","playersDeckClose","showDeckPlayer1","showDeckPlayer2","onCreateCards","onCounterChange","removeCards","removeActionCard","createAnimation","endTurnAnimation","playerClassInfo","removeExtraCards","createCards","target","state","card","appendPlace","draggable","elDiv","setAttribute","backgroundImage","tempIndex","n","indexOf","place","orderToRemove","condition","staminaPoints","toggle","counterInfo","number","color","event","preventDefault","textContent","BoardView","board","game","selector","boardSelector","onLoadCreate","onDefineCards","onAnimCards","submitCardCheckChoose","cardInHandChoosen","grabCardStart","grabCardEnd","preventDrag","dropEvent","doCardAction","showPlayerDeck","addEventListener","attach","drawCards","counterUpdate","selectionEndUpdate","extraCardsToRemove","text","playerChooseInfoUpdate","name1","name2","playerNameUpdate","modelPlayer1","modelPlayer2","playerModelsUpdate","deleteActionCard","side","display","player1Model","player2Model","data","console","log","button","turnAnnouncer","removeProperty","left","right","endTurnAnim","GameController","view","boardView","defineCards","doCardCheckChoose","actionCard","doEndTurn","definePlayersCardSet","initActionCard","turnEndsNextPlayerTurn","Players","playerViewUpdate","cardDraw","cardDiscard","actionAnimation","updateView","standartAttack","attackDrawDiscard","sideEffectAttack","standartDefend","sideEffectDefend","defendDrawDiscard","defendWithAttack","randomCardDraw","randomDiscard","test","abs","undefined","randomCardDiscard","massiveRandomDraw","cardRemove","PlayersView","playerOneModel","playerTwoModel","playerContainer","playerOneHPValue","playerOneDefenceValue","playerOneStaminaValue","playerOneHP","playerTwoHPValue","playerTwoDefenceValue","playerTwoStaminaValue","playerTwoHP","updateViewHP","updateViewDef","doAnimation","width","activePlayerUI","passivePlayerUI","amountEffect","effectStorage","elem","multipleAttackAnimation","PlayersController","playCard","priority","doAction","BoardController","playerModel1","playerModel2","createCard","cardAnimBoard","cardAnimHand","grabedCardAnim","createCardsInHand","setPlayersTurnInfo","showPlayersDeck","closePlayersDeck","addCardInHand","deleteRandomCard","turnOnOfSound","createCardsForChoose","cardChooseAnim","cardChooseAnimInHandAdd","cardChooseAnimInHandRemove","pullRandomCardsInHand","dragCardStart","dragCardEnd","dragPreventAction","deletePlayedCard","showCardsForPlayers","openCloseOverlay","showWhichTurn","backAudio","hash","window","location","decodeURIComponent","substr","paused","pause","start"],"mappings":"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","file":"main.bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export default class Events {\r\n\tconstructor() {\r\n\t\tthis.listeners = [];\r\n\t}\r\n\r\n\tattach(listener) {\r\n\t\tthis.listeners.push(listener);\r\n\t}\r\n\r\n\tnotify(arg1, arg2) {\r\n\t\tthis.listeners.forEach((listener, index) => {\r\n\t\t\tthis.listeners[index](arg1, arg2);\r\n\t\t});\r\n\t}\r\n}\r\n","export default class Cards {\r\n\tconstructor(id, type, cost, effect, icon, name, sideEffect) {\r\n\t\tthis.id = id;\r\n\t\tthis.cost = cost;\r\n\t\tthis.type = type;\r\n\t\tthis.effect = effect;\r\n\t\tthis.icon = icon;\r\n\t\tthis.name = name;\r\n\t\tthis.sideEffect = sideEffect;\r\n\t}\r\n}\r\n","import Cards from './modules/cardsModel';\r\nimport {gameObserver} from './game';\r\nimport {boardModel} from './game';\r\n\r\n//START CREATING WARRIOR'S CARDS\r\nconst strike_w = new Cards(0, 'attack', 1, 6, 'images/cards/warrior/Strike.png', 'strike_w');\r\n\r\nconst bash = new Cards(1, 'attack', 1, 8, 'images/cards/warrior/Bash.png', 'bash');\r\n\r\nconst anger = new Cards(2, 'attackAddEffect', 1, 6, 'images/cards/warrior/Anger.png', 'anger',\r\n\t() => {\r\n\t\tlet effect;\r\n\t\tif (gameObserver.activePlayer.healthPoints < 50) {\r\n\t\t\teffect = 13;\r\n\t\t} else {\r\n\t\t\teffect = 6;\r\n\t\t}\r\n\t\treturn effect;\r\n\t});\r\n\r\nconst bodySlam = new Cards(3, 'attackAddEffect', 2, 0, 'images/cards/warrior/BodySlam.png', 'bodySlam', () => {\r\n\tlet effect;\r\n\tif (gameObserver.activePlayer.defendPoints > 0) {\r\n\t\teffect = gameObserver.activePlayer.defendPoints;\r\n\t} else {\r\n\t\teffect = 0;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst perfecedStrike = new Cards(4, 'attackAddEffect', 1, 6, 'images/cards/warrior/PerfectedStrike.png', 'perfectedStrike', () => 6 + boardModel.cardInHand.children.length);\r\n\r\nconst bludgeon = new Cards(5, 'attackAddEffect', 3, 12, 'images/cards/warrior/Bludgeon.png', 'bludgeon', () => {\r\n\tlet effect;\r\n\tif (gameObserver.passivePlayer.healthPoints > 50) {\r\n\t\teffect = 17;\r\n\t} else {\r\n\t\teffect = 12;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst defend_w = new Cards(6, 'defend', 1, 5, 'images/cards/warrior/Defend_R.png', 'defend_w');\r\n\r\nconst armaments = new Cards(7, 'defendAddEffect', 1, 5, 'images/cards/warrior/Armaments.png', 'armaments', () => {\r\n\tlet effect;\r\n\tif (gameObserver.activePlayer.defendPoints === 0) {\r\n\t\teffect = 7;\r\n\t} else {\r\n\t\teffect = 5;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst ironWave = new Cards(8, 'defendAndAttack', 1, 5, 'images/cards/warrior/IronWave.png', 'ironWave', () => 5);\r\n\r\nconst warcry = new Cards(9, 'defendDrawDiscard', 0, 1, 'images/cards/warrior/Warcry.png', 'warcry');\r\n\r\nconst bloodletting = new Cards(10, 'defendDrawDiscard', 0, 3, 'images/cards/warrior/Bloodletting.png', 'bloodletting');\r\n\r\nconst entrench = new Cards(11, 'defendAddEffect', 2, 2, 'images/cards/warrior/Entrench.png', 'entrench', () => gameObserver.activePlayer.defendPoints * 2 - gameObserver.activePlayer.defendPoints);\r\n\r\n//START CREATING ROGUE'S CARDS\r\nconst strike_r = new Cards(0, 'attack', 1, 6, 'images/cards/rogue/Strike_G.png', 'strike_r');\r\n\r\nconst daggerThrow = new Cards(1, 'attackDrawDiscard', 1, 9, 'images/cards/rogue/R_dagger-throw.png', 'daggerThrow');\r\n\r\nconst flechettes = new Cards(2, 'attackAddEffect', 1, 3, 'images/cards/rogue/Flechettes.png', 'flechettes', () => 3 * boardModel.cardInHand.children.length);\r\n\r\nconst riddleWithHoles = new Cards(3, 'attackAddEffect', 2, 7, 'images/cards/rogue/RiddleWithHoles.png', 'riddleWithHoles');\r\n\r\nconst slice = new Cards(4, 'attack', 0, 4, 'images/cards/rogue/Slice.png', 'slice');\r\n\r\nconst quickSlash = new Cards(5, 'attackDrawDiscard', 1, 7, 'images/cards/rogue/QuickSlash.png', 'quickSlash');\r\n\r\nconst survivor = new Cards(6, 'defendDrawDiscard', 1, 8, 'images/cards/rogue/Survivor.png', 'survivor');\r\n\r\nconst deflect = new Cards(7, 'defend', 0, 4, 'images/cards/rogue/Deflect.png', 'deflect');\r\n\r\nconst backFlip = new Cards(8, 'defendDrawDiscard', 1, 2, 'images/cards/rogue/Backflip.png', 'backFlip', () => 5);\r\n\r\nconst prepared = new Cards(9, 'defendDrawDiscard', 0, 1, 'images/cards/rogue/Prepared.png', 'prepared');\r\n\r\nconst expertise = new Cards(10, 'defendDrawDiscard', 1, 5, 'images/cards/rogue/Expertise.png', 'expertise');\r\n\r\nconst dash = new Cards(11, 'defendAndAttack', 2, 10, 'images/cards/rogue/Dash.png', 'dash', () => 8);\r\n\r\n//START CREATING MAGE'S CARDS\r\nconst strike_m = new Cards(0, 'attack', 1, 6, 'images/cards/mage/Strike_P.png', 'strike_m');\r\n\r\nconst cutThroughFate = new Cards(1, 'attackDrawDiscard', 1, 7, 'images/cards/mage/CutThroughFate.png', 'cutThroughFate', () => 2);\r\n\r\nconst reachHeaven = new Cards(2, 'attack', 2, 10, 'images/cards/mage/ReachHeaven.png', 'reachHeaven');\r\n\r\nconst signatureMove = new Cards(3, 'attackAddEffect', 2, 0, 'images/cards/mage/SignatureMove.png', 'signatureMove', () => gameObserver.passivePlayer.defendPoints);\r\n\r\nconst tantrum = new Cards(4, 'attackAddEffect', 1, 3, 'images/cards/mage/Tantrum.png', 'tantrum', () => 3 + (Math.floor(Math.random() * (6 - 1)) + 1));\r\n\r\nconst judjment = new Cards(5, 'attackAddEffect', 2, 0, 'images/cards/mage/Judgment.png', 'judjment', () => {\r\n\tlet effect;\r\n\tif (gameObserver.passivePlayer.healthPoints <= 15) {\r\n\t\teffect = 0;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst masterReality = new Cards(6, 'defendAddEffect', 1, 5, 'images/cards/mage/MasterReality.png', 'masterReality', () => {\r\n\tlet effect;\r\n\tif (gameObserver.activePlayer.defendPoints == 0) {\r\n\t\teffect = 10;\r\n\t} else {\r\n\t\teffect = 5;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst defend_m = new Cards(7, 'defend', 1, 5, 'images/cards/mage/Defend_P.png', 'defend_m');\r\n\r\nconst meditate = new Cards(8, 'defendAddEffect', 1, 3, 'images/cards/mage/Meditate.png', 'meditate');\r\n\r\nconst thirdEye = new Cards(9, 'defendDrawDiscard', 1, 7, 'images/cards/mage/ThirdEye.png', 'thirdEye');\r\n\r\nconst nirvana = new Cards(10, 'defendAddEffect', 1, 0, 'images/cards/mage/Nirvana.png', 'nirvana', () => gameObserver.passivePlayer.defendPoints);\r\n\r\nconst alpha = new Cards(11, 'defendDrawDiscard', 1, 4, 'images/cards/mage/Alpha.png', 'alpha');\r\n\r\n\r\nexport const skillCollection = {\r\n\twarrior: [strike_w, bash, anger, bodySlam, perfecedStrike, bludgeon, defend_w, armaments, ironWave, warcry, bloodletting, entrench],\r\n\trogue: [strike_r, daggerThrow, flechettes, riddleWithHoles, slice, quickSlash, survivor, deflect, backFlip, prepared, expertise, dash],\r\n\tmage: [strike_m, cutThroughFate, reachHeaven, signatureMove, tantrum, judjment, masterReality, defend_m, meditate, thirdEye, nirvana, alpha]\r\n};\r\n","// animation through all menu loading black screen\r\nfunction loading(target) {\r\n\tswitch (target) {\r\n\t\tcase 'mainMenuLoad':\r\n\t\t\tlet mainEl = document.createElement('div');\r\n\r\n\t\t\tmainEl.className = 'back-main-menu-anim';\r\n\r\n\t\t\tdocument.body.insertBefore(mainEl, document.querySelector('.wrapper-choose-menu'));\r\n\r\n\t\t\tsetTimeout(() => document.body.removeChild(mainEl), 1100);\r\n\t\t\tbreak;\r\n\t\tcase 'chooseMenuLoad':\r\n\t\t\tlet chooseEl = document.createElement('div');\r\n\r\n\t\t\tchooseEl.className = 'go-to-choose-menu-anim';\r\n\r\n\t\t\tdocument.body.insertBefore(chooseEl, document.querySelector('.wrapper-main-menu'));\r\n\r\n\t\t\tsetTimeout(() => document.body.removeChild(chooseEl), 1100);\r\n\t\t\tbreak;\r\n\t\tcase 'battleFieldLoad':\r\n\t\t\tlet battleEl = document.createElement('div');\r\n\r\n\t\t\tbattleEl.className = 'start-game-anim';\r\n\r\n\t\t\tdocument.body.insertBefore(battleEl, document.querySelector('.wrapper-choose-menu'));\r\n\r\n\t\t\tsetTimeout(() => document.body.removeChild(battleEl), 1100);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\n// starting play backgorundMusic\r\nfunction switchPlayPause() {\r\n\tconst hash = window.location.hash;\r\n\tconst state = decodeURIComponent(hash.substr(1));\r\n\tconst soundOffOn = document.querySelector('.soundIcon');\r\n\tlet backAudio;\r\n\r\n\tif (state == 'battle-field') {\r\n\t\tbackAudio = document.querySelector('.background-music-battlefield');\r\n\t} else {\r\n\t\tbackAudio = document.querySelector('.background-music-main-menu');\r\n\t}\r\n\r\n\tif (backAudio.paused) {\r\n\t\tbackAudio.play();\r\n\t\tsoundOffOn.className = 'fas fa-volume-up soundIcon';\r\n\t} else {\r\n\t\tbackAudio.pause();\r\n\t\tsoundOffOn.className = 'fas fa-volume-mute soundIcon';\r\n\t}\r\n}\r\n\r\nconst checkBackgroundAudio = (function (querySelector) {\r\n\tconst currentHash = [];\r\n\tconst mainAudio = document.querySelector('.background-music-main-menu');\r\n\tconst audio = document.querySelector('.background-music-battlefield');\r\n\tconst allAudio = document.querySelectorAll('.music');\r\n\r\n\treturn function () {\r\n\t\tcurrentHash.push(decodeURIComponent(window.location.hash.substr(1)));\r\n\r\n\t\tconst soundOffOn = document.querySelector(querySelector);\r\n\r\n\t\tif (currentHash[currentHash.length - 1] === 'battle-field' && [...allAudio].every(element => element.paused)) {\r\n\t\t\tmainAudio.pause();\r\n\t\t\taudio.pause();\r\n\t\t} else if (currentHash[currentHash.length - 1] === 'battle-field' && [...allAudio].some(element => element.paused)) {\r\n\t\t\tmainAudio.pause();\r\n\t\t\taudio.play();\r\n\t\t} else if (currentHash[currentHash.length - 1] === 'choose-menu' &&\r\n\t\t\tcurrentHash[currentHash.length - 2] === 'battle-field' && [...allAudio].every(element => element.paused)) {\r\n\t\t\tmainAudio.pause();\r\n\t\t\taudio.pause();\r\n\t\t} else if (currentHash[currentHash.length - 1] === 'choose-menu' &&\r\n\t\t\tcurrentHash[currentHash.length - 2] === 'battle-field' && [...allAudio].some(element => element.paused)) {\r\n\t\t\tmainAudio.play();\r\n\t\t\taudio.pause();\r\n\t\t}\r\n\r\n\t\tif ([...allAudio].every(element => element.paused)) {\r\n\t\t\tsoundOffOn.className = 'fas fa-volume-mute soundIcon';\r\n\t\t} else {\r\n\t\t\tsoundOffOn.className = 'fas fa-volume-up soundIcon';\r\n\t\t}\r\n\t};\r\n}('.soundIcon'));\r\n\r\n// shake display when character choosed\r\nfunction shakeAnimation(queryElement, direction = 'horizontal') {\r\n\tconst element = document.querySelector(queryElement);\r\n\r\n\tswitch (direction) {\r\n\t\tcase 'horizontal':\r\n\t\t\telement.classList.remove('shakeX');\r\n\t\t\tsetTimeout(() => element.classList.add('shakeX'), 0);\r\n\t\t\tsetTimeout(() => element.classList.remove('shakeX'), 400);\r\n\t\t\tbreak;\r\n\t\tcase 'vertical':\r\n\t\t\telement.classList.remove('shakeY');\r\n\t\t\tsetTimeout(() => element.classList.add('shakeY'), 0);\r\n\t\t\tsetTimeout(() => element.classList.remove('shakeY'), 400);\r\n\t\t\tbreak;\r\n\t\tcase 'mix':\r\n\t\t\telement.classList.remove('shakeMix');\r\n\t\t\tsetTimeout(() => element.classList.add('shakeMix'), 0);\r\n\t\t\tsetTimeout(() => element.classList.remove('shakeMix'), 400);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nfunction createCardAnim(querySelector, amount) {\r\n\tlet elementAnim = document.querySelector(querySelector);\r\n\r\n\tswitch (amount) {\r\n\t\tcase 'single':\r\n\t\t\tfor (let i = 0; i < [...elementAnim.children].length; i++) {\r\n\t\t\t\tif (elementAnim.children[i].classList.contains('cardsDrawAnim')) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t} else {\r\n\t\t\t\t\telementAnim.children[i].classList.add('cardsDrawAnim');\r\n\r\n\t\t\t\t\tplaySoundEffect('.push-card-audio');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'multiple':\r\n\t\t\t[...elementAnim.children].forEach((element, index) => setTimeout(() => {\r\n\t\t\t\telement.classList.add('cardsDrawAnim');\r\n\r\n\t\t\t\tplaySoundEffect('.push-card-audio');\r\n\t\t\t}, 250 * index));\r\n\t\t\tbreak;\r\n\t\tcase 'overlay':\r\n\t\t\t[...elementAnim.children].forEach(element => element.classList.add('cardsDrawAnim'));\r\n\t}\r\n}\r\n\r\nfunction discardCardAnim(querySelector) {\r\n\tquerySelector.classList.add('cardDiscard');\r\n}\r\n\r\nfunction endTurnAnim(side) {\r\n\tconst button = document.querySelector('.end-of-turn-btn');\r\n\tconst turnAnnouncer = document.querySelector('.players-action');\r\n\r\n\tturnAnnouncer.classList.add('players-turn-info');\r\n\r\n\tswitch (side) {\r\n\t\tcase 'left':\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tbutton.style.removeProperty('right');\r\n\t\t\t\tbutton.style.left = '5%';\r\n\t\t\t}, 500);\r\n\t\t\tbreak;\r\n\t\tcase 'right':\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tbutton.style.removeProperty('left');\r\n\t\t\t\tbutton.style.right = '5%';\r\n\t\t\t}, 500);\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tsetTimeout(() => button.classList.add('endTurnAnim'), 1300);\r\n\r\n\tsetTimeout(() => turnAnnouncer.classList.remove('players-turn-info'), 2100);\r\n\r\n\tsetTimeout(() => button.classList.remove('endTurnAnim'), 1000);\r\n}\r\n\r\nfunction blockAnimationEffect(querySelector, className, src) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\tconst image = document.createElement('img');\r\n\r\n\timage.src = src;\r\n\timage.className = className;\r\n\r\n\tcontainer.appendChild(image);\r\n\r\n\tsetTimeout(() => container.removeChild(image), 1000);\r\n}\r\n\r\nfunction attackAnimation(querySelector, className, src) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\tconst image = document.createElement('img');\r\n\r\n\timage.src = src;\r\n\timage.style.transform = `rotate(${Math.floor(Math.random() * (360 - 1) + 1)}deg)`;\r\n\timage.className = className;\r\n\r\n\tcontainer.appendChild(image);\r\n\r\n\tsetTimeout(() => container.removeChild(image), 600);\r\n}\r\n\r\nfunction multipleAttackAnimation(querySelector, className, src, amountEffect) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\r\n\tlet effectStorage = [];\r\n\r\n\tfor (let i = 0; i < amountEffect; i++) {\r\n\t\tconst image = document.createElement('img');\r\n\t\teffectStorage.push(image);\r\n\t}\r\n\r\n\teffectStorage.forEach((elem, index) => {\r\n\t\telem.src = src;\r\n\r\n\t\tif (index === 1) {\r\n\t\t\telem.style.transform = 'rotate(30deg)';\r\n\t\t} else if (index === 2) {\r\n\t\t\telem.style.transform = 'rotate(315deg)';\r\n\t\t}\r\n\r\n\t\telem.className = className;\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tcontainer.appendChild(elem);\r\n\t\t\tplaySoundEffect('.strike-attack-audio');\r\n\t\t\tsetTimeout(() => container.removeChild(elem), 400);\r\n\t\t}, index * 300);\r\n\t});\r\n}\r\n\r\nfunction standartAttackAnimation(querySelector, className, src) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\tconst image = document.createElement('img');\r\n\r\n\timage.src = src;\r\n\timage.className = className;\r\n\r\n\tcontainer.appendChild(image);\r\n\r\n\tsetTimeout(() => container.removeChild(image), 400);\r\n}\r\n\r\nfunction ultimateSkillAnimation(querySelector, className, src, audio) {\r\n\tconst container = document.querySelector(querySelector).parentElement;\r\n\tconst overlay = document.querySelector('.players-overlay');\r\n\tconst overlayClose = document.querySelector('.overlay__close');\r\n\tconst image = document.createElement('img');\r\n\r\n\timage.src = src;\r\n\timage.className = className;\r\n\r\n\toverlay.classList.remove('hidden');\r\n\toverlay.classList.add('fade-in');\r\n\toverlayClose.classList.add('hidden');\r\n\r\n\tsetTimeout(() => {\r\n\t\tcontainer.appendChild(image);\r\n\r\n\t\tshakeAnimation(querySelector)\r\n\r\n\t\tplaySoundEffect(audio);\r\n\t}, 200);\r\n\r\n\tsetTimeout(() => {\r\n\t\tcontainer.removeChild(image);\r\n\t\toverlay.classList.add('fade-out');\r\n\r\n\t}, 800);\r\n\r\n\tsetTimeout(() => {\r\n\t\toverlay.classList.add('hidden');\r\n\t\toverlay.classList.remove('fade-in');\r\n\t\toverlay.classList.remove('fade-out');\r\n\t\toverlayClose.classList.remove('hidden');\r\n\t}, 1000);\r\n}\r\n\r\nfunction playSoundEffect(querySelector) {\r\n\tconst soundEffect = document.querySelector(querySelector);\r\n\r\n\tif (!soundEffect) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tsoundEffect.currentTime = 0;\r\n\r\n\tsoundEffect.play();\r\n}\r\n\r\nfunction attackAnimationEffect(querySelector, direction) {\r\n\tconst container = document.querySelector(querySelector);\r\n\r\n\tswitch (direction) {\r\n\t\tcase 'right':\r\n\t\t\tcontainer.classList.add('attackRight');\r\n\r\n\t\t\tsetTimeout(() => container.classList.remove('attackRight'), 1000);\r\n\t\t\tbreak;\r\n\t\tcase 'left':\r\n\t\t\tcontainer.classList.add('attackLeft');\r\n\r\n\t\t\tsetTimeout(() => container.classList.remove('attackLeft'), 1000);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nexport {\r\n\tloading, switchPlayPause, checkBackgroundAudio, shakeAnimation,\r\n\tcreateCardAnim, endTurnAnim, blockAnimationEffect, attackAnimation,\r\n\tplaySoundEffect, attackAnimationEffect, multipleAttackAnimation, discardCardAnim,\r\n\tstandartAttackAnimation, ultimateSkillAnimation\r\n};\r\n\r\n\r\n\r\n\r\n","import Events from './eventsModel';\r\nimport {skillCollection} from '../cards';\r\nimport {player1, player2} from '../game';\r\nimport {playSoundEffect, shakeAnimation} from '../animation_and_sound_effects/animation.js';\r\n\r\nexport default class Game {\r\n\tconstructor() {\r\n\t\tthis.activePlayer = null;               //активный игрок на данный момент кто будет наносить урон\r\n\t\tthis.passivePlayer = null;               //пассивный игрок на данный момент кто будет получать урон\r\n\r\n\t\tthis.playerOneTurn = true;\r\n\t\tthis.playerTwoTurn = false;\r\n\r\n\t\tthis.playerOneClass = null;    // сохраняет класс игрока будем реализовывать выбор скилов под класс\r\n\t\tthis.playerTwoClass = null;\r\n\r\n\t\tthis.playerOnePullOfCards = [];\r\n\t\tthis.playerTwoPullOfCards = [];\r\n\r\n\t\tthis.playersInfo = {};  //info from local storage about choose menu\r\n\r\n\t\tthis.dragCard = null;\r\n\t\tthis.tempCard = null; // карта которая играется\r\n\r\n\t\t// событие выбор карт завершен\r\n\t\tthis.selectionEnd = new Events();\r\n\r\n\t\t// событие выбор карт продолжается\r\n\t\tthis.selectionContinue = new Events();\r\n\r\n\t\t// событие изменить кто выбирает карты\r\n\t\tthis.choosePlayerInfo = new Events();\r\n\r\n\t\t// событие установить никнеймы игрокам\r\n\t\tthis.updatePlayersNames = new Events();\r\n\r\n\t\t// событие установить модельки персонажей игрокам\r\n\t\tthis.updatePlayersModels = new Events();\r\n\t}\r\n\r\n\tstart() {\r\n\t\tthis.init();\r\n\t};\r\n\r\n\tinit() {\r\n\t\tthis.setPlayersChoiceInfo('playersInfo');\r\n\t\tthis.setPlayersClasses();\r\n\t\tthis.setPlayersNames();\r\n\t\tthis.setPlayersModels();\r\n\t\tthis.setTextChooseInfo();\r\n\t\tthis.setActivePassivePlayer();\r\n\t};\r\n\r\n\t// линкуем player1 & player2 в gamemodel\r\n\tsetActivePassivePlayer() {\r\n\t\tthis.activePlayer = player1;\r\n\t\tthis.passivePlayer = player2;\r\n\t};\r\n\r\n\t// забираем инфу о выборе игроками персонажей и их никнеймов и парсим json\r\n\tsetPlayersChoiceInfo(object) {\r\n\t\tlet temp = localStorage.getItem(object);\r\n\t\tthis.playersInfo = JSON.parse(temp);\r\n\t};\r\n\r\n\t// устанавливаем класы игроками из объекта\r\n\tsetPlayersClasses() {\r\n\t\tthis.playerOneClass = this.playersInfo.playerOneClass;\r\n\t\tthis.playerTwoClass = this.playersInfo.playerTwoClass;\r\n\t};\r\n\r\n\t// устанавливаем никнеймы игрокам из объекта\r\n\tsetPlayersNames() {\r\n\t\tthis.updatePlayersNames.notify(this.playersInfo.playerOneName, this.playersInfo.playerTwoName);\r\n\t};\r\n\r\n\t// устанавливаем модельки игроков согласно выбору\r\n\tsetPlayersModels() {\r\n\t\tthis.updatePlayersModels.notify(this.playersInfo.playerOneClass, this.playersInfo.playerTwoClass);\r\n\t};\r\n\r\n\t// показываем какой игрок выбирает карты\r\n\tsetTextChooseInfo() {\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tthis.choosePlayerInfo.notify(`${this.playersInfo.playerOneName} is choosing`);\r\n\t\t} else {\r\n\t\t\tthis.choosePlayerInfo.notify(`${this.playersInfo.playerTwoName} is choosing`);\r\n\t\t}\r\n\t};\r\n\r\n\t// устанавливаем приоритет хода игрока\r\n\tsetTurnPriority() {\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tthis.playerOneTurn = false;\r\n\t\t\tthis.playerTwoTurn = true;\r\n\t\t} else {\r\n\t\t\tthis.playerOneTurn = true;\r\n\t\t\tthis.playerTwoTurn = false;\r\n\t\t}\r\n\t};\r\n\r\n\t// пулим карты выбранные ироком на старте игры в gameControl, этими картами игроки будут играть дальше\r\n\tdefinePlayersCardSet() {\r\n\t\tlet cards = document.querySelectorAll('.cards');\r\n\r\n\t\t//счетчик выбранных карт\r\n\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\t// если выбрано больше или недобор указанных карт запрещает пулить в переменную\r\n\t\tif (counter < 8 || counter >= 9) {\r\n\t\t\tplaySoundEffect('.confirm-failed-audio');\r\n\t\t\tshakeAnimation('.accept', 'horizontal');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet tempCardChoosePlayer = [];\r\n\r\n\t\t//пушим карты 1го игрока в массив\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tif (cards[i].classList.contains('card-to-select')) {\r\n\t\t\t\t\ttempCardChoosePlayer.push(cards[i].dataset.info);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.playerOnePullOfCards = this.checkOnSelectedCards(tempCardChoosePlayer, this.playerOneClass);\r\n\t\t}\r\n\r\n\t\t//пушим карты 2го игрока в массив\r\n\t\tif (this.playerTwoTurn) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tif (cards[i].classList.contains('card-to-select')) {\r\n\t\t\t\t\ttempCardChoosePlayer.push(cards[i].dataset.info);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.playerTwoPullOfCards = this.checkOnSelectedCards(tempCardChoosePlayer, this.playerTwoClass);\r\n\t\t}\r\n\r\n\t\tplaySoundEffect('.confirm-audio');\r\n\r\n\t\t//меняем очередность выбора для игроков\r\n\t\tthis.setTurnPriority();\r\n\r\n\t\tthis.checkCardsSelectionEnd();\r\n\t};\r\n\r\n\t// передаем массив из выбранных согласно ID карты и класс выбранного персонажа для поиска в SkillCollection его типа карт\r\n\tcheckOnSelectedCards(datainfo, search) {\r\n\t\tlet temp = [];\r\n\r\n\t\tfor (let i = 0; i < skillCollection[search].length; i++) {\r\n\t\t\tfor (let j = 0; j < datainfo.length; j++) {\r\n\t\t\t\tif (skillCollection[search][i]['id'] == datainfo[j]) {\r\n\t\t\t\t\ttemp.push(skillCollection[search][i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn temp;\r\n\t};\r\n\r\n\t//проверяем игроки набрали карты скрываем меню выбора карт, открываем игровое поле\r\n\tcheckCardsSelectionEnd() {\r\n\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\t// если выбрано больше или недобор указанных карт запрещает пулить в переменную\r\n\t\tif (counter < 8 || counter >= 9) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.playerOnePullOfCards.length > 1 && this.playerTwoPullOfCards.length > 1) {\r\n\t\t\tthis.selectionEnd.notify();\r\n\t\t} else {\r\n\t\t\tthis.selectionContinue.notify();\r\n\t\t\tthis.setTextChooseInfo();\r\n\t\t}\r\n\t};\r\n\r\n\t//узнаем какая карта была взята для игры и сыграна\r\n\tinitActionCard(eventTarget) {\r\n\t\tthis.dragCard = eventTarget;\r\n\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tthis.tempCard = this.playerOnePullOfCards.find(element => element.id == this.dragCard.dataset.info);\r\n\t\t} else {\r\n\t\t\tthis.tempCard = this.playerTwoPullOfCards.find((element) => element.id == this.dragCard.dataset.info);\r\n\t\t}\r\n\t};\r\n\r\n\t//конец хода меняет инфо о активном игроке и обновляет выносливость\r\n\tturnEndsNextPlayerTurn() {\r\n\t\tif (this.playerOneTurn) {\r\n\t\t\tthis.playerOneTurn = false;\r\n\t\t\tthis.playerTwoTurn = true;\r\n\t\t\tthis.activePlayer = player2;\r\n\t\t\tthis.passivePlayer = player1;\r\n\t\t} else {\r\n\t\t\tthis.playerOneTurn = true;\r\n\t\t\tthis.playerTwoTurn = false;\r\n\t\t\tthis.activePlayer = player1;\r\n\t\t\tthis.passivePlayer = player2;\r\n\t\t}\r\n\t};\r\n}\r\n\r\n\r\n\r\n","import Events from './eventsModel';\r\nimport {skillCollection} from '../cards';\r\nimport {createCardAnim, playSoundEffect, endTurnAnim} from '../animation_and_sound_effects/animation.js';\r\n\r\nexport default class Board {\r\n\tconstructor(model) {\r\n\t\tthis.gameModel = model;\r\n\r\n\t\tthis.decWrapper = document.querySelector('.cards-choose-field');        // field for cards at the start when players are choosing\r\n\t\tthis.btnAccept = document.querySelector('.accept');               // player accept cards he chose\r\n\t\tthis.cardsChooseCounter = document.querySelector('.count');             // counter for amount of cards have been chosen(needs for alert)\r\n\t\tthis.cardInHand = document.querySelector('.card-in-hand-field');              // field for cards in hand each player\r\n\t\tthis.battleField = document.querySelector('.battle-field');            // play field\r\n\t\tthis.endTurn = document.querySelector('.end-of-turn-btn');             // end turn button\r\n\t\tthis.playersTurnInfo = document.querySelector('.players-action');\r\n\t\tthis.cardsPlayField = document.querySelector('.play-field');           // area for cards to drop and play their actions\r\n\t\tthis.soundOffOn = document.querySelector('.soundIcon');\r\n\r\n\t\tthis.playersOverlay = document.querySelector('.players-overlay');\r\n\t\tthis.playersDeck = document.querySelector('.players-overlay__cards');\r\n\t\tthis.playersDeckClose = document.querySelector('.overlay__close');\r\n\r\n\t\tthis.showDeckPlayer1 = document.querySelector('.player-1__pile-of-car');           // возможность в игре посмотреть какие карты ты выбрал\r\n\t\tthis.showDeckPlayer2 = document.querySelector('.player-2__pile-of-car');           // возможность в игре посмотреть какие карты ты выбрал\r\n\r\n\t\t// создаем событие на создание карт\r\n\t\tthis.onCreateCards = new Events();\r\n\t\tthis.onCounterChange = new Events();\r\n\t\tthis.removeCards = new Events();\r\n\t\tthis.removeActionCard = new Events();\r\n\t\tthis.createAnimation = new Events();\r\n\t\tthis.endTurnAnimation = new Events();\r\n\t}\r\n\r\n\t// создаем деку в начале игры для игрока согласно классу\r\n\tcreateCardsForChoose(playerClassInfo) {\r\n\t\tthis.removeExtraCards('board');\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tskillCollection[playerClassInfo.playerOneClass].forEach((element) => this.createCards(element, 'board'));\r\n\r\n\t\t\t\tthis.createAnimation.notify('.cards-choose-field', 'multiple');\r\n\r\n\t\t\t\t// createCardAnim('.cards-choose-field', 'multiple');\r\n\t\t\t}, 500)\r\n\t\t} else {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tskillCollection[playerClassInfo.playerTwoClass].forEach((element) => this.createCards(element, 'board'));\r\n\r\n\t\t\t\tthis.createAnimation.notify('.cards-choose-field', 'multiple');\r\n\r\n\t\t\t\t// createCardAnim('.cards-choose-field', 'multiple');\r\n\t\t\t}, 500)\r\n\t\t}\r\n\t}\r\n\r\n\tshowCardsForPlayers(eventTarget) {\r\n\t\tthis.removeExtraCards('overlay');\r\n\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target.classList.contains('player-1__pile-of-car')) {\r\n\t\t\tthis.gameModel.playerOnePullOfCards.forEach((element) => this.createCards(element, 'overlay'));\r\n\r\n\t\t\tthis.createAnimation.notify('.players-overlay__cards', 'overlay')\r\n\r\n\t\t\t// createCardAnim('.players-overlay__cards', 'overlay');\r\n\t\t}\r\n\r\n\t\tif (target.classList.contains('player-2__pile-of-car')) {\r\n\t\t\tthis.gameModel.playerTwoPullOfCards.forEach((element) => this.createCards(element, 'overlay'));\r\n\r\n\t\t\tthis.createAnimation.notify('.players-overlay__cards', 'overlay')\r\n\r\n\t\t\t// createCardAnim('.players-overlay__cards', 'overlay');\r\n\t\t}\r\n\t}\r\n\r\n\topenCloseOverlay(state) {\r\n\t\tswitch (state) {\r\n\t\t\tcase 'open':\r\n\t\t\t\tthis.playersOverlay.classList.remove('hidden');\r\n\r\n\t\t\t\tplaySoundEffect('.overlay-open-audio');\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'close':\r\n\t\t\t\tthis.playersOverlay.classList.add('hidden');\r\n\r\n\t\t\t\tplaySoundEffect('.overlay-close-audio');\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tcreateCards(card, appendPlace, draggable = false) {\r\n\t\tlet elDiv = document.createElement('div');\r\n\r\n\t\telDiv.setAttribute('class', 'cards');\r\n\t\telDiv.setAttribute('data-info', `${card.id}`);\r\n\t\telDiv.style.backgroundImage = `url(${card.icon})`;\r\n\r\n\t\tif (draggable) {\r\n\t\t\telDiv.setAttribute('draggable', 'true');\r\n\t\t}\r\n\r\n\t\tthis.onCreateCards.notify(elDiv, appendPlace);\r\n\t}\r\n\r\n\t// кидаем карты в руку\r\n\tpullRandomCardsInHand() {\r\n\t\tthis.removeExtraCards('hand');\r\n\r\n\t\tlet tempIndex = [];\r\n\r\n\t\t//делаем проверку чтобы карты в руке не повторялись\r\n\t\tfor (let i = 0; i < 4; i++) {                  // количество карт в руку\r\n\t\t\tlet n = Math.floor(Math.random() * 8);   // количество набранных карт\r\n\t\t\tif (tempIndex.indexOf(n) == -1) {\r\n\t\t\t\ttempIndex.push(n);\r\n\t\t\t} else {\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// создаем карты в руке согласно игрока чей ход\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\tthis.createCards(this.gameModel.playerOnePullOfCards[tempIndex[i]], 'hand', true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.createAnimation.notify('.card-in-hand-field', 'multiple');\r\n\r\n\t\t\t// createCardAnim('.card-in-hand-field', 'multiple');\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\tthis.createCards(this.gameModel.playerTwoPullOfCards[tempIndex[i]], 'hand', true);\r\n\t\t\t}\r\n\r\n\t\t\tthis.createAnimation.notify('.card-in-hand-field', 'multiple');\r\n\r\n\t\t\t// createCardAnim('.card-in-hand-field', 'multiple');\r\n\t\t}\r\n\t}\r\n\r\n\t// убираем лишние карты с доски или из руки\r\n\tremoveExtraCards(place) {\r\n\t\tlet orderToRemove = [];\r\n\r\n\t\tswitch (place) {\r\n\t\t\tcase 'board':\r\n\t\t\t\torderToRemove = [...this.decWrapper.children];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hand':\r\n\t\t\t\torderToRemove = [...this.cardInHand.children];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'overlay':\r\n\t\t\t\torderToRemove = [...this.playersDeck.children];\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.removeCards.notify(orderToRemove, place);\r\n\t}\r\n\r\n\t//удаляем сыгранные карты из руки с проверкой\r\n\tdeletePlayedCard(condition, card) {\r\n\t\tif (this.gameModel.tempCard.cost > this.gameModel.activePlayer.staminaPoints) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (condition) {\r\n\t\t\tcase 'playedCard':\r\n\t\t\t\tthis.removeActionCard.notify(this.gameModel.dragCard);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'randomCard':\r\n\t\t\t\tthis.removeActionCard.notify(card);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t// подсветка выбранных карт\r\n\tcardChooseAnim(eventTarget) {\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.decWrapper) {\r\n\t\t\ttarget.classList.toggle('card-to-select');\r\n\t\t}\r\n\r\n\t\tif (target.classList.contains('card-to-select')) {\r\n\t\t\tplaySoundEffect('.card-selected-audio')\r\n\t\t}\r\n\r\n\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\tlet counterInfo = {};\r\n\r\n\t\tcounterInfo.number = counter;\r\n\r\n\t\tif (counter > 8) {\r\n\t\t\tcounterInfo.color = 'red';\r\n\t\t} else if (counter == 8) {\r\n\t\t\tcounterInfo.color = 'green';\r\n\t\t} else if (counter > 0 && counter < 8) {\r\n\t\t\tcounterInfo.color = 'cyan';\r\n\t\t} else {\r\n\t\t\tcounterInfo.color = 'white';\r\n\t\t}\r\n\r\n\t\tthis.onCounterChange.notify(counterInfo);\r\n\t}\r\n\r\n\t//анимация выбора только одной карты для игры в руке\r\n\tcardChooseAnimInHandAdd(eventTarget) {\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.cardInHand) {\r\n\t\t\ttarget.classList.add('card-to-action');\r\n\t\t}\r\n\t}\r\n\r\n\t//анимация выбора только одной карты для игры в руке\r\n\tcardChooseAnimInHandRemove(eventTarget) {\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.cardInHand) {\r\n\t\t\ttarget.classList.remove('card-to-action');\r\n\t\t}\r\n\t}\r\n\r\n\t//добавляем стили для перетаскивания\r\n\tdragCardStart(eventTarget) {\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.cardInHand) {\r\n\t\t\tsetTimeout(() => target.classList.add('invisible'), 0);\r\n\t\t}\r\n\r\n\t\tplaySoundEffect('.drag-audio');\r\n\t}\r\n\r\n\t//у ираем стили для перетаскивания\r\n\tdragCardEnd(eventTarget) {\r\n\t\tplaySoundEffect('.card-grab-cancel-audio');\r\n\r\n\t\tlet target = eventTarget;\r\n\r\n\t\tif (target !== this.cardInHand) {\r\n\t\t\ttarget.classList.remove('invisible');\r\n\t\t}\r\n\t}\r\n\r\n\tdragPreventAction(event) {\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\tshowWhichTurn() {\r\n\t\tplaySoundEffect('.end-turn-audio');\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tthis.playersTurnInfo.textContent = `${this.gameModel.playersInfo.playerOneName}'s Turn`;\r\n\r\n\t\t\tthis.endTurnAnimation.notify('left');\r\n\r\n\t\t\t// endTurnAnim('left');\r\n\t\t} else {\r\n\t\t\tthis.playersTurnInfo.textContent = `${this.gameModel.playersInfo.playerTwoName}'s Turn`;\r\n\r\n\t\t\tthis.endTurnAnimation.notify('right');\r\n\r\n\t\t\t// endTurnAnim('right');\r\n\t\t}\r\n\t}\r\n}\r\n","import Events from './eventsModel';\r\nimport {createCardAnim, endTurnAnim} from '../animation_and_sound_effects/animation';\r\n\r\nexport default class BoardView {\r\n\tconstructor(board, game, selector) {\r\n\t\tthis.boardModel = board;\r\n\t\tthis.gameModel = game;\r\n\t\tthis.boardSelector = selector;\r\n\r\n\t\tthis.onLoadCreate = new Events;\r\n\r\n\t\t// событие для this.gameModel закинуть в масиив выбранные карты\r\n\t\tthis.onDefineCards = new Events;\r\n\r\n\t\t// событие на анимацию(подсветку выбора карт)\r\n\t\tthis.onAnimCards = new Events;\r\n\r\n\t\t// событие на проверку набрали ли игроки карты\r\n\t\tthis.submitCardCheckChoose = new Events;\r\n\r\n\t\t// навели убрали мышку на карту в руке\r\n\t\tthis.cardInHandChoosen = new Events();\r\n\r\n\t\t// навели убрали мышку на карту в руке\r\n\t\tthis.grabCardStart = new Events();\r\n\r\n\t\tthis.grabCardEnd = new Events();\r\n\r\n\t\tthis.preventDrag = new Events();\r\n\r\n\t\t//удаляем сыгранную карту\r\n\t\tthis.dropEvent = new Events();\r\n\r\n\t\t// выполняем действие карты\r\n\t\tthis.doCardAction = new Events();\r\n\r\n\t\tthis.endTurn = new Events();\r\n\r\n\t\tthis.showPlayerDeck = new Events();\r\n\r\n\t\tthis.soundOffOn = new Events();\r\n\r\n\t\tthis.boardModel.btnAccept.addEventListener('click', () => this.onDefineCards.notify());\r\n\r\n\t\tthis.boardModel.btnAccept.addEventListener('click', () => this.submitCardCheckChoose.notify());\r\n\r\n\t\t// событие клик подстветка выбора карт\r\n\t\tthis.boardModel.decWrapper.addEventListener('click', (event) => this.onAnimCards.notify(event.target));\r\n\r\n\t\t// показываем карты какие наюрал игрок на этапе выбора\r\n\t\tthis.boardModel.battleField.addEventListener('click', (event) => this.showPlayerDeck.notify(event.target));\r\n\r\n\t\tthis.boardModel.playersDeckClose.addEventListener('click', (event) => this.showPlayerDeck.notify(event.target));\r\n\r\n\t\t// анимация карт в руке при наведении\r\n\t\tthis.boardModel.cardInHand.addEventListener('mouseover', (event) => this.cardInHandChoosen.notify(event.target, 'focus'));\r\n\r\n\t\tthis.boardModel.cardInHand.addEventListener('mouseout', (event) => this.cardInHandChoosen.notify(event.target, 'blur'));\r\n\r\n\t\t// анимация карт при перетаскивании плюс узнаем какую карту перетавскиваем\r\n\t\tthis.boardModel.cardInHand.addEventListener('dragstart', (event) => this.grabCardStart.notify(event.target, 'focus'));\r\n\r\n\t\tthis.boardModel.cardInHand.addEventListener('dragend', (event) => this.grabCardEnd.notify(event.target, 'blur'));\r\n\r\n\t\t// prevent default behavior\r\n\t\tthis.boardModel.cardsPlayField.addEventListener('dragenter', (event) => this.preventDrag.notify(event));\r\n\r\n\t\tthis.boardModel.cardsPlayField.addEventListener('dragover', (event) => this.preventDrag.notify(event));\r\n\r\n\t\t// играем карты\r\n\t\tthis.boardModel.cardsPlayField.addEventListener('drop', () => this.dropEvent.notify());\r\n\r\n\t\tthis.boardModel.cardsPlayField.addEventListener('drop', () => this.doCardAction.notify(this.gameModel.playerOneTurn));\r\n\r\n\t\tthis.boardModel.endTurn.addEventListener('click', () => this.endTurn.notify());\r\n\r\n\t\tthis.boardModel.soundOffOn.addEventListener('click', () => this.soundOffOn.notify());\r\n\r\n\r\n\t\t// подписываемся на событие в модели\r\n\t\t// this.boardModel создала карты надо их отобразить\r\n\t\tthis.boardModel.onCreateCards.attach((card, place) => this.drawCards(card, place));\r\n\r\n\t\t// модель меняет количество набранных карт отображаем\r\n\t\tthis.boardModel.onCounterChange.attach((info) => this.counterUpdate(info));\r\n\r\n\t\t// событие this.gameModel проверяет набранны ли у игроков карты\r\n\t\tthis.gameModel.selectionEnd.attach(() => this.selectionEndUpdate());\r\n\r\n\t\t// событие на удаление лишних карт\r\n\t\tthis.boardModel.removeCards.attach((cards, place) => this.extraCardsToRemove(cards, place));\r\n\r\n\t\t// событие на отображение инфо кто выбирает карты\r\n\t\tthis.gameModel.choosePlayerInfo.attach((text) => this.playerChooseInfoUpdate(text));\r\n\r\n\t\t// событие на отображение никнеймов игроков\r\n\t\tthis.gameModel.updatePlayersNames.attach((name1, name2) => this.playerNameUpdate(name1, name2));\r\n\r\n\t\t// событие на отображение моделек персонажей\r\n\t\tthis.gameModel.updatePlayersModels.attach((modelPlayer1, modelPlayer2) => this.playerModelsUpdate(modelPlayer1, modelPlayer2));\r\n\r\n\t\t// удаление сыгранной карты\r\n\t\tthis.boardModel.removeActionCard.attach((card) => this.deleteActionCard(card));\r\n\r\n\t\tthis.boardModel.createAnimation.attach((querySelector, amount) => this.createAnimation(querySelector, amount));\r\n\r\n\t\tthis.boardModel.endTurnAnimation.attach((side) => this.endTurnAnimation(side));\r\n\r\n\r\n\t}\r\n\r\n\t// need for start render cards when page is loaded\r\n\tinit() {\r\n\t\tthis.onLoadCreate.notify();\r\n\t};\r\n\r\n\tdrawCards(card, place) {\r\n\t\tswitch (place) {\r\n\t\t\tcase 'board':\r\n\t\t\t\tthis.boardModel.decWrapper.appendChild(card);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hand':\r\n\t\t\t\tthis.boardModel.cardInHand.appendChild(card);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'overlay':\r\n\t\t\t\tthis.boardModel.playersDeck.appendChild(card);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.boardModel.cardsChooseCounter.textContent = 0;\r\n\t\tthis.boardModel.cardsChooseCounter.style = 'color: white';\r\n\t};\r\n\r\n\textraCardsToRemove(cards, place) {\r\n\r\n\t\tif (place == 'board' && cards.length > 0) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tthis.boardModel.decWrapper.removeChild(cards[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (place == 'hand' && cards.length > 0) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tthis.boardModel.cardInHand.removeChild(cards[i]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (place == 'overlay' && cards.length > 0) {\r\n\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\tthis.boardModel.playersDeck.removeChild(cards[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tdeleteActionCard(card) {\r\n\t\tthis.boardModel.cardInHand.removeChild(card);\r\n\t}\r\n\r\n\tcounterUpdate(info) {\r\n\t\tthis.boardModel.cardsChooseCounter.textContent = info.number;\r\n\t\tthis.boardModel.cardsChooseCounter.style = `color: ${info.color}`;\r\n\t};\r\n\r\n\tselectionEndUpdate() {\r\n\t\tthis.boardModel.decWrapper.style.display = 'none';\r\n\t\tthis.boardModel.battleField.classList.remove('hidden');\r\n\t\t// this.boardSelector.querySelector('.card-counter').classList.add('hidden');\r\n\t\tthis.boardSelector.querySelector('.card-counter').style.display = 'none';\r\n\t}\r\n\r\n\tplayerChooseInfoUpdate(text) {\r\n\t\tthis.boardSelector.querySelector('.player-name-choosing').textContent = text;\r\n\t}\r\n\r\n\tplayerNameUpdate(name1, name2) {\r\n\t\tthis.boardSelector.querySelector('.player-1__name').textContent = name1;\r\n\t\tthis.boardSelector.querySelector('.player-2__name').textContent = name2;\r\n\t}\r\n\r\n\tplayerModelsUpdate(modelPlayer1, modelPlayer2) {\r\n\t\tconst player1Model = this.boardSelector.querySelector('.player-1__model');\r\n\t\tconst player2Model = this.boardSelector.querySelector('.player-2__model');\r\n\r\n\t\tplayer1Model.type = 'image/svg+xml';\r\n\t\tplayer2Model.type = 'image/svg+xml';\r\n\r\n\t\tswitch (modelPlayer1) {\r\n\t\t\tcase 'warrior':\r\n\t\t\t\tplayer1Model.data = 'images/models/viking.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rogue':\r\n\t\t\t\tplayer1Model.data = 'images/models/rogue.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mage':\r\n\t\t\t\tplayer1Model.data = 'images/models/mage.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('models not found');\r\n\t\t}\r\n\r\n\t\tswitch (modelPlayer2) {\r\n\t\t\tcase 'warrior':\r\n\t\t\t\tplayer2Model.data = 'images/models/viking.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rogue':\r\n\t\t\t\tplayer2Model.data = 'images/models/rogue.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mage':\r\n\t\t\t\tplayer2Model.data = 'images/models/mage.svg';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('models not found');\r\n\t\t}\r\n\t}\r\n\r\n\tcreateAnimation(querySelector, amount) {\r\n\t\tcreateCardAnim(querySelector, amount)\r\n\t}\r\n\r\n\tendTurnAnimation(side) {\r\n\t\tendTurnAnim(side);\r\n\t}\r\n}\r\n","export default class GameController {\r\n\tconstructor(model, view) {\r\n\t\tthis.gameModel = model;\r\n\t\tthis.boardView = view;\r\n\r\n\t\tif (this.boardView.hasOwnProperty('onDefineCards')) {\r\n\t\t\tthis.boardView.onDefineCards.attach(() => this.defineCards());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('submitCardCheckChoose')) {\r\n\t\t\tthis.boardView.submitCardCheckChoose.attach(() => this.doCardCheckChoose());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('grabCardStart')) {\r\n\t\t\tthis.boardView.grabCardStart.attach((eventTarget) => this.actionCard(eventTarget));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tthis.boardView.endTurn.attach(() => this.doEndTurn());\r\n\t\t}\r\n\t}\r\n\r\n\t// событие на кнопку подтверждения выбора карт, запоминаем что выбрал в масси\r\n\tdefineCards() {\r\n\t\tthis.gameModel.definePlayersCardSet();\r\n\t}\r\n\r\n\t// событие на кнопку подтверждения выбора карт, проверяем оба игрока сделали выбор\r\n\tdoCardCheckChoose() {\r\n\t\tthis.gameModel.checkCardsSelectionEnd();\r\n\t}\r\n\r\n\tactionCard(eventTarget) {\r\n\t\tthis.gameModel.initActionCard(eventTarget);\r\n\t}\r\n\r\n\tdoEndTurn() {\r\n\t\tthis.gameModel.turnEndsNextPlayerTurn();\r\n\t}\r\n}\r\n","import Events from './eventsModel';\r\nimport {playSoundEffect, createCardAnim, discardCardAnim} from '../animation_and_sound_effects/animation.js';\r\n\r\nexport default class Players {\r\n\tconstructor(game, board) {\r\n\t\tthis.healthPoints = 100;\r\n\t\tthis.staminaPoints = 4;\r\n\t\tthis.defendPoints = 7;\r\n\r\n\t\tthis.gameModel = game;\r\n\t\tthis.boardModel = board;\r\n\r\n\t\tthis.playerViewUpdate = new Events();\r\n\t\tthis.cardDraw = new Events();\r\n\t\tthis.cardDiscard = new Events();\r\n\t\tthis.actionAnimation = new Events();\r\n\t}\r\n\r\n\tendTurn() {\r\n\t\tthis.gameModel.activePlayer.staminaPoints = 4;\r\n\t\tthis.gameModel.passivePlayer.staminaPoints = 4;\r\n\r\n\t\tthis.updateView();\r\n\t}\r\n\r\n\tupdateView() {\r\n\t\tthis.playerViewUpdate.notify();\r\n\t};\r\n\r\n\tdoAction() {\r\n\t\tif (this.gameModel.activePlayer.staminaPoints < this.gameModel.tempCard.cost) {\r\n\t\t\tplaySoundEffect('.card-grab-cancel-audio');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tswitch (this.gameModel.tempCard.type) {\r\n\t\t\tcase 'attack':\r\n\t\t\t\tthis.standartAttack(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attackDrawDiscard':\r\n\t\t\t\tthis.attackDrawDiscard(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attackAddEffect':\r\n\t\t\t\tthis.sideEffectAttack(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defend':\r\n\t\t\t\tthis.standartDefend(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defendAddEffect':\r\n\t\t\t\tthis.sideEffectDefend(this.gameModel.tempCard);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defendDrawDiscard':\r\n\t\t\t\tthis.defendDrawDiscard(this.gameModel.tempCard);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defendAndAttack':\r\n\t\t\t\tthis.defendWithAttack(this.gameModel.tempCard);\r\n\t\t}\r\n\r\n\t\t// this.actionAnimation.notify();\r\n\t};\r\n\r\n\trandomCardDraw() {\r\n\t\tlet randomCardDraw = Math.floor(Math.random() * this.gameModel.playerOnePullOfCards.length);\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tthis.cardDraw.notify(this.gameModel.playerOnePullOfCards[randomCardDraw]);\r\n\t\t} else {\r\n\t\t\tthis.cardDraw.notify(this.gameModel.playerTwoPullOfCards[randomCardDraw]);\r\n\t\t}\r\n\r\n\t\tcreateCardAnim('.card-in-hand-field', 'single');\r\n\t}\r\n\r\n\trandomCardDiscard() {\r\n\t\tlet randomDiscard = Math.floor(Math.random() * this.boardModel.cardInHand.children.length);\r\n\r\n\t\t//it will be error if you use DaggerThrow as the last card in hand so w check on this\r\n\t\tif (this.boardModel.cardInHand.children.length > 0) {\r\n\t\t\tdiscardCardAnim(this.boardModel.cardInHand.children[randomDiscard]);\r\n\r\n\t\t\tplaySoundEffect('.discard-card-audio');\r\n\r\n\t\t\tsetTimeout(() => this.cardDiscard.notify(this.boardModel.cardInHand.children[randomDiscard]), 300)\r\n\t\t}\r\n\t}\r\n\r\n\tcardRemove(element) {\r\n\t\t//it will be error if you use DaggerThrow as the last card in hand so w check on this\r\n\t\tif (this.boardModel.cardInHand.children.length > 0) {\r\n\t\t\tdiscardCardAnim(element);\r\n\r\n\t\t\tplaySoundEffect('.discard-card-audio');\r\n\r\n\t\t\t// setTimeout(() => this.cardDiscard.notify(element), 300)\r\n\t\t\tthis.cardDiscard.notify(element)\r\n\t\t}\r\n\t}\r\n\r\n\t// we take condition only for card \"expertise\"\r\n\tmassiveRandomDraw(card, condition) {\r\n\t\tlet tempIndex = [];\r\n\r\n\t\t//делаем проверку чтобы карты в руке не повторялись\r\n\t\tfor (let i = 0; i < card.effect - condition; i++) {                  // количество карт в руку\r\n\t\t\tlet n = Math.floor(Math.random() * 8);            // количество набранных карт\r\n\t\t\tif (tempIndex.indexOf(n) === -1) {\r\n\t\t\t\ttempIndex.push(n);\r\n\t\t\t} else {\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\tthis.cardDraw.notify(this.gameModel.playerOnePullOfCards[tempIndex[i]]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\tthis.cardDraw.notify(this.gameModel.playerTwoPullOfCards[tempIndex[i]]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcreateCardAnim('.card-in-hand-field', 'single');\r\n\t}\r\n\r\n\tstandartAttack(card) {\r\n\t\tif (this.gameModel.passivePlayer.defendPoints) {\r\n\t\t\tlet test = this.gameModel.passivePlayer.defendPoints - card.effect;\r\n\r\n\t\t\tif (test < 0) {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = test;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.actionAnimation.notify();\r\n\t};\r\n\r\n\tsideEffectAttack(card) {\r\n\t\t// some of cards have special side effects, so we do additional if check\r\n\t\t// to make for them special methods\r\n\r\n\t\tif (card.name == 'riddleWithHoles') {\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\r\n\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.actionAnimation.notify();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'judjment') {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tif (sideEffect == undefined) {\r\n\t\t\t\tthis.actionAnimation.notify();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints = sideEffect;\r\n\r\n\t\t\tthis.actionAnimation.notify();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// some of cards havee common side effect so we can group it in one method\r\n\t\tif (card.sideEffect) {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tif (this.gameModel.passivePlayer.defendPoints) {\r\n\t\t\t\tlet test = this.gameModel.passivePlayer.defendPoints - sideEffect;\r\n\r\n\t\t\t\tif (test < 0) {\r\n\t\t\t\t\tthis.gameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.gameModel.passivePlayer.defendPoints = test;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (sideEffect) {\r\n\t\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= sideEffect;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.actionAnimation.notify();\r\n\t};\r\n\r\n\tattackDrawDiscard(card) {\r\n\t\t// some of cards have special side effect, so we do additional if check\r\n\t\t// to make for them special methods\r\n\t\t// if (this.gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\tif (this.gameModel.passivePlayer.defendPoints) {\r\n\t\t\tlet test = this.gameModel.passivePlayer.defendPoints - card.effect;\r\n\r\n\t\t\tif (test < 0) {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = test;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'daggerThrow') {\r\n\t\t\tsetTimeout(() => this.randomCardDiscard(), 300)\r\n\t\t\tsetTimeout(() => this.randomCardDraw(), 800)\r\n\t\t}\r\n\r\n\t\tif (card.name == 'quickSlash') {\r\n\t\t\tthis.randomCardDraw();\r\n\t\t}\r\n\r\n\t\tif (card.name == 'cutThroughFate') {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += sideEffect;\r\n\r\n\t\t\tsetTimeout(() => this.randomCardDraw(),600)\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.actionAnimation.notify();\r\n\t};\r\n\r\n\tstandartDefend(card) {\r\n\t\tthis.gameModel.activePlayer.defendPoints += card.effect;\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.actionAnimation.notify();\r\n\t};\r\n\r\n\tsideEffectDefend(card) {\r\n\t\tif (card.name == 'nirvana') {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tthis.gameModel.activePlayer.defendPoints = sideEffect;\r\n\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.actionAnimation.notify();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'meditate') {\r\n\t\t\tlet test = this.gameModel.activePlayer.staminaPoints - card.cost + card.effect;\r\n\r\n\t\t\tif (test > 4) {\r\n\t\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\t\t\t\tthis.gameModel.activePlayer.staminaPoints = 4;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\t\t\t\tthis.gameModel.activePlayer.staminaPoints += card.effect;\r\n\t\t\t}\r\n\r\n\t\t\tthis.actionAnimation.notify();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.sideEffect) {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += sideEffect;\r\n\t\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.actionAnimation.notify();\r\n\t\t}\r\n\t};\r\n\r\n\tdefendWithAttack(card) {\r\n\t\tif (this.gameModel.passivePlayer.defendPoints) {\r\n\t\t\tlet test = this.gameModel.passivePlayer.defendPoints - card.effect;\r\n\r\n\t\t\tif (test < 0) {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\tthis.gameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gameModel.passivePlayer.defendPoints = test;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.gameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.defendPoints += card.effect;\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.actionAnimation.notify();\r\n\t};\r\n\r\n\tdefendDrawDiscard(card) {\r\n\t\t// some of cards have special side effect, so we do additional if check\r\n\t\t// to make for them special methods\r\n\t\t// if (this.gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\tif (card.name == 'prepared') {\r\n\t\t\tthis.randomCardDiscard();\r\n\t\t\tsetTimeout(() =>this.randomCardDraw(), 300)\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'warcry') {\r\n\t\t\tthis.randomCardDraw();\r\n\r\n\t\t\tthis.actionAnimation.notify();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'survivor') {\r\n\t\t\tsetTimeout(() => this.randomCardDiscard(), 300)\r\n\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += card.effect;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'bloodletting') {\r\n\t\t\tthis.randomCardDraw();\r\n\r\n\t\t\tthis.gameModel.activePlayer.healthPoints -= card.effect;\r\n\r\n\t\t\tthis.actionAnimation.notify();\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (card.name == 'expertise') {\r\n\t\t\tthis.massiveRandomDraw(card, this.boardModel.cardInHand.children.length);\r\n\t\t}\r\n\r\n\t\tif (card.name == 'alpha') {\r\n\r\n\t\t\t// убираем лишние карты из руки\r\n\t\t\tfor (let i = 0; i < this.boardModel.cardInHand.children.length; i++) {\r\n\t\t\t\tif (this.boardModel.cardInHand.children[i].classList.contains('cards')) {\r\n\t\t\t\t\tthis.cardRemove(this.boardModel.cardInHand.children[i]);\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.massiveRandomDraw(card, 0);\r\n\t\t}\r\n\r\n\t\tif (card.name == 'backFlip') {\r\n\t\t\tlet sideEffect = card.sideEffect();\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += sideEffect;\r\n\r\n\t\t\tsetTimeout(() => this.massiveRandomDraw(card, 0), 300)\r\n\t\t}\r\n\r\n\t\tif (card.name == 'thirdEye') {\r\n\t\t\tthis.gameModel.activePlayer.defendPoints += card.effect;\r\n\r\n\t\t\tthis.randomCardDraw();\r\n\t\t}\r\n\r\n\t\tthis.gameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\tthis.actionAnimation.notify();\r\n\t};\r\n}\r\n","import {\r\n\tattackAnimation, attackAnimationEffect, blockAnimationEffect,\r\n\tplaySoundEffect, shakeAnimation, multipleAttackAnimation, standartAttackAnimation,\r\n\tultimateSkillAnimation\r\n} from '../animation_and_sound_effects/animation';\r\n\r\nexport default class PlayersView {\r\n\tconstructor(playerOneModel, playerTwoModel, gameModel, container) {\r\n\t\tthis.playerOneModel = playerOneModel;\r\n\t\tthis.playerTwoModel = playerTwoModel;\r\n\t\tthis.gameModel = gameModel;\r\n\t\tconst playerContainer = container;\r\n\r\n\t\tthis.playerOneHPValue = playerContainer.querySelector('.player-1__hp-value');\r\n\t\tthis.playerOneDefenceValue = playerContainer.querySelector('.player-1__defence-value');\r\n\t\tthis.playerOneStaminaValue = playerContainer.querySelector('.player-1__stamina-value');\r\n\t\tthis.playerOneHP = playerContainer.querySelector('.player-1__hp-bar-inner');\r\n\r\n\t\tthis.playerTwoHPValue = playerContainer.querySelector('.player-2__hp-value');\r\n\t\tthis.playerTwoDefenceValue = playerContainer.querySelector('.player-2__defence-value');\r\n\t\tthis.playerTwoStaminaValue = playerContainer.querySelector('.player-2__stamina-value');\r\n\t\tthis.playerTwoHP = playerContainer.querySelector('.player-2__hp-bar-inner');\r\n\r\n\t\tthis.playerOneModel.playerViewUpdate.attach(() => {\r\n\t\t\tthis.updateViewHP();\r\n\t\t\tthis.updateViewDef();\r\n\t\t});\r\n\t\tthis.playerTwoModel.playerViewUpdate.attach(() => {\r\n\t\t\tthis.updateViewHP();\r\n\t\t\tthis.updateViewDef();\r\n\t\t});\r\n\r\n\t\tthis.playerTwoModel.actionAnimation.attach(() => this.doAnimation());\r\n\t\tthis.playerTwoModel.actionAnimation.attach(() => this.doAnimation());\r\n\r\n\t\tthis.updateViewHP();\r\n\t\tthis.updateViewDef();\r\n\r\n\t}\r\n\r\n\t// устанавливаем первые параметры здоровье, защита, стамина\r\n\tupdateViewHP() {\r\n\t\tthis.playerOneHPValue.textContent = this.playerOneModel.healthPoints;\r\n\t\tthis.playerOneStaminaValue.textContent = this.playerOneModel.staminaPoints;\r\n\t\tthis.playerOneHP.style.width = this.playerOneModel.healthPoints + '%';\r\n\r\n\t\tthis.playerTwoHPValue.textContent = this.playerTwoModel.healthPoints;\r\n\t\tthis.playerTwoStaminaValue.textContent = this.playerTwoModel.staminaPoints;\r\n\t\tthis.playerTwoHP.style.width = this.playerTwoModel.healthPoints + '%';\r\n\t};\r\n\r\n\tupdateViewDef() {\r\n\t\tthis.playerOneDefenceValue.textContent = this.playerOneModel.defendPoints;\r\n\t\tthis.playerOneStaminaValue.textContent = this.playerOneModel.staminaPoints;\r\n\r\n\t\tthis.playerTwoDefenceValue.textContent = this.playerTwoModel.defendPoints;\r\n\t\tthis.playerTwoStaminaValue.textContent = this.playerTwoModel.staminaPoints;\r\n\t};\r\n\r\n\tdoAnimation() {\r\n\t\tlet activePlayerUI;\r\n\t\tlet passivePlayerUI;\r\n\t\tlet direction;\r\n\r\n\t\tif (this.gameModel.playerOneTurn) {\r\n\t\t\tactivePlayerUI = '.player-1__model';\r\n\t\t\tpassivePlayerUI = '.player-2__model';\r\n\t\t\tdirection = 'right';\r\n\t\t} else {\r\n\t\t\tactivePlayerUI = '.player-2__model';\r\n\t\t\tpassivePlayerUI = '.player-1__model';\r\n\t\t\tdirection = 'left';\r\n\t\t}\r\n\r\n\t\tswitch (this.gameModel.tempCard.name) {\r\n\t\t\tcase 'strike_w':\r\n\t\t\tcase 'bash':\r\n\t\t\tcase 'strike_r':\r\n\t\t\tcase 'quickSlash':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\t\t\t\tattackAnimation(passivePlayerUI, 'attack', 'images/attack-effects/warrior-attack.png');\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tshakeAnimation(passivePlayerUI);\r\n\t\t\t\t\tplaySoundEffect('.strike-attack-audio');\r\n\t\t\t\t}, 200);\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'defend_w':\r\n\t\t\tcase 'armaments':\r\n\t\t\tcase 'entrench':\r\n\t\t\tcase 'deflect':\r\n\t\t\tcase 'backFlip':\r\n\t\t\tcase 'defend_m':\r\n\t\t\tcase 'nirvana':\r\n\t\t\tcase 'masterReality':\r\n\t\t\tcase 'thirdEye':\r\n\t\t\tcase 'survivor':\r\n\t\t\t\tblockAnimationEffect(activePlayerUI, 'shield','images/icons/Icon_Block.png');\r\n\t\t\t\tplaySoundEffect('.defend-audio');\r\n\r\n\t\t\t\tthis.updateViewDef();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'bodySlam':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tattackAnimation(passivePlayerUI, 'smashAttack', 'images/attack-effects/smash.png');\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tshakeAnimation(passivePlayerUI);\r\n\t\t\t\t\tplaySoundEffect('.bash-attack-audio');\r\n\t\t\t\t}, 200);\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'slice':\r\n\t\t\tcase 'strike_m':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tattackAnimation(passivePlayerUI, 'smashAttack', 'images/attack-effects/smash.png');\r\n\r\n\t\t\t\tplaySoundEffect('.mage-punch-audio');\r\n\r\n\t\t\t\tshakeAnimation(passivePlayerUI);\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'daggerThrow':\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\t\t\t\t\tattackAnimation(passivePlayerUI, 'smashAttack', 'images/attack-effects/smash.png');\r\n\r\n\t\t\t\t\tshakeAnimation(passivePlayerUI);\r\n\t\t\t\t\tplaySoundEffect('.bash-attack-audio');\r\n\t\t\t\t}, 200);\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'anger':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tstandartAttackAnimation(passivePlayerUI, 'angerAttack', 'images/attack-effects/anger.png');\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tshakeAnimation(passivePlayerUI);\r\n\t\t\t\t\tplaySoundEffect('.anger-audio');\r\n\t\t\t\t}, 200);\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'reachHeaven':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tstandartAttackAnimation(passivePlayerUI, 'angerAttack', 'images/attack-effects/reach-heaven.png');\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tshakeAnimation(passivePlayerUI);\r\n\t\t\t\t\tplaySoundEffect('.mage-strong-audio');\r\n\t\t\t\t}, 200);\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ironWave':\r\n\t\t\tcase 'dash':\r\n\t\t\t\tblockAnimationEffect(activePlayerUI,'shield','images/icons/Icon_Block.png');\r\n\r\n\t\t\t\tplaySoundEffect('.defend-audio');\r\n\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tsetTimeout(() => attackAnimationEffect(activePlayerUI, direction), 400);\r\n\r\n\t\t\t\tsetTimeout(() => standartAttackAnimation(passivePlayerUI, 'angerAttack', 'images/attack-effects/anger.png'), 400);\r\n\r\n\t\t\t\tsetTimeout(() => shakeAnimation(passivePlayerUI), 400);\r\n\r\n\t\t\t\tsetTimeout(() => playSoundEffect('.bash-attack-audio'), 400);\r\n\r\n\t\t\t\tsetTimeout(() => this.updateViewHP(), 400);\r\n\r\n\t\t\t\tsetTimeout(() => this.updateViewDef(), 400);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'bloodletting':\r\n\t\t\t\tstandartAttackAnimation(activePlayerUI, 'shield', 'images/attack-effects/bloodletting.png');\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tshakeAnimation(activePlayerUI);\r\n\t\t\t\t\tplaySoundEffect('.bloodletting-audio');\r\n\t\t\t\t}, 200);\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'warcry':\r\n\t\t\t\tshakeAnimation(activePlayerUI);\r\n\r\n\t\t\t\tplaySoundEffect('.warcry-audio');\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'meditate':\r\n\t\t\tcase 'alpha':\r\n\t\t\t\tblockAnimationEffect(activePlayerUI, 'expertice', 'images/attack-effects/refresh-stamina.svg');\r\n\r\n\t\t\t\tplaySoundEffect('.meditate-audio');\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'cutThroughFate':\r\n\t\t\t\tblockAnimationEffect(activePlayerUI,'shield','images/icons/Icon_Block.png');\r\n\r\n\t\t\t\tplaySoundEffect('.defend-audio');\r\n\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tsetTimeout(() => attackAnimationEffect(activePlayerUI, direction), 400);\r\n\r\n\t\t\t\tsetTimeout(() => standartAttackAnimation(passivePlayerUI, 'angerAttack', 'images/attack-effects/mageEffect.png'), 400);\r\n\r\n\t\t\t\tsetTimeout(() => shakeAnimation(passivePlayerUI), 400);\r\n\r\n\t\t\t\tsetTimeout(() => playSoundEffect('.mage-attack-audio'), 400);\r\n\r\n\t\t\t\tsetTimeout(() => this.updateViewHP(), 400);\r\n\r\n\t\t\t\tsetTimeout(() => this.updateViewDef(), 400);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'perfectedStrike':\r\n\t\t\tcase 'tantrum':\r\n\t\t\tcase 'flechettes':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tmultipleAttackAnimation(passivePlayerUI, 'attack', 'images/attack-effects/warrior-attack.png', 3);\r\n\r\n\t\t\t\tsetTimeout(() => shakeAnimation(passivePlayerUI), 200);\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'expertise':\r\n\t\t\t\tblockAnimationEffect(activePlayerUI, 'expertice', 'images/attack-effects/serpent_ring.png');\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'bludgeon':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tplaySoundEffect('.warcry-audio');\r\n\r\n\t\t\t\tultimateSkillAnimation(passivePlayerUI, 'warriorUltimate', 'images/attack-effects/flash.png', '.flash-audio');\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'riddleWithHoles':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tultimateSkillAnimation(passivePlayerUI, 'rogueUltimate', 'images/attack-effects/daggers.svg', '.backstab-audio');\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'signatureMove':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tultimateSkillAnimation(passivePlayerUI, 'mageUltimate', 'images/attack-effects/mage-attack.png', '.mage-ultimate-audio');\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'judjment':\r\n\t\t\t\tattackAnimationEffect(activePlayerUI, direction);\r\n\r\n\t\t\t\tultimateSkillAnimation(passivePlayerUI, 'rogueUltimate', 'images/attack-effects/judjment.svg', '.judj-audio');\r\n\r\n\t\t\t\tthis.updateViewHP();\r\n\t\t\t\tthis.updateViewDef();\r\n\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n","export default class PlayersController {\r\n\tconstructor(playerOneModel, playerTwoModel, view) {\r\n\t\tthis.playerOneModel = playerOneModel;\r\n\t\tthis.playerTwoModel = playerTwoModel;\r\n\t\tthis.boardView = view;\r\n\r\n\t\tif (this.boardView.hasOwnProperty('doCardAction')) {\r\n\t\t\tthis.boardView.doCardAction.attach(() => this.playCard());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tthis.boardView.endTurn.attach(() => this.doEndTurn());\r\n\t\t}\r\n\t}\r\n\r\n\tplayCard(priority) {\r\n\t\tif(priority) {\r\n\t\t\tthis.playerOneModel.doAction();\r\n\t\t} else {\r\n\t\t\tthis.playerTwoModel.doAction();\r\n\t\t}\r\n\t}\r\n\r\n\tdoEndTurn() {\r\n\t\tthis.playerOneModel.endTurn();\r\n\t}\r\n}\r\n","import {switchPlayPause} from '../animation_and_sound_effects/animation.js';\r\n\r\nexport default class BoardController {\r\n\tconstructor(game, board, playerModel1, playerModel2, view) {\r\n\t\tthis.gameModel = game;\r\n\t\tthis.boardModel = board;\r\n\t\tthis.player1 = playerModel1;\r\n\t\tthis.player2 = playerModel2;\r\n\t\tthis.boardView = view;\r\n\r\n\t\tif (this.boardView.hasOwnProperty('onLoadCreate')) {\r\n\t\t\tthis.boardView.onLoadCreate.attach((card, place) => this.createCard(card, place));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('onAnimCards')) {\r\n\t\t\tthis.boardView.onAnimCards.attach((event) => this.cardAnimBoard(event));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('cardInHandChoosen')) {\r\n\t\t\tthis.boardView.cardInHandChoosen.attach((event, state) => this.cardAnimHand(event, state));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('grabCardStart')) {\r\n\t\t\tthis.boardView.grabCardStart.attach((event, state) => this.grabedCardAnim(event, state));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('grabCardEnd')) {\r\n\t\t\tthis.boardView.grabCardEnd.attach((event, state) => this.grabedCardAnim(event, state));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('preventDrag')) {\r\n\t\t\tthis.boardView.preventDrag.attach((event) => this.preventDrag(event));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('dropEvent')) {\r\n\t\t\tthis.boardView.dropEvent.attach(() => this.deleteActionCard());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tthis.boardView.endTurn.attach(() => this.createCardsInHand());\r\n\t\t\tthis.boardView.endTurn.attach(() => this.setPlayersTurnInfo());\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('showPlayerDeck')) {\r\n\t\t\tthis.boardView.showPlayerDeck.attach((event) => this.showPlayersDeck(event));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('showPlayerDeck')) {\r\n\t\t\tthis.boardView.showPlayerDeck.attach((event) => this.closePlayersDeck(event));\r\n\t\t}\r\n\r\n\t\tif (this.gameModel.hasOwnProperty('selectionContinue')) {\r\n\t\t\tthis.gameModel.selectionContinue.attach(() => this.createCard());\r\n\t\t}\r\n\r\n\t\tif (this.gameModel.hasOwnProperty('selectionEnd')) {\r\n\t\t\tthis.gameModel.selectionEnd.attach(() => this.createCardsInHand());\r\n\t\t\tthis.gameModel.selectionEnd.attach(() => this.setPlayersTurnInfo());\r\n\t\t}\r\n\r\n\t\tif (this.player1.hasOwnProperty('cardDraw')) {\r\n\t\t\tthis.player1.cardDraw.attach((card) => this.addCardInHand(card));\r\n\t\t}\r\n\r\n\t\tif (this.player2.hasOwnProperty('cardDraw')) {\r\n\t\t\tthis.player2.cardDraw.attach((card) => this.addCardInHand(card));\r\n\t\t}\r\n\r\n\t\tif (this.player1.hasOwnProperty('cardDiscard')) {\r\n\t\t\tthis.player1.cardDiscard.attach((card) => this.deleteRandomCard(card));\r\n\t\t}\r\n\r\n\t\tif (this.player2.hasOwnProperty('cardDiscard')) {\r\n\t\t\tthis.player2.cardDiscard.attach((card) => this.deleteRandomCard(card));\r\n\t\t}\r\n\r\n\t\tif (this.boardView.hasOwnProperty('soundOffOn')) {\r\n\t\t\tthis.boardView.soundOffOn.attach(() => this.turnOnOfSound());\r\n\t\t}\r\n\t}\r\n\r\n\tcreateCard() {\r\n\t\tthis.boardModel.createCardsForChoose(this.gameModel);\r\n\t}\r\n\r\n\tcardAnimBoard(event) {\r\n\t\tthis.boardModel.cardChooseAnim(event);\r\n\t}\r\n\r\n\tcardAnimHand(event, state) {\r\n\t\tswitch (state) {\r\n\t\t\tcase 'focus':\r\n\t\t\t\tthis.boardModel.cardChooseAnimInHandAdd(event);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\t\tthis.boardModel.cardChooseAnimInHandRemove(event);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tcreateCardsInHand() {\r\n\t\tthis.boardModel.pullRandomCardsInHand();\r\n\t}\r\n\r\n\tgrabedCardAnim(event, state) {\r\n\t\tswitch (state) {\r\n\t\t\tcase 'focus':\r\n\t\t\t\tthis.boardModel.dragCardStart(event);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'blur':\r\n\t\t\t\tthis.boardModel.dragCardEnd(event);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpreventDrag(event) {\r\n\t\tthis.boardModel.dragPreventAction(event);\r\n\t}\r\n\r\n\tdeleteActionCard() {\r\n\t\tthis.boardModel.deletePlayedCard('playedCard');\r\n\t}\r\n\r\n\tdeleteRandomCard(card) {\r\n\t\tthis.boardModel.deletePlayedCard('randomCard', card);\r\n\t}\r\n\r\n\taddCardInHand(card) {\r\n\t\tthis.boardModel.createCards(card, 'hand', true);\r\n\t}\r\n\r\n\tshowPlayersDeck(eventTarget) {\r\n\t\tthis.boardModel.showCardsForPlayers(eventTarget);\r\n\t}\r\n\r\n\tclosePlayersDeck(event) {\r\n\t\tif (event == this.boardModel.showDeckPlayer1 || event == this.boardModel.showDeckPlayer2) {\r\n\t\t\tthis.boardModel.openCloseOverlay('open');\r\n\t\t}\r\n\t\tif (event == this.boardModel.playersDeckClose) {\r\n\t\t\tthis.boardModel.openCloseOverlay('close');\r\n\t\t}\r\n\t}\r\n\r\n\tsetPlayersTurnInfo() {\r\n\t\tthis.boardModel.showWhichTurn();\r\n\t}\r\n\r\n\tturnOnOfSound() {\r\n\t\tswitchPlayPause();\r\n\t}\r\n}\r\n","import Game from './modules/gameModel';\r\nimport Board from './modules/boardModel';\r\nimport BoardView from './modules/boardView';\r\nimport GameController from './modules/gameController';\r\nimport Players from './modules/playerModel';\r\nimport PlayersView from './modules/playerView';\r\nimport PlayersController from './modules/playerController';\r\nimport BoardController from './modules/boardController';\r\n\r\nexport const gameObserver = new Game();\r\n\r\nexport const boardModel = new Board(gameObserver);\r\n\r\nconst boardView = new BoardView(boardModel, gameObserver, document.querySelector('.wrapper-battle'));\r\n\r\nconst gameController = new GameController(gameObserver, boardView);\r\n\r\nexport const player1 = new Players(gameObserver, boardModel);\r\n\r\nexport const player2 = new Players(gameObserver, boardModel);\r\n\r\nconst playersView = new PlayersView(player1, player2, gameObserver, document.querySelector('.wrapper-battle'));\r\n\r\nconst playersController = new PlayersController(player1, player2, boardView);\r\n\r\nconst boardController = new BoardController(gameObserver, boardModel, player1, player2, boardView);\r\n\r\ngameObserver.start();\r\n\r\nboardView.init();"],"sourceRoot":""}
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/cards.js":
/*!*********************!*\
  !*** ./js/cards.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"skillCollection\": () => (/* binding */ skillCollection)\n/* harmony export */ });\n/* harmony import */ var _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/cardsModel */ \"./js/modules/cardsModel.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game */ \"./js/game.js\");\n\r\n\r\n\r\n\r\n//START CREATING WARRIOR'S CARDS\r\nconst strike_w = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(0, 'attack', 1, 6, 'images/cards/warrior/Strike.png', 'strike_w');\r\n\r\nconst bash = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(1, 'attack', 1, 8, 'images/cards/warrior/Bash.png', 'bash');\r\n\r\nconst anger = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(2, 'attackAddEffect', 1, 6, 'images/cards/warrior/Anger.png', 'anger',\r\n\t() => {\r\n\t\tlet effect;\r\n\t\tif (_game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.activePlayer.healthPoints < 50) {\r\n\t\t\teffect = 13;\r\n\t\t} else {\r\n\t\t\teffect = 6;\r\n\t\t}\r\n\t\treturn effect;\r\n\t});\r\n\r\nconst bodySlam = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(3, 'attackAddEffect', 2, 0, 'images/cards/warrior/BodySlam.png', 'bodySlam', () => {\r\n\tlet effect;\r\n\tif (_game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.activePlayer.defendPoints > 0) {\r\n\t\teffect = _game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.activePlayer.defendPoints;\r\n\t} else {\r\n\t\teffect = 0;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst perfecedStrike = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(4, 'attackAddEffect', 1, 6, 'images/cards/warrior/PerfectedStrike.png', 'perfecedStrike', () => 6 + _game__WEBPACK_IMPORTED_MODULE_1__.boardModel.cardInHand.children.length);\r\n\r\nconst bludgeon = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(5, 'attackAddEffect', 3, 12, 'images/cards/warrior/Bludgeon.png', 'bludgeon', () => {\r\n\tlet effect;\r\n\tif (_game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.passivePlayer.healthPoints > 50) {\r\n\t\teffect = 17;\r\n\t} else {\r\n\t\teffect = 12;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst defend_w = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(6, 'defend', 1, 5, 'images/cards/warrior/Defend_R.png', 'defend_w');\r\n\r\nconst armaments = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(7, 'defendAddEffect', 1, 5, 'images/cards/warrior/Armaments.png', 'armaments', () => {\r\n\tlet effect;\r\n\tif (_game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.activePlayer.defendPoints === 0) {\r\n\t\teffect = 7;\r\n\t} else {\r\n\t\teffect = 5;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst ironWave = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(8, 'defendAndAttack', 1, 5, 'images/cards/warrior/IronWave.png', 'ironWave', () => 5);\r\n\r\nconst warcry = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(9, 'defendDrawDiscard', 0, 1, 'images/cards/warrior/Warcry.png', 'warcry');\r\n\r\nconst bloodletting = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(10, 'defendDrawDiscard', 3, 1, 'images/cards/warrior/Bloodletting.png', 'bloodletting');\r\n\r\nconst entrench = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(11, 'defendAddEffect', 2, 2, 'images/cards/warrior/Entrench.png', 'entrench', () => _game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.activePlayer.defendPoints * 2 - _game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.activePlayer.defendPoints);\r\n\r\n//START CREATING ROGUE'S CARDS\r\nconst strike_r = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(0, 'attack', 1, 6, 'images/cards/rogue/Strike_G.png', 'strike_r');\r\n\r\nconst daggerThrow = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(1, 'attackDrawDiscard', 1, 9, 'images/cards/rogue/R_dagger-throw.png', 'daggerThrow');\r\n\r\nconst flechettes = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(2, 'attackAddEffect', 1, 3, 'images/cards/rogue/Flechettes.png', 'flechettes', () => 3 * _game__WEBPACK_IMPORTED_MODULE_1__.boardModel.cardInHand.children.length);\r\n\r\nconst riddleWithHoles = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(3, 'attackAddEffect', 2, 7, 'images/cards/rogue/RiddleWithHoles.png', 'riddleWithHoles');\r\n\r\nconst slice = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(4, 'attack', 0, 4, 'images/cards/rogue/Slice.png', 'slice');\r\n\r\nconst quickSlash = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(5, 'attackDrawDiscard', 1, 7, 'images/cards/rogue/QuickSlash.png', 'quickSlash');\r\n\r\nconst survivor = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(6, 'defendDrawDiscard', 1, 8, 'images/cards/rogue/Survivor.png', 'survivor');\r\n\r\nconst deflect = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(7, 'defend', 0, 4, 'images/cards/rogue/Deflect.png', 'deflect');\r\n\r\nconst backFlip = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(8, 'defendDrawDiscard', 1, 2, 'images/cards/rogue/Backflip.png', 'backFlip', () => 5);\r\n\r\nconst prepared = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(9, 'defendDrawDiscard', 0, 1, 'images/cards/rogue/Prepared.png', 'prepared');\r\n\r\nconst expertise = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(10, 'defendDrawDiscard', 1, 5, 'images/cards/rogue/Expertise.png', 'expertise');\r\n\r\nconst dash = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(11, 'defendAndAttack', 2, 10, 'images/cards/rogue/Dash.png', 'dash', () => 8);\r\n\r\n//START CREATING MAGE'S CARDS\r\nconst strike_m = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(0, 'attack', 1, 6, 'images/cards/mage/Strike_P.png', 'strike_m');\r\n\r\nconst cutThroughFate = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(1, 'attackDrawDiscard', 1, 7, 'images/cards/mage/CutThroughFate.png', 'cutThroughFate', () => 2);\r\n\r\nconst reachHeaven = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(2, 'attack', 2, 10, 'images/cards/mage/ReachHeaven.png', 'reachHeaven');\r\n\r\nconst signatureMove = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(3, 'attackAddEffect', 2, 0, 'images/cards/mage/SignatureMove.png', 'signatureMove', () => _game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.passivePlayer.defendPoints);\r\n\r\nconst tantrum = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(4, 'attackAddEffect', 1, 3, 'images/cards/mage/Tantrum.png', 'tantrum', () => 3 + (Math.floor(Math.random() * (6 - 1)) + 1));\r\n\r\nconst judjment = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(5, 'attackAddEffect', 2, 0, 'images/cards/mage/Judgment.png', 'judjment', () => {\r\n\tlet effect;\r\n\tif (_game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.passivePlayer.healthPoints <= 15) {\r\n\t\teffect = 0;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst masterReality = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(6, 'defendAddEffect', 1, 5, 'images/cards/mage/MasterReality.png', 'masterReality', () => {\r\n\tlet effect;\r\n\tif (_game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.activePlayer.defendPoints == 0) {\r\n\t\teffect = 10;\r\n\t} else {\r\n\t\teffect = 5;\r\n\t}\r\n\treturn effect;\r\n});\r\n\r\nconst defend_m = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(7, 'defend', 1, 5, 'images/cards/mage/Defend_P.png', 'defend_m');\r\n\r\nconst meditate = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(8, 'defendAddEffect', 1, 3, 'images/cards/mage/Meditate.png', 'meditate');\r\n\r\nconst thirdEye = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(9, 'defendDrawDiscard', 1, 7, 'images/cards/mage/ThirdEye.png', 'thirdEye');\r\n\r\nconst nirvana = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(10, 'defendAddEffect', 1, 0, 'images/cards/mage/Nirvana.png', 'nirvana', () => _game__WEBPACK_IMPORTED_MODULE_1__.gameObserver.passivePlayer.defendPoints);\r\n\r\nconst alpha = new _modules_cardsModel__WEBPACK_IMPORTED_MODULE_0__.default(11, 'defendDrawDiscard', 1, 4, 'images/cards/mage/Alpha.png', 'alpha');\r\n\r\n\r\nconst skillCollection = {\r\n\twarrior: [strike_w, bash, anger, bodySlam, perfecedStrike, bludgeon, defend_w, armaments, ironWave, warcry, bloodletting, entrench],\r\n\trogue: [strike_r, daggerThrow, flechettes, riddleWithHoles, slice, quickSlash, survivor, deflect, backFlip, prepared, expertise, dash],\r\n\tmage: [strike_m, cutThroughFate, reachHeaven, signatureMove, tantrum, judjment, masterReality, defend_m, meditate, thirdEye, nirvana, alpha]\r\n};\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/cards.js?");

/***/ }),

/***/ "./js/game.js":
/*!********************!*\
  !*** ./js/game.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"gameObserver\": () => (/* binding */ gameObserver),\n/* harmony export */   \"boardModel\": () => (/* binding */ boardModel),\n/* harmony export */   \"player1\": () => (/* binding */ player1),\n/* harmony export */   \"player2\": () => (/* binding */ player2)\n/* harmony export */ });\n/* harmony import */ var _modules_gameModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/gameModel */ \"./js/modules/gameModel.js\");\n/* harmony import */ var _modules_boardModel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/boardModel */ \"./js/modules/boardModel.js\");\n/* harmony import */ var _modules_boardView__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/boardView */ \"./js/modules/boardView.js\");\n/* harmony import */ var _modules_gameController__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/gameController */ \"./js/modules/gameController.js\");\n/* harmony import */ var _modules_playerModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/playerModel */ \"./js/modules/playerModel.js\");\n/* harmony import */ var _modules_playerView__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/playerView */ \"./js/modules/playerView.js\");\n/* harmony import */ var _modules_playerController__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/playerController */ \"./js/modules/playerController.js\");\n/* harmony import */ var _modules_boardController__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/boardController */ \"./js/modules/boardController.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// #TODO: babel webpack\r\nconst gameObserver = new _modules_gameModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\nconst boardModel = new _modules_boardModel__WEBPACK_IMPORTED_MODULE_1__.default(gameObserver);\r\nconst boardView = new _modules_boardView__WEBPACK_IMPORTED_MODULE_2__.default(boardModel, gameObserver, document.querySelector('.wrapper-battle'));\r\nconst gameController = new _modules_gameController__WEBPACK_IMPORTED_MODULE_3__.default(gameObserver, boardView);\r\n\r\nconst player1 = new _modules_playerModel__WEBPACK_IMPORTED_MODULE_4__.default(gameObserver, boardModel);\r\nconst player2 = new _modules_playerModel__WEBPACK_IMPORTED_MODULE_4__.default(gameObserver, boardModel);\r\nconst playersView = new _modules_playerView__WEBPACK_IMPORTED_MODULE_5__.default(player1, player2, document.querySelector('.wrapper-battle'));\r\nconst playerController = new _modules_playerController__WEBPACK_IMPORTED_MODULE_6__.default(player1, boardView);\r\n\r\nconst boardController = new _modules_boardController__WEBPACK_IMPORTED_MODULE_7__.default(gameObserver, boardModel, player1, player2, boardView);\r\n\r\n// gameObserver.init(boardView);\r\n\r\nplayer1.init();\r\nplayer2.init();\r\n\r\ngameObserver.start();\r\nboardView.init();\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/game.js?");

/***/ }),

/***/ "./js/modules/boardController.js":
/*!***************************************!*\
  !*** ./js/modules/boardController.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoardController)\n/* harmony export */ });\nclass BoardController {\r\n\tconstructor(game, board, playerModel1, playerModel2, view) {\r\n\t\tconst gameModel = game;\r\n\t\tconst boardModel = board;\r\n\t\tconst player1 = playerModel1;\r\n\t\tconst player2 = playerModel2;\r\n\t\tconst boardView = view;\r\n\r\n\t\tif (boardView.hasOwnProperty('onLoadCreate')) {\r\n\t\t\tboardView.onLoadCreate.attach((card, place) => this.createCard(card, place));\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('onAnimCards')) {\r\n\t\t\tboardView.onAnimCards.attach((event) => this.cardAnimBoard(event));\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('cardInHandChoosen')) {\r\n\t\t\tboardView.cardInHandChoosen.attach((event, state) => this.cardAnimHand(event, state));\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('grabCardStart')) {\r\n\t\t\tboardView.grabCardStart.attach((event, state) => this.grabbedCardAnim(event, state));\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('grabCardEnd')) {\r\n\t\t\tboardView.grabCardEnd.attach((event, state) => this.grabbedCardAnim(event, state));\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('preventDrag')) {\r\n\t\t\tboardView.preventDrag.attach((event) => this.preventDrag(event));\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('dropEvent')) {\r\n\t\t\tboardView.dropEvent.attach(() => this.deleteActionCard());\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tboardView.endTurn.attach(() => this.createCardsInHand());\r\n\t\t\tboardView.endTurn.attach(() => this.setPlayersTurnInfo());\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('showPlayerDeck')) {\r\n\t\t\tboardView.showPlayerDeck.attach((event) => this.showPlayersDeck(event));\r\n\t\t}\r\n\t\tif (boardView.hasOwnProperty('showPlayerDeck')) {\r\n\t\t\tboardView.showPlayerDeck.attach((event) => this.closePlayersDeck(event));\r\n\t\t}\r\n\r\n\t\tif (gameModel.hasOwnProperty('selectionContinue')) {\r\n\t\t\tgameModel.selectionContinue.attach(() => this.createCard());\r\n\t\t}\r\n\r\n\t\tif (gameModel.hasOwnProperty('selectionEnd')) {\r\n\t\t\tgameModel.selectionEnd.attach(() => this.createCardsInHand());\r\n\t\t\tgameModel.selectionEnd.attach(() => this.setPlayersTurnInfo());\r\n\t\t}\r\n\r\n\t\tif (player1.hasOwnProperty('cardDraw')) {\r\n\t\t\tplayer1.cardDraw.attach((card) => this.addCardInHand(card));\r\n\t\t}\r\n\r\n\t\tif (player2.hasOwnProperty('cardDraw')) {\r\n\t\t\tplayer2.cardDraw.attach((card) => this.addCardInHand(card));\r\n\t\t}\r\n\t\tif (player1.hasOwnProperty('randomCardDiscard')) {\r\n\t\t\tplayer1.cardDiscard.attach((card) => this.deleteRandomCard(card));\r\n\t\t}\r\n\r\n\t\tif (player2.hasOwnProperty('randomCardDiscard')) {\r\n\t\t\tplayer2.cardDiscard.attach((card) => this.deleteRandomCard(card));\r\n\t\t}\r\n\r\n\t\tthis.createCard = function() {\r\n\t\t\tboardModel.createCardsForChoose(gameModel);\r\n\t\t}\r\n\r\n\t\tthis.cardAnimBoard = function(event) {\r\n\t\t\tboardModel.cardChooseAnim(event);\r\n\t\t}\r\n\r\n\t\tthis.cardAnimHand = function(event, state) {\r\n\t\t\tswitch (state) {\r\n\t\t\t\tcase 'focus':\r\n\t\t\t\t\tboardModel.cardChooseAnimInHandAdd(event);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'blur':\r\n\t\t\t\t\tboardModel.cardChooseAnimInHandRemove(event);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.createCardsInHand = function() {\r\n\t\t\tboardModel.pullRandomCardsInHand();\r\n\t\t}\r\n\r\n\t\tthis.grabbedCardAnim = function(event, state) {\r\n\t\t\tswitch (state) {\r\n\t\t\t\tcase 'focus':\r\n\t\t\t\t\tboardModel.dragCardStart(event);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'blur':\r\n\t\t\t\t\tboardModel.dragCardEnd(event);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.preventDrag = function(event) {\r\n\t\t\tboardModel.dragPreventAction(event);\r\n\t\t}\r\n\r\n\t\tthis.deleteActionCard = function() {\r\n\t\t\tboardModel.deletePlayedCard('playedCard');\r\n\t\t}\r\n\r\n\t\tthis.deleteRandomCard = function(card) {\r\n\t\t\tboardModel.deletePlayedCard('randomCard', card);\r\n\t\t}\r\n\r\n\t\tthis.addCardInHand = function(card) {\r\n\t\t\tboardModel.createCardsInHand(card);\r\n\t\t}\r\n\r\n\t\tthis.showPlayersDeck = function(eventTarget) {\r\n\t\t\tboardModel.showCardsForPlayers(eventTarget);\r\n\t\t}\r\n\r\n\t\tthis.closePlayersDeck = function(event) {\r\n\t\t\tif (event == boardModel.showDeckPlayer1 || event == boardModel.showDeckPlayer2) {\r\n\t\t\t\tboardModel.openCloseOverlay('open');\r\n\t\t\t}\r\n\t\t\tif (event == boardModel.playersDeckClose) {\r\n\t\t\t\tboardModel.openCloseOverlay('close');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setPlayersTurnInfo = function() {\r\n\t\t\tboardModel.showWhichTurn();\r\n\t\t}\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/boardController.js?");

/***/ }),

/***/ "./js/modules/boardModel.js":
/*!**********************************!*\
  !*** ./js/modules/boardModel.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Board)\n/* harmony export */ });\n/* harmony import */ var _eventsModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventsModel */ \"./js/modules/eventsModel.js\");\n/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cards */ \"./js/cards.js\");\n\r\n\r\n\r\nclass Board {\r\n\tconstructor(model) {\r\n\t\tconst gameModel = model;\r\n\r\n\t\tthis.decWrapper = document.querySelector('.cards-choose-field');        // field for cards at the start when players are choosing\r\n\t\tthis.btnAccept = document.querySelector('.accept');               // player accept cards he chose\r\n\t\tthis.cardsChooseCounter = document.querySelector('.count');             // counter for amount of cards have been chosen(needs for alert)\r\n\t\tthis.cardInHand = document.querySelector('.card-in-hand-field');              // field for cards in hand each player\r\n\t\tthis.battleField = document.querySelector('.battle-field');            // play field\r\n\t\tthis.endTurn = document.querySelector('.end-of-turn-btn');             // end turn button\r\n\t\tthis.playersTurnInfo = document.querySelector('.players-action');\r\n\t\tthis.cardsPlayField = document.querySelector('.play-field');           // area for cards to drop and play their actions\r\n\r\n\t\tthis.playersOverlay = document.querySelector('.players-overlay');\r\n\t\tthis.playersDeck = document.querySelector('.players-overlay__cards');\r\n\t\tthis.playersDeckClose = document.querySelector('.overlay__close');\r\n\r\n\t\tthis.showDeckPlayer1 = document.querySelector('.player-1__pile-of-car');           // возможность в игре посмотреть какие карты ты выбрал\r\n\t\tthis.showDeckPlayer2 = document.querySelector('.player-2__pile-of-car');           // возможность в игре посмотреть какие карты ты выбрал\r\n\r\n\t\t// создаем событие на создание карт\r\n\t\tthis.onCreateCards = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\t\tthis.onCounterChange = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\t\tthis.removeCards = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\t\tthis.removeActionCard = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\t\tthis.openCloseOverlay = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t// создаем деку в начале игры для игрока согласно классу\r\n\t\tthis.createCardsForChoose = function(playerClassInfo) {\r\n\t\t\tthis.removeExtraCards('board');\r\n\r\n\t\t\tif (gameModel.playerOneTurn) {\r\n\t\t\t\tfor (let i = 0; i < _cards__WEBPACK_IMPORTED_MODULE_1__.skillCollection[playerClassInfo.playerOneClass].length; i++) {\r\n\t\t\t\t\tsetTimeout(() => this.createCards(_cards__WEBPACK_IMPORTED_MODULE_1__.skillCollection[playerClassInfo.playerOneClass][i]), 500) ;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < _cards__WEBPACK_IMPORTED_MODULE_1__.skillCollection[playerClassInfo.playerTwoClass].length; i++) {\r\n\t\t\t\t\tsetTimeout( () => this.createCards(_cards__WEBPACK_IMPORTED_MODULE_1__.skillCollection[playerClassInfo.playerTwoClass][i]), 500) ;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.showCardsForPlayers = function(eventTarget) {\r\n\t\t\tthis.removeExtraCards('overlay');\r\n\r\n\t\t\tlet target = eventTarget;\r\n\r\n\t\t\tif (target.classList.contains('player-1__pile-of-car')) {\r\n\r\n\t\t\t\tfor (let i = 0; i < gameModel.playerOnePullOfCards.length; i++) {\r\n\t\t\t\t\tthis.createCardsInOverlay(gameModel.playerOnePullOfCards[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (target.classList.contains('player-2__pile-of-car')) {\r\n\r\n\t\t\t\tfor (let i = 0; i < gameModel.playerTwoPullOfCards.length; i++) {\r\n\t\t\t\t\tthis.createCardsInOverlay(gameModel.playerTwoPullOfCards[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.openCloseOverlay = function(state) {\r\n\t\t\tswitch (state) {\r\n\t\t\t\tcase 'open':\r\n\t\t\t\t\tthis.playersOverlay.classList.remove('hidden');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'close':\r\n\t\t\t\t\tthis.playersOverlay.classList.add('hidden');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//создает карты доска выбора\r\n\t\tthis.createCards = function(card) {\r\n\t\t\tlet elDiv = document.createElement('div');\r\n\r\n\t\t\telDiv.setAttribute('class', 'cards');\r\n\t\t\telDiv.setAttribute('data-info', `${card.id}`);\r\n\t\t\telDiv.style.backgroundImage = `url(${card.icon})`;\r\n\r\n\t\t\tthis.onCreateCards.notify(elDiv, 'board');\r\n\t\t}\r\n\r\n\t\t//создает карты в руке\r\n\t\tthis.createCardsInHand = function(card) {\r\n\t\t\tlet elDiv = document.createElement('div');\r\n\r\n\t\t\telDiv.setAttribute('class', 'cards-to-play');\r\n\t\t\telDiv.setAttribute('data-info', `${card.id}`);\r\n\t\t\telDiv.setAttribute('draggable', 'true');\r\n\t\t\telDiv.style.backgroundImage = `url(${card.icon})`;\r\n\r\n\t\t\tthis.onCreateCards.notify(elDiv, 'hand');\r\n\t\t}\r\n\r\n\t\tthis.createCardsInOverlay = function(card) {\r\n\t\t\tlet elDiv = document.createElement('div');\r\n\r\n\t\t\telDiv.setAttribute('class', 'cards');\r\n\t\t\telDiv.setAttribute('data-info', `${card.id}`);\r\n\t\t\telDiv.style.backgroundImage = `url(${card.icon})`;\r\n\r\n\t\t\tthis.onCreateCards.notify(elDiv, 'overlay');\r\n\t\t}\r\n\r\n\t\t// кидаем карты в руку\r\n\t\tthis.pullRandomCardsInHand = function() {\r\n\t\t\tthis.removeExtraCards('hand');\r\n\r\n\t\t\tlet tempIndex = [];\r\n\r\n\t\t\t//делаем проверку чтобы карты в руке не повторялись\r\n\t\t\tfor (let i = 0; i < 4; i++) {                  // количество карт в руку\r\n\t\t\t\tlet n = Math.floor(Math.random() * 8);   // количество набранных карт\r\n\t\t\t\tif (tempIndex.indexOf(n) == -1) {\r\n\t\t\t\t\ttempIndex.push(n);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// создаем карты в руке согласно игрока чей ход\r\n\t\t\tif (gameModel.playerOneTurn) {\r\n\t\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\t\tthis.createCardsInHand(gameModel.playerOnePullOfCards[tempIndex[i]]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\t\tthis.createCardsInHand(gameModel.playerTwoPullOfCards[tempIndex[i]]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// убираем лишние карты с доски или из руки\r\n\t\tthis.removeExtraCards = function(place) {\r\n\t\t\tlet orderToRemove = [];\r\n\r\n\t\t\tswitch (place) {\r\n\t\t\t\tcase 'board':\r\n\t\t\t\t\torderToRemove = [...this.decWrapper.children];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hand':\r\n\t\t\t\t\torderToRemove = [...this.cardInHand.children];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'overlay':\r\n\t\t\t\t\torderToRemove = [...this.playersDeck.children];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tthis.removeCards.notify(orderToRemove, place);\r\n\t\t}\r\n\r\n\t\t//удаляем сыгранные карты из руки с проверкой\r\n\t\tthis.deletePlayedCard = function(condition, card) {\r\n\t\t\tif (gameModel.tempCard.cost > gameModel.activePlayer.staminaPoints) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (condition) {\r\n\t\t\t\tcase 'playedCard':\r\n\t\t\t\t\tthis.removeActionCard.notify(gameModel.dragCard);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'randomCard':\r\n\t\t\t\t\tthis.removeActionCard.notify(card);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// подсветка выбранных карт\r\n\t\tthis.cardChooseAnim = function(eventTarget) {\r\n\t\t\tlet target = eventTarget;\r\n\r\n\t\t\tif (target !== this.decWrapper) {\r\n\t\t\t\ttarget.classList.toggle('card-to-select');\r\n\t\t\t}\r\n\r\n\t\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\t\tlet counterInfo = {};\r\n\t\t\tcounterInfo.number = counter;\r\n\r\n\t\t\tif (counter > 8) {\r\n\t\t\t\tcounterInfo.color = 'red';\r\n\t\t\t} else if (counter == 8) {\r\n\t\t\t\tcounterInfo.color = 'green';\r\n\t\t\t} else if (counter > 0 && counter < 8) {\r\n\t\t\t\tcounterInfo.color = 'cyan';\r\n\t\t\t} else {\r\n\t\t\t\tcounterInfo.color = 'white';\r\n\t\t\t}\r\n\r\n\t\t\tthis.onCounterChange.notify(counterInfo);\r\n\t\t}\r\n\r\n\t\t//анимация выбора только одной карты для игры в руке\r\n\t\tthis.cardChooseAnimInHandAdd = function(eventTarget) {\r\n\t\t\tlet target = eventTarget;\r\n\r\n\t\t\tif (target !== this.cardInHand) {\r\n\t\t\t\ttarget.classList.add('card-to-action');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//анимация выбора только одной карты для игры в руке\r\n\t\tthis.cardChooseAnimInHandRemove = function(eventTarget) {\r\n\t\t\tlet target = eventTarget;\r\n\r\n\t\t\tif (target !== this.cardInHand) {\r\n\t\t\t\ttarget.classList.remove('card-to-action');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//добавляем стили для перетаскивания\r\n\t\tthis.dragCardStart = function(eventTarget) {\r\n\t\t\tlet target = eventTarget;\r\n\r\n\t\t\tif (target !== this.cardInHand) {\r\n\t\t\t\tsetTimeout(() => target.classList.add('invinsible'), 0);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//у ираем стили для перетаскивания\r\n\t\tthis.dragCardEnd = function(eventTarget) {\r\n\t\t\tlet target = eventTarget;\r\n\r\n\t\t\tif (target !== this.cardInHand) {\r\n\t\t\t\ttarget.classList.remove('invinsible');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.dragPreventAction = function(event) {\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\r\n\t\tthis.showWhichTurn = function() {\r\n\t\t\tif (gameModel.playerOneTurn) {\r\n\t\t\t\tthis.playersTurnInfo.textContent = `${gameModel.playersInfo.playerOneName}'s Turn`;\r\n\t\t\t\tthis.playersTurnInfo.classList.add('players-turn-info');\r\n\r\n\t\t\t\tsetTimeout(() => this.playersTurnInfo.classList.remove('players-turn-info'), 3100);\r\n\t\t\t} else {\r\n\t\t\t\tthis.playersTurnInfo.textContent = `${gameModel.playersInfo.playerTwoName}'s Turn`;\r\n\r\n\t\t\t\tthis.playersTurnInfo.classList.add('players-turn-info');\r\n\t\t\t\tsetTimeout(() => this.playersTurnInfo.classList.remove('players-turn-info'), 3100);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/boardModel.js?");

/***/ }),

/***/ "./js/modules/boardView.js":
/*!*********************************!*\
  !*** ./js/modules/boardView.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoardView)\n/* harmony export */ });\n/* harmony import */ var _eventsModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventsModel */ \"./js/modules/eventsModel.js\");\n\r\n\r\nclass BoardView {\r\n\tconstructor(board, game, selector) {\r\n\t\tconst boardModel = board;\r\n\t\tconst gameModel = game;\r\n\t\tconst boardSelector = selector;\r\n\r\n\t\tthis.onLoadCreate = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default;\r\n\r\n\t\t// событие для gameModel закинуть в масиив выбранные карты\r\n\t\tthis.onDefineCards = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default;\r\n\r\n\t\t// событие на анимацию(подсветку выбора карт)\r\n\t\tthis.onAnimCards = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default;\r\n\r\n\t\t// событие на проверку набрали ли игроки карты\r\n\t\tthis.submitCardCheckChoose = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default;\r\n\r\n\t\t// навели убрали мышку на карту в руке\r\n\t\tthis.cardInHandChoosen = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t// навели убрали мышку на карту в руке\r\n\t\tthis.grabCardStart = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\t\tthis.grabCardEnd = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\tthis.preventDrag = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t//удаляем сыгранную карту\r\n\t\tthis.dropEvent = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t// выполняем действие карты\r\n\t\tthis.doCardAction = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\tthis.endTurn = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\tthis.showPlayerDeck = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\t\tthis.deckPlayer2 = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t// подписываемся на событие в модели\r\n\t\t// boardModel создала карты надо их отобразить\r\n\t\tboardModel.onCreateCards.attach((card, place) => this.drawCards(card, place));\r\n\r\n\t\t// модель меняет количество набранных карт отображаем\r\n\t\tboardModel.onCounterChange.attach((info) => this.counterUpdate(info));\r\n\r\n\t\t// событие gameModel проверяет набранны ли у игроков карты\r\n\t\tgameModel.selectionEnd.attach(() => this.selectionEndUpdate());\r\n\r\n\t\t// событие на удаление лишних карт\r\n\t\tboardModel.removeCards.attach((cards, place) => this.extraCardsToRemove(cards, place));\r\n\r\n\t\t// событие на отображение инфо кто выбирает карты\r\n\t\tgameModel.choosePlayerInfo.attach((text) => this.playerChooseInfoUpdate(text));\r\n\r\n\t\t// событие на отображение никнеймов игроков\r\n\t\tgameModel.updatePlayersNames.attach((name1, name2) => this.playerNameUpdate(name1, name2));\r\n\r\n\t\t// событие на отображение моделек персонажей\r\n\t\tgameModel.updatePlayersModels.attach((modelPlayer1, modelPlayer2) => this.playerModelsUpdate(modelPlayer1, modelPlayer2));\r\n\r\n\t\t// удаление сыгранной карты\r\n\t\tboardModel.removeActionCard.attach((card) => this.deleteActionCard(card));\r\n\r\n\t\t// событие клик кнопки подтверждения выбора карт разсылаем уведомление что событие сработало\r\n\t\tboardModel.btnAccept.addEventListener('click', () => this.onDefineCards.notify());\r\n\t\tboardModel.btnAccept.addEventListener('click', () => this.submitCardCheckChoose.notify());\r\n\r\n\t\t// событие клик подстветка выбора карт\r\n\t\tboardModel.decWrapper.addEventListener('click', (event) => this.onAnimCards.notify(event.target));\r\n\r\n\t\t// показываем карты какие наюрал игрок на этапе выбора\r\n\t\tboardModel.battleField.addEventListener('click', (event) => this.showPlayerDeck.notify(event.target));\r\n\t\tboardModel.playersDeckClose.addEventListener('click', (event) => this.showPlayerDeck.notify(event.target));\r\n\r\n\t\t// анимация карт в руке при наведении\r\n\t\tboardModel.cardInHand.addEventListener('mouseover', (event) => this.cardInHandChoosen.notify(event.target, 'focus'));\r\n\t\tboardModel.cardInHand.addEventListener('mouseout', (event) => this.cardInHandChoosen.notify(event.target, 'blur'));\r\n\r\n\t\t// анимация карт при перетаскивании плюс узнаем какую карту перетавскиваем\r\n\t\tboardModel.cardInHand.addEventListener('dragstart', (event) => this.grabCardStart.notify(event.target, 'focus'));\r\n\t\tboardModel.cardInHand.addEventListener('dragend', (event) => this.grabCardEnd.notify(event.target, 'blur'));\r\n\r\n\t\t// prevent default behavior\r\n\t\tboardModel.cardsPlayField.addEventListener('dragenter', (event) => this.preventDrag.notify(event));\r\n\t\tboardModel.cardsPlayField.addEventListener('dragover', (event) => this.preventDrag.notify(event));\r\n\r\n\t\t// играем карты\r\n\t\tboardModel.cardsPlayField.addEventListener('drop', () => this.dropEvent.notify());\r\n\t\tboardModel.cardsPlayField.addEventListener('drop', () => this.doCardAction.notify());\r\n\r\n\t\tboardModel.endTurn.addEventListener('click', () => this.endTurn.notify());\r\n\r\n\t\t// need for start render cards when page is loaded\r\n\t\tthis.init = function() {\r\n\t\t\tthis.onLoadCreate.notify();\r\n\t\t};\r\n\r\n\t\tthis.drawCards = function(card, place) {\r\n\t\t\tswitch (place) {\r\n\t\t\t\tcase 'board':\r\n\t\t\t\t\tboardModel.decWrapper.appendChild(card);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'hand':\r\n\t\t\t\t\tboardModel.cardInHand.appendChild(card);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'overlay':\r\n\t\t\t\t\tboardModel.playersDeck.appendChild(card);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tboardModel.cardsChooseCounter.textContent = 0;\r\n\t\t\tboardModel.cardsChooseCounter.style = 'color: white';\r\n\t\t};\r\n\r\n\t\tthis.extraCardsToRemove = function(cards, place) {\r\n\r\n\t\t\tif (place == 'board' && cards.length > 0) {\r\n\t\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\t\tboardModel.decWrapper.removeChild(cards[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (place == 'hand' && cards.length > 0) {\r\n\t\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\t\tboardModel.cardInHand.removeChild(cards[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (place == 'overlay' && cards.length > 0) {\r\n\t\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\t\tboardModel.playersDeck.removeChild(cards[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.deleteActionCard = function(card) {\r\n\t\t\tboardModel.cardInHand.removeChild(card);\r\n\t\t}\r\n\r\n\t\tthis.counterUpdate = function(info) {\r\n\t\t\tboardModel.cardsChooseCounter.textContent = info.number;\r\n\t\t\tboardModel.cardsChooseCounter.style = `color: ${info.color}`;\r\n\t\t};\r\n\r\n\t\tthis.selectionEndUpdate = function() {\r\n\t\t\tboardModel.decWrapper.style.display = 'none';\r\n\t\t\tboardModel.battleField.classList.remove('hidden');\r\n\t\t\tboardSelector.querySelector('.card-counter').classList.add('hidden');\r\n\t\t\tboardSelector.querySelector('.card-counter').style.display = 'none';\r\n\t\t}\r\n\r\n\t\tthis.playerChooseInfoUpdate = function(text) {\r\n\t\t\tboardSelector.querySelector('.player-name-choosing').textContent = text;\r\n\t\t}\r\n\r\n\t\tthis.playerNameUpdate = function(name1, name2) {\r\n\t\t\tboardSelector.querySelector('.player-1__name').textContent = name1;\r\n\t\t\tboardSelector.querySelector('.player-2__name').textContent = name2;\r\n\t\t}\r\n\r\n\t\tthis.playerModelsUpdate = function(modelPlayer1, modelPlayer2) {\r\n\t\t\tconst player1Model = boardSelector.querySelector('.player-1__model');\r\n\t\t\tconst player2Model = boardSelector.querySelector('.player-2__model');\r\n\r\n\t\t\tplayer1Model.type = 'image/svg+xml';\r\n\t\t\tplayer2Model.type = 'image/svg+xml';\r\n\r\n\t\t\tswitch (modelPlayer1) {\r\n\t\t\t\tcase 'warrior':\r\n\t\t\t\t\tplayer1Model.data = 'images/models/viking.svg';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rogue':\r\n\t\t\t\t\tplayer1Model.data = 'images/models/rogue.svg';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'mage':\r\n\t\t\t\t\tplayer1Model.data = 'images/models/mage.svg';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('models not found');\r\n\t\t\t}\r\n\r\n\t\t\tswitch (modelPlayer2) {\r\n\t\t\t\tcase 'warrior':\r\n\t\t\t\t\tplayer2Model.data = 'images/models/viking.svg';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'rogue':\r\n\t\t\t\t\tplayer2Model.data = 'images/models/rogue.svg';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'mage':\r\n\t\t\t\t\tplayer2Model.data = 'images/models/mage.svg';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('models not found');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/boardView.js?");

/***/ }),

/***/ "./js/modules/cardsModel.js":
/*!**********************************!*\
  !*** ./js/modules/cardsModel.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Cards)\n/* harmony export */ });\nclass Cards {\r\n\tconstructor(id, type, cost, effect, icon, name, sideEffect) {\r\n\t\tthis.id = id;\r\n\t\tthis.cost = cost;\r\n\t\tthis.type = type;\r\n\t\tthis.effect = effect;\r\n\t\tthis.icon = icon;\r\n\t\tthis.name = name;\r\n\t\tthis.sideEffect = sideEffect;\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/cardsModel.js?");

/***/ }),

/***/ "./js/modules/eventsModel.js":
/*!***********************************!*\
  !*** ./js/modules/eventsModel.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Events)\n/* harmony export */ });\nclass Events {\r\n\tconstructor() {\r\n\t\tthis.listeners = [];\r\n\t}\r\n\r\n\tattach(listener) {\r\n\t\tthis.listeners.push(listener);\r\n\t}\r\n\r\n\tnotify(arg1, arg2) {\r\n\t\tthis.listeners.forEach((listener, index) => {\r\n\t\t\tthis.listeners[index](arg1, arg2);\r\n\t\t});\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/eventsModel.js?");

/***/ }),

/***/ "./js/modules/gameController.js":
/*!**************************************!*\
  !*** ./js/modules/gameController.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GameController)\n/* harmony export */ });\nclass GameController {\r\n\tconstructor(model, view) {\r\n\t\tconst gameModel = model;\r\n\t\tconst boardView = view;\r\n\r\n\t\tif (boardView.hasOwnProperty('onDefineCards')) {\r\n\t\t\tboardView.onDefineCards.attach(() => this.defineCards());\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('submitCardCheckChoose')) {\r\n\t\t\tboardView.submitCardCheckChoose.attach(() => this.doCardCheckChoose());\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('grabCardStart')) {\r\n\t\t\tboardView.grabCardStart.attach((eventTarget) => this.actionCard(eventTarget));\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tboardView.endTurn.attach(() => this.doEndTurn());\r\n\t\t}\r\n\r\n\t\t// событие на кнопку подтверждения выбора карт, запоминаем что выбрал в масси\r\n\t\tthis.defineCards = function() {\r\n\t\t\tgameModel.definePlayersCardSet();\r\n\t\t}\r\n\r\n\t\t// событие на кнопку подтверждения выбора карт, проверяем оба игрока сделали выбор\r\n\t\tthis.doCardCheckChoose = function() {\r\n\t\t\tgameModel.checkCardsSelectionEnd();\r\n\t\t}\r\n\r\n\t\tthis.actionCard = function(eventTarget) {\r\n\t\t\tgameModel.initActionCard(eventTarget);\r\n\t\t}\r\n\r\n\t\tthis.doEndTurn = function() {\r\n\t\t\tgameModel.turnEndsNextPlayerTurn();\r\n\t\t}\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/gameController.js?");

/***/ }),

/***/ "./js/modules/gameModel.js":
/*!*********************************!*\
  !*** ./js/modules/gameModel.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Game)\n/* harmony export */ });\n/* harmony import */ var _eventsModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventsModel */ \"./js/modules/eventsModel.js\");\n/* harmony import */ var _cards__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../cards */ \"./js/cards.js\");\n/* harmony import */ var _game__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../game */ \"./js/game.js\");\n\r\n\r\n\r\n\r\nclass Game {\r\n\tconstructor() {\r\n\t\tthis.activePlayer = null;               //активный игрок на данный момент кто будет наносить урон\r\n\t\tthis.passivePlayer = null;               //пассивный игрок на данный момент кто будет получать урон\r\n\r\n\t\tthis.playerOneTurn = true;\r\n\t\tthis.playerTwoTurn = false;\r\n\r\n\t\tthis.playerOneClass = null;    // сохраняет класс игрока будем реализовывать выбор скилов под класс\r\n\t\tthis.playerTwoClass = null;\r\n\r\n\t\tthis.playerOnePullOfCards = [];\r\n\t\tthis.playerTwoPullOfCards = [];\r\n\r\n\t\tthis.playersInfo = {};  //info from local storage about choose menu\r\n\r\n\t\tthis.dragCard = null;\r\n\t\tthis.tempCard = null; // карта которая играется\r\n\r\n\t\t// событие выбор карт завершен\r\n\t\tthis.selectionEnd = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t// событие выбор карт продолжается\r\n\t\tthis.selectionContinue = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t// событие изменить кто выбирает карты\r\n\t\tthis.choosePlayerInfo = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t// событие установить никнеймы игрокам\r\n\t\tthis.updatePlayersNames = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\t// событие установить модельки персонажей игрокам\r\n\t\tthis.updatePlayersModels = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\tthis.start = function () {\r\n\t\t\tthis.init();\r\n\t\t};\r\n\r\n\t\tthis.init = function () {\r\n\t\t\tthis.setPlayersChoiceInfo('playersInfo');\r\n\t\t\tthis.setPlayersClasses();\r\n\t\t\tthis.setPlayersNames();\r\n\t\t\tthis.setPlayersModels();\r\n\t\t\tthis.setTextChooseInfo();\r\n\t\t\tthis.setActivePassivePlayer();\r\n\t\t};\r\n\r\n\t\t// линкуем player1 & player2 в gamemodel\r\n\t\tthis.setActivePassivePlayer = function () {\r\n\t\t\tthis.activePlayer = _game__WEBPACK_IMPORTED_MODULE_2__.player1;\r\n\t\t\tthis.passivePlayer = _game__WEBPACK_IMPORTED_MODULE_2__.player2;\r\n\t\t};\r\n\r\n\t\t// забираем инфу о выборе игроками персонажей и их никнеймов и парсим json\r\n\t\tthis.setPlayersChoiceInfo = function (object) {\r\n\t\t\tlet temp = localStorage.getItem(object);\r\n\t\t\tlet info = JSON.parse(temp);\r\n\r\n\t\t\tthis.playersInfo = info;\r\n\t\t};\r\n\r\n\t\t// устанавливаем класы игроками из объекта\r\n\t\tthis.setPlayersClasses = function () {\r\n\t\t\tthis.playerOneClass = this.playersInfo.playerOneClass;\r\n\t\t\tthis.playerTwoClass = this.playersInfo.playerTwoClass;\r\n\t\t};\r\n\r\n\t\t// устанавливаем никнеймы игрокам из объекта\r\n\t\tthis.setPlayersNames = function () {\r\n\t\t\tthis.updatePlayersNames.notify(this.playersInfo.playerOneName, this.playersInfo.playerTwoName);\r\n\t\t};\r\n\r\n\t\t// устанавливаем модельки игроков согласно выбору\r\n\t\tthis.setPlayersModels = function () {\r\n\t\t\tthis.updatePlayersModels.notify(this.playersInfo.playerOneClass, this.playersInfo.playerTwoClass);\r\n\t\t};\r\n\r\n\t\t// показываем какой игрок выбирает карты\r\n\t\tthis.setTextChooseInfo = function () {\r\n\t\t\tif (this.playerOneTurn) {\r\n\t\t\t\tthis.choosePlayerInfo.notify(`${this.playersInfo.playerOneName} is choosing`);\r\n\t\t\t} else {\r\n\t\t\t\tthis.choosePlayerInfo.notify(`${this.playersInfo.playerTwoName} is choosing`);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// устанавливаем приоритет хода игрока\r\n\t\tthis.setTurnPriority = function () {\r\n\t\t\tif (this.playerOneTurn) {\r\n\t\t\t\tthis.playerOneTurn = false;\r\n\t\t\t\tthis.playerTwoTurn = true;\r\n\t\t\t} else {\r\n\t\t\t\tthis.playerOneTurn = true;\r\n\t\t\t\tthis.playerTwoTurn = false;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// пулим карты выбранные ироком на старте игры в gameControl, этими картами игроки будут играть дальше\r\n\t\tthis.definePlayersCardSet = function () {\r\n\t\t\tlet cards = document.querySelectorAll('.cards');\r\n\r\n\t\t\t//счетчик выбранных карт\r\n\t\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\t\t// если выбрано больше или недобор указанных карт запрещает пулить в переменную\r\n\t\t\tif (counter < 8 || counter >= 9) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet tempCardChoosePlayer = [];\r\n\r\n\t\t\t//пушим карты 1го игрока в массив\r\n\t\t\tif (this.playerOneTurn) {\r\n\t\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\t\tif (cards[i].classList.contains('card-to-select')) {\r\n\t\t\t\t\t\ttempCardChoosePlayer.push(cards[i].dataset.info);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.playerOnePullOfCards = this.checkOnSelectedCards(tempCardChoosePlayer, this.playerOneClass);\r\n\t\t\t}\r\n\r\n\t\t\t//пушим карты 2го игрока в массив\r\n\t\t\tif (this.playerTwoTurn) {\r\n\t\t\t\tfor (let i = 0; i < cards.length; i++) {\r\n\t\t\t\t\tif (cards[i].classList.contains('card-to-select')) {\r\n\t\t\t\t\t\ttempCardChoosePlayer.push(cards[i].dataset.info);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.playerTwoPullOfCards = this.checkOnSelectedCards(tempCardChoosePlayer, this.playerTwoClass);\r\n\t\t\t}\r\n\r\n\t\t\t//меняем очередность выбора для игроков\r\n\t\t\tthis.setTurnPriority();\r\n\r\n\t\t\tthis.checkCardsSelectionEnd();\r\n\t\t};\r\n\r\n\t\t// передаем массив из выбранных согласно ID карты и класс выбранного персонажа для поиска в SkillCollection его типа карт\r\n\t\tthis.checkOnSelectedCards = function (datainfo, search) {\r\n\t\t\tlet temp = [];\r\n\r\n\t\t\tfor (let i = 0; i < _cards__WEBPACK_IMPORTED_MODULE_1__.skillCollection[search].length; i++) {\r\n\t\t\t\tfor (let j = 0; j < datainfo.length; j++) {\r\n\t\t\t\t\tif (_cards__WEBPACK_IMPORTED_MODULE_1__.skillCollection[search][i]['id'] == datainfo[j]) {\r\n\t\t\t\t\t\ttemp.push(_cards__WEBPACK_IMPORTED_MODULE_1__.skillCollection[search][i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn temp;\r\n\t\t};\r\n\r\n\t\t//проверяем игроки набрали карты скрываем меню выбора карт, открываем игровое поле\r\n\t\tthis.checkCardsSelectionEnd = function () {\r\n\t\t\tlet counter = document.getElementsByClassName('card-to-select').length;\r\n\r\n\t\t\t// если выбрано больше или недобор указанных карт запрещает пулить в переменную\r\n\t\t\tif (counter < 8 || counter >= 9) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.playerOnePullOfCards.length > 1 && this.playerTwoPullOfCards.length > 1) {\r\n\t\t\t\tthis.selectionEnd.notify();\r\n\t\t\t} else {\r\n\t\t\t\tthis.selectionContinue.notify();\r\n\t\t\t\tthis.setTextChooseInfo();\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//узнаем какая карта была взята для игры и сыграна\r\n\t\tthis.initActionCard = function (eventTarget) {\r\n\t\t\tthis.dragCard = eventTarget;\r\n\r\n\t\t\tif (this.playerOneTurn) {\r\n\t\t\t\tfor (let i = 0; i < this.playerOnePullOfCards.length; i++) {\r\n\t\t\t\t\tif (this.playerOnePullOfCards[i].id == this.dragCard.dataset.info) {\r\n\t\t\t\t\t\tthis.tempCard = this.playerOnePullOfCards[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < this.playerTwoPullOfCards.length; i++) {\r\n\t\t\t\t\tif (this.playerTwoPullOfCards[i].id == this.dragCard.dataset.info) {\r\n\t\t\t\t\t\tthis.tempCard = this.playerTwoPullOfCards[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//конец хода меняет инфо о активном игроке и обновляет выносливость\r\n\t\tthis.turnEndsNextPlayerTurn = function () {\r\n\t\t\tif (this.playerOneTurn) {\r\n\t\t\t\tthis.playerOneTurn = false;\r\n\t\t\t\tthis.playerTwoTurn = true;\r\n\t\t\t\tthis.activePlayer = _game__WEBPACK_IMPORTED_MODULE_2__.player2;\r\n\t\t\t\tthis.passivePlayer = _game__WEBPACK_IMPORTED_MODULE_2__.player1;\r\n\t\t\t} else {\r\n\t\t\t\tthis.playerOneTurn = true;\r\n\t\t\t\tthis.playerTwoTurn = false;\r\n\t\t\t\tthis.activePlayer = _game__WEBPACK_IMPORTED_MODULE_2__.player1;\r\n\t\t\t\tthis.passivePlayer = _game__WEBPACK_IMPORTED_MODULE_2__.player2;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/gameModel.js?");

/***/ }),

/***/ "./js/modules/playerController.js":
/*!****************************************!*\
  !*** ./js/modules/playerController.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PlayersController)\n/* harmony export */ });\nclass PlayersController {\r\n\tconstructor(model, view) {\r\n\t\tconst gameModel = model;\r\n\t\tconst boardView = view;\r\n\r\n\t\tif (boardView.hasOwnProperty('doCardAction')) {\r\n\t\t\tboardView.doCardAction.attach(() => this.playCard());\r\n\t\t}\r\n\r\n\t\tif (boardView.hasOwnProperty('endTurn')) {\r\n\t\t\tboardView.endTurn.attach(() => this.doEndTurn());\r\n\t\t}\r\n\r\n\t\tthis.playCard = function() {\r\n\t\t\tgameModel.doAction();\r\n\t\t}\r\n\r\n\t\tthis.doEndTurn = function() {\r\n\t\t\tgameModel.endTurn();\r\n\t\t}\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/playerController.js?");

/***/ }),

/***/ "./js/modules/playerModel.js":
/*!***********************************!*\
  !*** ./js/modules/playerModel.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Players)\n/* harmony export */ });\n/* harmony import */ var _eventsModel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./eventsModel */ \"./js/modules/eventsModel.js\");\n\r\n\r\nclass Players {\r\n\tconstructor(game, board) {\r\n\t\tthis.healthPoints = 100;\r\n\t\tthis.staminaPoints = 4;\r\n\t\tthis.defendPoints = 7;\r\n\r\n\t\tconst gameModel = game;\r\n\t\tconst boardModel = board;\r\n\r\n\t\tthis.playerViewUpdate = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\t\tthis.cardDraw = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\t\tthis.cardDiscard = new _eventsModel__WEBPACK_IMPORTED_MODULE_0__.default();\r\n\r\n\t\tthis.init = function() {\r\n\t\t\tthis.updateView();\r\n\t\t};\r\n\r\n\t\tthis.endTurn = function() {\r\n\t\t\tgameModel.activePlayer.staminaPoints = 4;\r\n\t\t\tgameModel.passivePlayer.staminaPoints = 4;\r\n\r\n\t\t\tthis.updateView();\r\n\t\t}\r\n\r\n\t\tthis.updateView = function() {\r\n\t\t\tthis.playerViewUpdate.notify();\r\n\t\t};\r\n\r\n\t\tthis.doAction = function() {\r\n\t\t\tswitch (gameModel.tempCard.type) {\r\n\t\t\t\tcase 'attack':\r\n\t\t\t\t\tthis.standartAttack(gameModel.tempCard);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'attackDrawDiscard':\r\n\t\t\t\t\tthis.attackDrawDiscard(gameModel.tempCard);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'attackAddEffect':\r\n\t\t\t\t\tthis.sideEffectAttack(gameModel.tempCard);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'defend':\r\n\t\t\t\t\tthis.standartDefend(gameModel.tempCard);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'defendAddEffect':\r\n\t\t\t\t\tthis.sideEffectDefend(gameModel.tempCard);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'defendDrawDiscard':\r\n\t\t\t\t\tthis.defendDrawDiscard(gameModel.tempCard);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'defendAndAttack':\r\n\t\t\t\t\tthis.defendWithAttack(gameModel.tempCard);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.randomCardDraw = function() {\r\n\t\t\tlet randomCardDraw = Math.floor(Math.random() * gameModel.playerOnePullOfCards.length);\r\n\r\n\t\t\tif (gameModel.playerOneTurn) {\r\n\t\t\t\tthis.cardDraw.notify(gameModel.playerOnePullOfCards[randomCardDraw]);\r\n\t\t\t} else {\r\n\t\t\t\tthis.cardDraw.notify(gameModel.playerTwoPullOfCards[randomCardDraw]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.randomCardDiscard = function() {\r\n\t\t\tlet randomDiscard = Math.floor(Math.random() * boardModel.cardInHand.children.length);\r\n\r\n\t\t\t//it will be error if you use DaggerThrow as the last card in hand so w check on this\r\n\t\t\tif (boardModel.cardInHand.children.length > 0) {\r\n\t\t\t\tthis.cardDiscard.notify(boardModel.cardInHand.children[randomDiscard]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// we take condition only for card \"expertise\"\r\n\t\tthis.massiveRandomDraw = function(card, condition) {\r\n\t\t\tlet tempIndex = [];\r\n\r\n\t\t\t//делаем проверку чтобы карты в руке не повторялись\r\n\t\t\tfor (let i = 0; i < card.effect - condition; i++) {                  // количество карт в руку\r\n\t\t\t\tlet n = Math.floor(Math.random() * 8);            // количество набранных карт\r\n\t\t\t\tif (tempIndex.indexOf(n) === -1) {\r\n\t\t\t\t\ttempIndex.push(n);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (gameModel.playerOneTurn) {\r\n\t\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\t\tthis.cardDraw.notify(gameModel.playerOnePullOfCards[tempIndex[i]]);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < tempIndex.length; i++) {\r\n\t\t\t\t\tthis.cardDraw.notify(gameModel.playerTwoPullOfCards[tempIndex[i]]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.standartAttack = function(card) {\r\n\t\t\tif (gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (gameModel.passivePlayer.defendPoints) {\r\n\t\t\t\tlet test = gameModel.passivePlayer.defendPoints - card.effect;\r\n\r\n\t\t\t\tif (test < 0) {\r\n\t\t\t\t\tgameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\t\tgameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgameModel.passivePlayer.defendPoints = test;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tgameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t\t}\r\n\r\n\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\t\t};\r\n\r\n\t\tthis.sideEffectAttack = function(card) {\r\n\t\t\t// some of cards have special side effect, so we do additional if check\r\n\t\t\t// to make for them special methods\r\n\t\t\tif (gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'riddleWithHoles') {\r\n\t\t\t\tgameModel.passivePlayer.healthPoints -= card.effect;\r\n\r\n\t\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\t\tthis.updateView();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'judjment') {\r\n\t\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\t\tif (sideEffect == undefined) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgameModel.passivePlayer.healthPoints = sideEffect;\r\n\r\n\t\t\t\tthis.updateView();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// some of cards havee common side effect so we can grooup it in one method\r\n\t\t\tif (card.sideEffect) {\r\n\t\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\t\tif (gameModel.passivePlayer.defendPoints) {\r\n\t\t\t\t\tlet test = gameModel.passivePlayer.defendPoints - sideEffect;\r\n\r\n\t\t\t\t\tif (test < 0) {\r\n\t\t\t\t\t\tgameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\t\t\tgameModel.passivePlayer.healthPoints -= test;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgameModel.passivePlayer.defendPoints = test;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (sideEffect) {\r\n\t\t\t\t\t\tgameModel.passivePlayer.healthPoints -= sideEffect;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\t\t};\r\n\r\n\t\tthis.attackDrawDiscard = function(card) {\r\n\t\t\t// some of cards have special side effect, so we do additional if check\r\n\t\t\t// to make for them special methods\r\n\t\t\tif (gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (gameModel.passivePlayer.defendPoints) {\r\n\t\t\t\tlet test = gameModel.passivePlayer.defendPoints - card.effect;\r\n\r\n\t\t\t\tif (test < 0) {\r\n\t\t\t\t\tgameModel.passivePlayer.defendPoints = 0;\r\n\r\n\t\t\t\t\ttest = Math.abs(test);\r\n\t\t\t\t\tgameModel.passivePlayer.healthPoints -= test;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgameModel.passivePlayer.defendPoints = test;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tgameModel.passivePlayer.healthPoints -= card.effect;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'daggerThrow') {\r\n\t\t\t\tthis.randomCardDiscard();\r\n\t\t\t\tthis.randomCardDraw();\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'quickSlash') {\r\n\t\t\t\tthis.randomCardDraw();\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'cutThroughFate') {\r\n\t\t\t\tlet sideEffect = card.sideEffect();\r\n\t\t\t\tgameModel.activePlayer.defendPoints += sideEffect;\r\n\t\t\t\tthis.randomCardDraw();\r\n\t\t\t}\r\n\r\n\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\t\t};\r\n\r\n\t\tthis.standartDefend = function(card) {\r\n\t\t\tif (gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tgameModel.activePlayer.defendPoints += card.effect;\r\n\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\t\t};\r\n\r\n\t\tthis.sideEffectDefend = function(card) {\r\n\t\t\t// some of cards have special side effect, so we do additional if check\r\n\t\t\t// to make for them special methods\r\n\t\t\tif (gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'nirvana') {\r\n\t\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\t\tgameModel.activePlayer.defendPoints = sideEffect;\r\n\t\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\t\tthis.updateView();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'meditate') {\r\n\t\t\t\tlet test = gameModel.activePlayer.staminaPoints - card.cost + card.effect;\r\n\r\n\t\t\t\tif (test > 4) {\r\n\t\t\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\t\t\t\t\tgameModel.activePlayer.staminaPoints = 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\t\t\t\t\tgameModel.activePlayer.staminaPoints += card.effect;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateView();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.sideEffect) {\r\n\t\t\t\tlet sideEffect = card.sideEffect();\r\n\r\n\t\t\t\tgameModel.activePlayer.defendPoints += sideEffect;\r\n\t\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\t\tthis.updateView();\r\n\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.defendWithAttack = function(card) {\r\n\t\t\tif (gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.sideEffectAttack(card);\r\n\t\t\tthis.standartDefend(card);\r\n\r\n\t\t\t//compensate for double stamina reduce from methods above\r\n\t\t\tgameModel.activePlayer.staminaPoints += card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\t\t};\r\n\r\n\t\tthis.defendDrawDiscard = function(card) {\r\n\t\t\t// some of cards have special side effect, so we do additional if check\r\n\t\t\t// to make for them special methods\r\n\t\t\tif (gameModel.activePlayer.staminaPoints < card.cost) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'prepared') {\r\n\t\t\t\tthis.randomCardDiscard();\r\n\t\t\t\tthis.randomCardDraw();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'warcry') {\r\n\t\t\t\tthis.randomCardDraw();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'survivor') {\r\n\t\t\t\tthis.randomCardDiscard();\r\n\r\n\t\t\t\tgameModel.activePlayer.defendPoints += card.effect;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'bloodletting') {\r\n\t\t\t\tthis.randomCardDraw();\r\n\r\n\t\t\t\tgameModel.activePlayer.healthPoints -= card.cost;\r\n\r\n\t\t\t\tthis.updateView();\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'expertise') {\r\n\t\t\t\tthis.massiveRandomDraw(card, boardModel.cardInHand.children.length);\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'alpha') {\r\n\r\n\t\t\t\t// убираем лишние карты из руки\r\n\t\t\t\tfor (let i = 0; i < boardModel.cardInHand.children.length; i++) {\r\n\t\t\t\t\tif (boardModel.cardInHand.children[i].classList.contains('cards-to-play')) {\r\n\t\t\t\t\t\tthis.randomCardDiscard(boardModel.cardInHand.children[i]);\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.massiveRandomDraw(card, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'backFlip') {\r\n\t\t\t\tlet sideEffect = card.sideEffect();\r\n\t\t\t\tgameModel.activePlayer.defendPoints += sideEffect;\r\n\r\n\t\t\t\tthis.massiveRandomDraw(card, 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (card.name == 'thirdEye') {\r\n\t\t\t\tgameModel.activePlayer.defendPoints += card.effect;\r\n\r\n\t\t\t\tthis.randomCardDraw();\r\n\t\t\t}\r\n\r\n\t\t\tgameModel.activePlayer.staminaPoints -= card.cost;\r\n\r\n\t\t\tthis.updateView();\r\n\t\t};\r\n\t}\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/playerModel.js?");

/***/ }),

/***/ "./js/modules/playerView.js":
/*!**********************************!*\
  !*** ./js/modules/playerView.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PlayersView)\n/* harmony export */ });\nclass PlayersView {\r\n\tconstructor(model1, model2, container) {\r\n\t\tconst modelPlayer1 = model1;\r\n\t\tconst modelPlayer2 = model2;\r\n\t\tconst playerContainer = container;\r\n\r\n\t\tthis.player1HP = playerContainer.querySelector('.player-1__hp-bar-inner');\r\n\t\tthis.player1HPValue = playerContainer.querySelector('.player-1__hp-value');\r\n\t\tthis.player1DefenceValue = playerContainer.querySelector('.player-1__defence-value');\r\n\t\tthis.player1StaminaValue = playerContainer.querySelector('.player-1__stamina-value');\r\n\r\n\t\tthis.player2HP = playerContainer.querySelector('.player-2__hp-bar-inner');\r\n\t\tthis.player2HPValue = playerContainer.querySelector('.player-2__hp-value');\r\n\t\tthis.player2DefenceValue = playerContainer.querySelector('.player-2__defence-value');\r\n\t\tthis.player2StaminaValue = playerContainer.querySelector('.player-2__stamina-value');\r\n\r\n\t\tmodelPlayer1.playerViewUpdate.attach(() => this.updateViewPlayer());\r\n\t\tmodelPlayer2.playerViewUpdate.attach(() => this.updateViewPlayer());\r\n\r\n\t\t// устанавливаем первые параметры здоровье, защита, стамина\r\n\t\tthis.updateViewPlayer = function() {\r\n\t\t\tthis.player1HPValue.textContent = modelPlayer1.healthPoints;\r\n\t\t\tthis.player1DefenceValue.textContent = modelPlayer1.defendPoints;\r\n\t\t\tthis.player1StaminaValue.textContent = modelPlayer1.staminaPoints;\r\n\t\t\tthis.player1HP.style.width = modelPlayer1.healthPoints + '%';\r\n\r\n\t\t\tthis.player2HPValue.textContent = modelPlayer2.healthPoints;\r\n\t\t\tthis.player2DefenceValue.textContent = modelPlayer2.defendPoints;\r\n\t\t\tthis.player2StaminaValue.textContent = modelPlayer2.staminaPoints;\r\n\t\t\tthis.player2HP.style.width = modelPlayer2.healthPoints + '%';\r\n\t\t};\r\n\t}\r\n\r\n\t// this.updateViewPlayer2 = function () {\r\n\t//\r\n\t// };\r\n}\r\n\n\n//# sourceURL=webpack://cardgameproject/./js/modules/playerView.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./js/game.js");
/******/ 	
/******/ })()
;